void func_80052E30(u8 index);
void snd_load_audio_data(s32 outputRate);
void snd_reset_instrument(Instrument* instrument);
void snd_reset_drum_entry(BGMDrumInfo* arg0);
void snd_reset_instrument_entry(BGMInstrumentInfo* arg0);
void snd_update_sequence_players(void);
void snd_add_sfx_output(void);
void func_80053654(AuGlobals* globals);
void func_80053888(AlUnkVoice* arg0, u8 arg1);
void func_800538C4(AlUnkVoice* arg0, u8 arg1);
f32 snd_compute_pitch_ratio(s32 arg0);
void snd_initialize_bgm_fade(Fade* fade, s32 time, s32 startValue, s32 endValue);
void snd_clear_bgm_fade(Fade* fade);
void func_80053A28(Fade* fade);
void func_80053A98(u8 arg0, u16 arg1, s32 arg2);
void func_80053AC8(Fade* fade);
void snd_set_fade_vol_scale(Fade* fade, s16 value);
void func_80053B04(Fade* fade, u32 arg1, s32 target);
void func_80053BA8(Fade* fade);
Instrument* func_80053BE8(AuGlobals* globals, u32 bank, u32 patch, AlUnkInstrumentData* arg3);
void snd_get_sequence_player_and_track(u32 playerIndex, s32** outCurrentTrackData, BGMPlayer** outPlayer);
void snd_get_sequence_player(u32 playerIndex, BGMPlayer** outPlayer);
s32 snd_load_song_files(u32 arg0, BGMHeader* arg1, BGMPlayer* arg2);
s32 func_80053E58(s32 arg0, u8* arg1);
BGMPlayer* func_80053F64(s32 arg0);
s32 func_80053F80(u32 arg0);
BGMPlayer* func_80054248(u8 arg0);
void snd_load_INIT(AuGlobals* arg0, s32 romAddr, ALHeap* heap);
s32 snd_fetch_SBN_file(u32 fileIdx, s32 format, SBNFileEntry* arg2);
void snd_load_PER(AuGlobals* globals, s32 romAddr);
void snd_load_PRG(AuGlobals* arg0, s32 romAddr);
// INCLUDE_ASM(s32, "audio/2e230_len_2190", snd_load_BGM);
InstrumentGroup* snd_get_BK_instruments(s32 bankGroup, u32 bankIndex);
// s32 snd_load_BK_to_bank(s32 bkFileOffset, SoundBank* bank, s32 bankIndex, s32 bankGroup);
void snd_swizzle_BK_instruments(s32 bkFileOffset, SoundBank* bank, InstrumentGroup instruments, u32 instrumentCount, u8 arg4);
//s32* func_80054AA0(s32* bkFileOffset, void* vaddr, s32 bankIndex, s32 bankGroup);
s32 snd_load_BK(s32 bkFileOffset, s32 bankIndex);
void func_80054C84(s32 bankIndex, s32 bankGroup);
void func_80054CE0(s32 arg0, u32 idx);
s32 func_80054D74(s32 arg0, s32 arg1);
void func_80054DA8(u32 arg0);
void snd_read_rom(s32 romAddr, void* buffer, u32 size);
void snd_memset(s8* dst, s32 size, u8 value);
void snd_bcopy(s8* src, s8* dest, s32 size);
void snd_copy_words(void* src, void* dst, s32 size);
