
% system/global functions, scripts, etc.
% excludes 'overlay memory': 80200000 - 802C3000

{version=1.0}
{scope=us:common}

sig : draw_window_contents : void : A0 ptr userData, A1 int baseX, A2 int baseY, ...
	A3 int width, SP[10] int height, SP[14] int opacity, SP[18] int darkening

/%
RAM: 80025C00 - 8009A5B0
ROM:     1000 -    759B0
%/
%{
asm : 80025C00, 001000 : entry_point				: void : void
asm : 80025c60 : isview_init : void : void
asm : 80025cc0 : isview_printA : void : char* fmt, int arg0, int arg1, int arg2 "arg0-2 = varargs"
asm : 80025cfc : isview_printB : void : char* fmt, int arg0, int arg1, int arg2 "arg0-2 = varargs"
asm : 80025d38 : isview_printC : void : char* fmt, int arg0, int arg1, int arg2 "arg0-2 = varargs"
asm : 80025d74 : isview_print "passed to _Printf" : int : ptr context "unused", ptr, int len
asm : 80025f44 : isview_print_err : void : char* message, char* filename, int lineNum
asm : 80025F70, 001370 : boot_main					: void : void
asm : 8002605C, 00145C : gfxRetrace_Callback		: void : int gfxTaskNum
asm : 80026164, 001564 : gfx_task_main : void : void
asm : 8002670C, 001B0C : gfxPreNMI_Callback			: void : void
asm : 80026740, 001B40 : step_game_loop				: void : void
asm : 800269EC, 001DEC : gfx_task_background : void : void
asm : 80026B08, 001F08 : gfx_draw_frame				: void : void
asm : 80026DDC, 0021DC : load_engine_data			: void : void

asm : 80027088, 002488 : set_time_freeze_mode : void : int "0-4 inclusive"
asm : 80027190, 002590 : get_time_freeze_mode : int "0-4 inclusive" : void

asm : 800271A0, 0025A0 : gfx_init_state "set initial values for combines, geometry mode, texture, and other mode" : void : void

asm : 80027E10, 003210 : gfx_draw_background : void : void

asm : 80028874, 003C74 : update_input				: void : void
asm : 80028EE0, 0042E0 : poll_rumble				: void : void 	% sets nuContRmbModeSet"0,2=NU_CONT_RMB_MODE_AUTORUN"
asm : 80028F08, 004308 : start_rumble				: void : int freq, int duration
asm : 80028F8C, 00438C : update_max_rumble_duration : void : void
asm : 80028FE0, 0043E0 : reset_max_rumble_duration  : void : void
asm : 80028FF0, 0043F0 : length2D					: F0 float length : F12 float x, F14 float y

asm : 80029030, 004430 : _heap_create				: heap_node* : int addr, int size
asm : 8002906C, 00446C : _heap_malloc				: ptr data : heap_node* head, int size
asm : 80029164, 004564 : _heap_malloc_tail			: ptr data : heap_node* head, int size
asm : 8002921C, 00461C : _heap_free					: bool failed : heap_node* head, ptr data
asm : 800292C4, 0046C4 : _heap_realloc				: ptr data : heap_node* head, ptr data, int newSize
asm : 800293D4, 0047D4 : cosine						: float cosAngle : int angle "degrees"
asm : 800294B0, 0048B0 : sign						: int sign : int num
asm : 800294C4, 0048C4 : int_to_string				: char* string : int value, char* buf, int base
asm : 80029600, 004A00 : mem_clear					: void : ptr data, int numBytes
asm : 80029620, 004A20 : transform_point			: void : matrix4f* mtx, float inx, float iny, float inz, float ins, float* outx, float* outy, float* outz, float* outs
asm : 80029720, 004B20 : copy_matrix				: void : matrix4f* src, matrix4f* dest
asm : 8002973C, 004B3C : dma_copy					: int size : int start, int end, ptr dest
asm : 800297D4, 004BD4 : dma_write : int size : int start, int end, ptr dest
asm : 80029860, 004C60 : dma_write_block : int size : int start, int end, ptr dest
asm : 80029900, 004D00 : advance_rng "muliply rng value by waterman constant (5D588B65). rng value initialized at boot to count regsiter (BRX:80026050)." : int result : void
asm : 80029934, 004D34 : rand_float : F0 float result "from 0.0 to 1.0" : void
asm : 800299FC, 004DFC : rand_int					: int result : int max
asm : 80029A7C, 004E7C : signF						: F0 float sign : F12 float num
asm : 80029AC4, 004EC4 : round						: V0 int rounded : F12 float num
asm : 80029B24, 004F24 : clamp_angle				: F0 float clamped : F12 float angle % also seems to work on integer inputs, still returning a float.
asm : 80029C28, 005028 : get_clamped_angle_diff		: F0 float diff : F12 float a, F14 float b
asm : 80029C80, 005080 : atan2 "uses LUT at 80074414" : F0 float angle "deg" : F12 float startX, F14 float startZ, A2 float endX, A3 float endZ
asm : 80029E20, 005220 : get_player_normal_yaw		: F0 float yaw : void
asm : 80029E50, 005250 : get_player_normal_pitch	: F0 float pitch : void
asm : 80029ED4, 0052D4 : dist2D						: float dist : float Ax, float Ay, float Bx, float By, 
asm : 80029F2C, 00532C : dist3D						: F0 float dist : F12 float Ax, F14 float Ay, A2 float Az, A3 float Bx, SP[10] float By, SP[14] float Bz
asm : 80029F9C, 00539C : add_vec2D_polar			: void : A0 float* x, A1 float* y, A2 float r, A3 float theta
asm : 8002A034, 005434 : _wrap_trig_lookup_value	: int : float theta
asm : 8002A0B4, 0054B4 : sin_cos_rad				: void : F12 float theta "radians", A1 float* outSinTheta, A2 float* outCosTheta
asm : 8002A16C, 00556C : sin_rad					: F0 float sinAngle : F12 float angle "radians"
asm : 8002A1D0, 0055D0 : cos_rad					: F0 float cosAngle : F12 float angle "radians"
asm : 8002A234, 005634 : sin_cos_deg				: void : F12 float theta "degrees", A1 float* outSinTheta, A2 float* outCosTheta
asm : 8002A2EC, 0056EC : sin_deg					: F0 float sinAngle : F12 float angle "degrees"
asm : 8002A350, 005750 : cos_deg					: F0 float cosAngle : F12 float angle "degrees"
asm : 8002A3B4, 0057B4 : update_lerp				: F0 float alpha "0.0 - 1.0" : #easing, float start, float end, int elapsed "frames", int duration "frames"
asm : 8002A904, 005D04 : appendGfx_startup_prim_rect : void : int r, int g, int b, int a, int ulX, int ulY, int lrX, int lrY
asm : 8002AAC4, 005EC4 : startup_draw_prim_rect_COPY : void : int ulX, int ulY, int lrX, int lrY, int r, int g, int b, int a
asm : 8002AB5C, 005F5C : startup_draw_prim_rect : void : int ulX, int ulY, int lrX, int lrY, int r, int g, int b, int a
% <-- split -->
asm : 8002AC00, 006000 : general_heap_create		: heap_node* head : void
asm : 8002AC28, 006028 : general_heap_malloc		: ptr data : int size
asm : 8002AC50, 006050 : general_heap_malloc_tail	: ptr data : int size
asm : 8002AC78, 006078 : general_heap_free			: bool failed : ptr data
asm : 8002ACA0, 0060A0 : battle_heap_create			: heap_node* head : void
%asm : 8002ACDC : "stub"
asm : 8002ACE4, 0060E4 : heap_malloc "uses battle heap in battle, general heap otherwise" : ptr data : int size
asm : 8002AD2C, 00612C : heap_free "uses battle heap in battle, general heap otherwise" : bool failed : ptr data
asm : 8002AD74, 006174 : collision_heap_create		: heap_node* head : void
asm : 8002ADB0, 0061B0 : collision_heap_malloc		: ptr data : int size
asm : 8002ADF4, 0061F4 : collision_heap_free		: bool failed : ptr data
% <-- split -->
asm : 8002AE40, 006240 : get_spirits_rescued "uses StoryProgress" : int numRescued : void
asm : 8002AF40, 006340 : fio_calc_header_checksum "checks currently loaded file" : int checksum : void
asm : 8002AF70, 006370 : fio_validate_header_checksums "checks currently loaded file" : int checksum : void
% asm : 8002AFD8 : fio_has_valid_backup ?
% asm : 8002B04C : fio_flush_backups ?
asm : 8002B0D0, 0064D0 : fio_calc_file_checksum		: int checksum : savedata* fileData
asm : 8002B0F8, 0064F8 : fio_validate_file_checksum	: bool valid : savedata* fileData
asm : 8002B154, 006554 : fio_fetch_saved_file_info "finds a valid save data index that matches the current game file" : bool valid : void
asm : 8002B2D0, 0066D0 : fio_load_game				: bool success : int saveSlot
asm : 8002B374, 006774 : fio_save_game				: bool success : int saveSlot
asm : 8002B42C, 00682C : fio_erase_game				: void : int saveSlot
asm : 8002B490, 006890 : fio_deserialize_state		: void : void
asm : 8002B630, 006A30 : fio_serialize_state		: void : void
asm : 8002B84C, 006C4C : fio_init_flash				: OSPiHandle* : void
asm : 8002B868, 006C68 : fio_read_flash				: bool success : int pageNum, ptr readBuffer, int numBytes
asm : 8002B948, 006D48 : fio_write_flash			: bool success : int pageNum, ptr writeBuffer, int numBytes
asm : 8002BA1C, 006E1C : fio_erase_flash			: void : int pageNum
% <-- split -->
asm : 8002BA40, 006E40 : initialize_curtains : void : void
asm : 8002BA78, 006E78 : update_curtains "does nothing" : void : void
asm : 8002BA80, 006E80 : render_curtains : void : void
asm : 8002BEDC, 0072DC : set_curtain_scale_goal : void : float scale
asm : 8002BEEC, 0072EC : set_curtain_scale : void : float scale
asm : 8002BF04, 007304 : set_curtain_draw_callback : void : code fpOnDrawCurtains
asm : 8002BF14, 007314 : set_curtain_fade_goal : void : float amount
asm : 8002BF24, 007324 : set_curtain_fade : void : float amount
% <-- split -->
asm : 8002BF40, 007340 : crash_delay_msec "spinlock using osGetTime" : void : int duration "milliseconds"
% 8002BFB0
% 8002C054
% 8002C1D4
asm : 8002C208, 007608 : crash_printf_string		: void : int posX, int posY, char* fmt, ptr value
asm : 8002C2B8, 0076B8 : crash_print_fpr			: void : int x, int y, int regNum, ptr value
asm : 8002C3B0, 0077B0 : crash_show_handler			: void : crash* crash
asm : 8002C81C, 007C1C : crash_monitor_thread		: void : void
% 8002C890
asm : 8002C8B0, 007CB0 : crash_create_monitor		: void : void
% 8002C94C
% <-- end of file

asm : 8002CA40, 007E40 : nuGfxTaskMgr				: ??? :	???
asm : 8002CB38, 007F38 : nuGfxTaskMgrInit			: void : void
asm : 8002CCC4, 0080C4 : nuGfxTaskStart				: void : gfx*, int size, int microcode, int flag
asm : 8002CE30, 008230 : nuSiMgrInit				: int :	void
asm : 8002CF28, 008328 : nuSiSendMesg				: int : short mesg "NUScMsg", ptr data
asm : 8002CF8C, 00838C : nuSiMgrStop				: void : void
asm : 8002CFAC, 0083AC : nuSiMgrRestart				: void : void
asm : 8002CFD0, 0083D0 : nuSiMgrThread				: ??? :	???
% <-- split -->
asm : 8002d160, 008560 : cp_load_checks				: void : void
asm : 802b2000, 316F30 : cp_create_audio_system		: void : void
asm : 802b203c, 316F6C : cp_check_load_engine_data	: void : void
asm : 802b2078, 316FA8 : cp_create_general_heap		: void : void
asm : 802b20b4, 316FE4 : cp_create_battle_heap		: void : void
% <-- split -->
asm : 8002D400, 008800 : update_cameras				: ??? :	???
asm : 8002D73C, 008B3C : render_frame				: ??? :	??? % "void" = "bool ???"
asm : 8002DEF4, 0092F4 : create_cameras_a			: void : void
asm : 8002E038, 009438 : create_cameras_b			: void : void
asm : 8002E16C, 00956C : initialize_next_camera "initializes first camera with flags == 0, called 4 times to set them all up" : camera* : cam_init_data*
asm : 8002E314, 009714 : set_cam_viewport			: void : #camID, int posX, int posY, int width, int height
asm : 8002E4E8, 0098E8 : get_cam_viewport			: void : #camID, int* posX, int* posY, int* width, int* height
asm : 8002E538, 009938 : get_screen_coords			: void : #camID, float x, float y, float z, int* outx, int* outy, int* outz
asm : 8002E910, 009D10 : update_camera_mode_4		: void : camera* cam
asm : 8002ECF8, 00A0F8 : update_camera_mode_2		: void : camera* cam
asm : 8002F290, 00A690 : update_camera_mode_1		: void : camera* cam
asm : 8002F850, 00AC50 : update_camera_mode_0		: void : camera* cam
asm : 8002F990, 00AD90 : update_camera_mode_6		: void : camera* cam
asm : 8002FCE0, 00B0E0 : update_camera_mode_unused	: void : camera* cam
asm : 80030000, 00B400 : update_camera_mode_5		: void : camera* cam
asm : 80030458, 00B858 : test_ray_zone_aabb 		: camera_control_settings* settings "0 if no hit" : float x, float y, float z
asm : 800304FC, 00B8FC : update_camera_from_controller "contains all the math for positioning the camera goal target, position, and orientation depending on the camera controller" : void : camera* cam, {out} cam_pos_settings* initialSettings, {out} camera_control_settings** prevController, cam_pos_settings* targetSettings, camera_control_settings** currentController, float posX, float posY, float posZ, float targetX, float targetY, float targetZ, bool changingMap, float* moveAlpha, bool changingZone
asm : 80031494, 00C894 : update_camera_zone_interp	: void : camera* cam

asm : 80032210, 00D610 : test_ray_zone : V0 camera_control_settings* settings : F12 float x, F14 float y, A2 float z, A3 {out} zone** hitZone

asm : 80033394, 00E794 : create_camera_leadplayer_matrix : void : camera* cam
% <-- split -->
asm : 800334F0, 00E8F0 : set_game_mode				: void : #gameMode	% there are many of these: battle, world, pause, file select, several others used for intro and main menu...
asm : 80033528, 00E928 : get_game_mode				: int mode : void
% <-- split -->
asm : 80033540, 00E940 : state_init_startup : void : void
asm : 80033568, 00E968 : state_step_startup : void : void
asm : 80033788, 00EB88 : state_drawUI_startup : void : void
% <-- split -->
asm : 800337D0, 00EBD0 : intro_logos_set_fade_alpha : void : byte alpha
asm : 800337E0, 00EBE0 : intro_logos_set_fade_color : void : byte color "used for R G B"
asm : 800337F8, 00EBF8 : intro_logos_fade_in : void : int amount "decrements alpha by amount"
asm : 80033830, 00EC30 : intro_logos_fade_out : bool done : int amount "increments alpha by amount"
asm : 80033874, 00EC74 : intro_logos_update_fade : void : void
% <-- split -->
asm : 800338D0, 00ECD0 : state_init_battle : void : void
asm : 800338E4, 00ECE4 : state_step_battle : void : void
asm : 80033B54, 00EF54 : state_drawUI_battle "show battle ui during battle, screen transition in world" : void : void
asm : 80033B88, 00EF88 : state_init_end_battle : void : void
asm : 80033BC0, 00EFC0 : state_step_end_battle : void : void
asm : 80033E64, 00F264 : state_drawUI_end_battle : void : void
% <-- split -->
asm : 80033E70, 00F270 : state_init_logos : void : void
asm : 800340A4, 00F4A4 : state_step_logos : void : void
asm : 80034388, 00F788 : state_drawUI_logos : void : void
asm : 800343A4, 00F7A4 : appendGfx_intro_logos : void : void
% <-- split -->
asm : 80034940, 00FD40 : state_init_pause : void : void
asm : 8003497C, 00FD7C : state_step_pause : void : void
asm : 80034BF4, 00FFF4 : state_drawUI_pause : void : void
asm : 80034BFC, 00FFFC : state_init_unpause : void : void
asm : 80034C3C, 01003C : state_step_unpause : void : void
asm : 80034FF0, 0103F0 : state_drawUI_unpause : void : void
% <-- split -->
% states C/D are used for the language select screen for PAL
asm : 80035000, 010400 : state_init_language_select : void : void
asm : 80035058, 010458 : state_init_file_select : void : void
asm : 800351C8, 0105C8 : state_step_language_select : void : void
asm : 800354EC, 0108EC : state_step_file_select : void : void
asm : 800355C4, 0109C4 : state_drawUI_language_select : void : void
asm : 800355CC, 0109CC : state_drawUI_file_select : void : void
asm : 800355D4, 0109D4 : state_init_exit_language_select : void : void
asm : 80035660, 010A60 : state_init_exit_file_select : void : void
asm : 80035704, 010B04 : state_step_exit_language_select : void : void
asm : 80035B40, 010F40 : state_step_exit_file_select : void : void
asm : 80035D18, 011118 : state_drawUI_exit_language_select : void : void
asm : 80035D20, 011120 : state_drawUI_exit_file_select : void : void
% <-- split -->
asm : 80035D30, 011130 : state_init_world : void : void
asm : 80035D54, 011154 : state_step_world : void : void
asm : 80035DA0, 0111A0 : state_drawUI_world : void : void
asm : 80035DCC, 0111CC : state_world_draw_aux_ui : void : void
% <-- split -->
% 80035df0
asm : 80035E00, 011200 : state_init_enter_demo : void : void
asm : 80035E24, 011224 : state_init_enter_world : void : void
asm : 80035E54, 011254 : init_enter_world_shared : void : void
asm : 80035EEC, 0112EC : state_step_enter_world : void : void
asm : 800360FC, 0114FC : state_drawUI_enter_world : void : void
asm : 80036130, 011530 : state_init_change_map : void : void
asm : 8003617C, 01157C : state_step_change_map : void : void
asm : 800363FC, 0117FC : state_drawUI_change_map : void : void
/%
asm : 80036430, 011830 : state_init_mode_06 : void : void
asm : 8003646C, 01186C : state_step_mode_06 : void : void
asm : 80036640, 011A40 : state_drawUI_mode_06 : void : void
%/
% <-- split -->
asm : 80036650, 011A50 : state_init_intro : void : void
asm : 80036854, 011C54 : state_step_intro : void : void
asm : 80036DE0, 0121E0 : state_drawUI_intro : void : void
% <-- split -->
asm : 80036DF0, 0121F0 : state_init_title_screen : void : void
asm : 800370B4, 0124B4 : state_step_title_screen : void : void
asm : 800375A4, 0129A4 : state_drawUI_title_screen : void : void
asm : 80037638, 012A38 : appendGfx_title_screen : void : void
asm : 80037960, 012D60 : draw_title_screen_NOP : void : void
asm : 80037968, 012D68 : title_screen_draw_images : void : float logoAmount, float copyrightAmount
asm : 80037994, 012D94 : title_screen_draw_logo : void : float amount
asm : 80037BC8, 012FC8 : title_screen_draw_press_start : void : void
asm : 80037E14, 013214 : title_screen_draw_copyright : void : float amount
% <-- split -->
asm : 80038080, 013480 : state_init_demo 		: void : void
asm : 800380F4, 0134F4 : state_step_demo 		: void : void
asm : 8003845C, 01385C : state_drawUI_demo 		: void : void
% <-- split -->
asm : 80038470, 013870 : STUB_npc_callback : void : void
asm : 80038478, 013878 : mtx_ident_mirror_y		: void : matrix4f* mtx
asm : 800384BC, 0138BC : clear_npcs	: void : void

asm : 8003852C, 01392C : init_npc_list			: void : void
asm : 80038598, 013998 : _create_npc : int listIndex : npc_blueprint* bp, uint* animList, bool skipLoadingAnims "only set when loading partner npcs"
asm : 80038844, 013C44 : create_basic_npc : int listIndex : npc_blueprint* bp
asm : 80038864, 013C64 : create_standard_npc : int listIndex : npc_blueprint* bp, uint* animList
asm : 80038880, 013C80 : create_partner_npc : int listIndex : npc_blueprint* bp
asm : 800388A0, 013CA0 : free_npc_by_index : void : int listIndex
asm : 800389CC, 013DCC : free_npc				: void : npc*
asm : 80038ADC, 013EDC : get_npc_by_index		: npc* : int listIndex
asm : 80038AFC, 013EFC : npc_do_world_collision "does traces along yaw, yaw +/- 45, and yaw +/- 135" : void : npc*
asm : 8003900C, 01440C : npc_do_other_npc_collision "does collision with all other npcs" : void : npc*
asm : 800392D8, 0146D8 : npc_do_player_collision : bool collided : npc*
asm : 80039688, 014A88 : npc_do_gravity : void : npc*
asm : 80039930, 014D30 : update_npcs : void : void
asm : 80039DA4, 0151A4 : npc_get_render_yaw : float yaw : npc*
asm : 80039FD0, 0153D0 : appendGfx_npc	: void : npc*
asm : 8003A7F0, 015BF0 : render_npcs			: void : void
asm : 8003AA54, 015E54 : npc_move_heading		: void : npc*, float speed, float yaw

asm : 8003AAEC, 015EEC : get_npc_unsafe "spinlocks forever if npc not found" : npc* : #npcID
asm : 8003AB48, 015F48 : get_npc_safe "returns null if npc not found" : npc* : #npcID
asm : 8003ABA0, 015FA0 : enable_npc_shadow		: void : npc*
asm : 8003ABFC, 015FFC : disable_npc_shadow		: void : npc*
asm : 8003AC5C, 01605C : set_npc_sprite 		: void : npc*, animID, ptr extraAnimsList
asm : 8003AD24, 016124 : enable_npc_blur		: void : npc*
asm : 8003ADAC, 0161AC : disable_npc_blur		: void : npc*
asm : 8003ADF8, 0161F8 : update_npc_blur		: void : npc*
asm : 8003AE38, 016238 : appendGfx_npc_blur		: void : npc*
asm : 8003B184, 016584 : npc_enable_collisions : void : void
asm : 8003B198, 016598 : npc_disable_collisions : void : void

asm : 8003B1B0, 0165B0 : npc_reload_all : void : void
asm : 8003B340, 016740 : set_npc_yaw			: void : npc*, float angle
asm : 8003B3D0, 0167D0 : npc_set_palswap_mode_A : void : npc*, int paletteSwapMode "0-4 inclusive, begins with palette A"
asm : 8003B3F8, 0167F8 : npc_set_palswap_mode_B : void : npc*, int paletteSwapMode "0-4 inclusive, begins with palette B"
asm : 8003B41C, 01681C : npc_clear_palswap_mode : void : npc*
asm : 8003B44C, 01684C : npc_set_palswap_1 : void : npc*, short palIndexA, short palIndexB, short timeHoldA, short timeAB
asm : 8003B464, 016864 : npc_set_palswap_2 : void : npc*, short timeHoldB, short timeBA, short palIndexC, short palIndexD
asm : 8003B47C, 01687C : npc_draw_with_palswap : void : npc*, int renderYaw, matrix4f*

asm : 8003B500, 016900 : npc_draw_palswap_mode_0 : void : npc*, int renderYaw, matrix4f*
asm : 8003B5B4, 0169B4 : npc_draw_palswap_mode_1 : void : npc*, int renderYaw, matrix4f*
asm : 8003B96C, 016D6C : npc_blend_palette_colors : int color : int colorA, int colorB, int lerpAlpha
asm : 8003BA60, 016E60 : npc_draw_palswap_mode_2 : void : npc*, int renderYaw, int, matrix4f*
asm : 8003BED8, 0172D8 : npc_draw_palswap_mode_4 : void : npc*, int renderYaw, matrix4f*

asm : 8003C3D8, 0177D8 : npc_set_decoration : void : npc*, int index, #npcDecoration
asm : 8003C428, 017828 : npc_remove_decoration : void : npc*, int index
asm : 8003C444, 017844 : npc_update_decorations : void : npc*
asm : 8003C53C, 01793C : npc__remove_decoration : void : npc*, int index
asm : 8003C61C, 017A1C : npc_reset_current_decoration : void : npc*, int index
asm : 8003C658, 017A58 : npc_update_decoration_none : void : npc*, int index
asm : 8003C660, 017A60 : npc_remove_decoration_none : void : void
asm : 8003C668, 017A68 : npc_update_decoration_bowser_aura : void : npc*, int index
asm : 8003C78C, 017B8C : npc_remove_decoration_bowser_aura : void : npc*, int index
asm : 8003C7A8, 017BA8 : npc_update_decoration_sweat : void : npc*, int index
asm : 8003C8AC, 017CAC : npc_remove_decoration_sweat : void : npc*, int index
asm : 8003C8B4, 017CB4 : npc_update_decoration_seeing_stars : void : npc*, int index
asm : 8003C984, 017D84 : npc_remove_decoration_seeing_stars : void : npc*, int index
asm : 8003C9A8, 017DA8 : npc_update_decoration_glow_in_front : void : npc*, int index
asm : 8003CB20, 017F20 : npc_remove_decoration_glow_in_front : void : npc*, int index
asm : 8003CB44, 017F44 : npc_update_decoration_glow_behind : void : npc*, int index
asm : 8003CC8C, 01808C : npc_remove_decoration_glow_behind : void : npc*, int index
asm : 8003CCB0, 0180B0 : npc_update_decoration_charged : void : npc*, int index
asm : 8003CFA0, 0183A0 : npc_remove_decoration_charged : void : npc*, int index
asm : 8003CFA8, 0183A8 : npc__reset_current_decoration : void : npc*, int index

asm : 8003CFB4, 0183B4 : npc_find_closest "find closest within radius" : npc* : float x, float y, float z, float radius
asm : 8003D0C4, 0184C4 : npc_find_closest_simple "find closest within radius" : npc* : float x, float y, float z, float radius

asm : 8003D1D4, 0185D4 : npc_find_standing_on_entity : int npcID "-1 if none" : int entityIndex
asm : 8003D2F8, 0186F8 : npc_get_collider_below "test depth = 3 units" : int colliderID "-1 if none" : npc* npc

asm : 8003E2E0, 0196E0 : COPY_set_defeated	"exact copy of func_8003EE40, hardly used" : void : int mapID, int encounterID
asm : 8003E338, 019738 : init_encounter_status	: void : void
asm : 8003E400, 019800 : clear_encounter_status	: void : void

asm : 8003E524, 019924 : update_encounters "manages encounter-battle lifecycle" : void : void
asm : 8003E5B0, 0199B0 : draw_encounter_ui : void : void
asm : 8003E63C, 019A3C : draw_first_strike_ui : void : void
asm : 8003E678, 019A78 : make_npcs 				: void : bool "determines whether enemies respawn after re-entering map: 0 = respawn, 1 = remember previous state", int mapID, $NpcGroupList
asm : 8003E730, 019B30 : kill_encounter	"kill all enemies for an enemy's encounter"	: void : enemy* enemy
asm : 8003E7AC, 019BAC : kill_enemy	"free and kill all scripts" : void : enemy* enemy
% each of these kill running script and starts given one
asm : 8003E94C, 019D4C : bind_enemy_ai 			: void : enemy*, $Script aiScript
asm : 8003E9B4, 019DB4 : bind_enemy_aux			: void : enemy*, $Script auxScript
asm : 8003EA1C, 019E1C : bind_enemy_interact	: void : enemy*, $Script interactScript
asm : 8003EA84, 019E84 : bind_npc_ai			: void : #npcID, $Script aiScript
asm : 8003EB50, 019F50 : bind_npc_aux			: void : #npcID, $Script auxScript
asm : 8003EC1C, 01A01C : bind_npc_interact		: void : #npcID, $Script interactScript
asm : 8003ECE8, 01A0E8 : get_enemy 				: enemy* : #npcID
asm : 8003ED68, 01A168 : get_enemy_safe 		: enemy* : #npcID
asm : 8003EDF0, 01A1F0 : get_defeated			: bool : int mapID, int encounterID
asm : 8003EE40, 01A240 : set_defeated			: void : int mapID, int encounterID

api : 8003EE98, 01A298 : ShowMerleeCoinMessage : void : void
api : 8003EECC, 01A2CC : ShowMerleeRanOutMessage : void : void
api : 8003EF00, 01A300 : FadeBackgroundToBlack : void : void
api : 8003EF98, 01A398 : UnfadeBackgroundFromBlack : void : void

api : 8003F018, 01A418 : FadeInMerlee "npc -10`" : void : void
api : 8003F084, 01A484 : FadeOutMerlee "npc -10`" : void : void
api : 8003F0C4, 01A4C4 : MerleeUpdateFX : void : void
api : 8003F384, 01A784 : MerleeStopFX : void : void
api : 8003F398, 01A798 : GetCamLookAtObjVector	: Var[0] int x, Var[1] int y, Var[2] int z : void
api : 8003F3F4, 01A7F4 : HasMerleeCasts			: Var[0] bool result : void
api : 8003F414, 01A814 : PlayMerleeGatherFX "effect 6B" : void : var posX, var posY, var posZ
api : 8003F4CC, 01A8CC : PlayMerleeOrbFX "effect 52" : void : var posX, var posY, var posZ
api : 8003F580, 01A980 : OnDefeatEnemy			: void : void
api : 8003F6E8, 01AAE8 : OnFleeBattleDrops		: void : void
asm : 8003F7CC, 01ABCC : update_encounters_neutral "default/neutral state during world gameplay, checks for player-enemy collisions and initiates battles when they occur" : void : void
asm : 8004135C, 01C75C : draw_encounters_neutral "stub" : void : void
asm : 80041364, 01C764 : update_encounters_pre_battle "handles the transition state into battle, with screen fade out and star silhouette" : void : void
asm : 80041964, 01CD64 : draw_encounters_pre_battle : void : void
asm : 80041C5C, 01D05C : show_first_strike_message	: void : void
asm : 80041F10, 01D310 : update_encounters_post_battle "run every frame during battle and afterward; handles the transition state out of battle, with screen fade in, resuming enemy ai scripts, etc" : void : void
asm : 8004304C, 01E44C : draw_encounters_post_battle : void : void
asm : 8004309C, 01E49C : update_encounters_conversation : void : void
asm : 800431D4, 01E5D4 : draw_encounters_conversation "stub" : void : void
asm : 800431DC, 01E5DC : check_conversation_trigger "checks for player proximity and facing angles to NPCs, returns true if a conversation is possible and the player has pressed A" : bool "started conversation" : void

asm : 800436B0, 01EAB0 : create_encounters "formerly create_npcs" : void : void
asm : 80044140, 01F540 : init_encounters_ui "stub" : void : void
asm : 80044148, 01F548 : is_starting_conversation "unk trigger: not enemy/boss, jump, hammer, spin, or partner. maybe once used for items or POW blocks?" : void : void
% <-- split -->
api : 80044180, 01F580 : SetEncounterStatusFlags : void : int flags, bool mode "1 = set | 0 = clear"
api : 800441F0, 01F5F0 : IsStartingConversation : void : {out} var result {outType=bool}
api : 80044264, 01F664 : LoadDemoBattle		: void : int demoBattleIndex "0-4"
api : 80044298, 01F698 : MakeNpcs         		: void : bool "determines whether enemies respawn after re-entering map: 0 = respawn, 1 = remember previous state", $NpcGroupList
api : 80044340, 01F740 : RemoveNpc        	: void : #npcID
api : 80044478, 01F878 : RemoveEncounter "removes all enemies in the same encounter as given npc" : void : #npcID
api : 8004457C, 01F97C : GetBattleOutcome : void : {out} var outcome {outType=#outcome} "0 = player won, 1 = player lost, 2 = player ran, 3 = enemy ran" % whether the player gets a game over from losing is determined by the battle script. should also be a value for 4...
% 800445A8  "0" *out = parent enemy[C4]
% 800445D4 "14" *out = parent enemy[C8]
api : 80044600, 01FA00 : GetOwnerEncounterTrigger : void : {out} var {outType=#encounterTrigger}

api : 8004462C, 01FA2C : DoNpcDefeat		: void : none                % kills parent's defeat script and replaces it with an instance of 80077E38 = "SCRIPT_NpcDefeat"
asm : 800446B4, 01FAB4 : start_battle	: void : script_instance* script, #songID
api : 80044840, 01FC40 : StartBattle		: void : none                % begins a battle with the NPC's assigned encounter
api : 80044860, 01FC60 : StartBattleWith	: void : #songID              % same as the previous, but you can set the song
api : 8004489C, 01FC9C : StartBossBattle	: void : #songID
api : 80044A38, 01FE38 : SetBattleMusic		: void : #songID
api : 80044A78, 01FE78 : BindNpcAI			: void : #npcID, $Script {name=NpcAI}
api : 80044BAC, 01FFAC : BindNpcIdle		: void : #npcID, $Script {name=Idle} % paused while the interaction prompt is active, executes after init is done
api : 80044C2C, 02002C : RestartNpcAI       : void : #npcID               % kills the current AI script and launches a new copy
api : 80044CF0, 0200F0 : EnableNpcAI        : void : #npcID, bool         % pauses/unpauses AI script for a given npc
api : 80044DA4, 0201A4 : SetNpcAux          : void : #npcID, $Script      % kills the current aux script and launches a new one from $Script
api : 80044EB8, 0202B8 : BindNpcAux         : void : #npcID, $Script {name=Aux} % helper script that executes after init script is done, loop for a continous background script
api : 80044F38, 020338 : RestartNpcAux		: void : #npcID               % kills the current aux script and launches a new copy
api : 80044FF0, 0203F0 : EnableNpcAux		: void : #npcID, bool         % pauses/unpauses aux script for a given npc
api : 800450A4, 0204A4 : BindNpcInteract	: void : #npcID, $Script {name=Interact}
api : 80045140, 020540 : BindNpcHit			: void : #npcID, $Script {name=Hit}
api : 800451DC, 0205DC : BindNpcDefeat		: void : #npcID, $Script {name=Defeat} % executes after battle
api : 8004525C, 02065C : SetSelfVar			: void : int, int            % args : index, value
api : 800452C0, 0206C0 : GetSelfVar			: void : int, {out} var
api : 80045320, 020720 : SetNpcVar			: void : #npcID, int, int     % args : #npcID, index, value -- sets "&NPC + 6C + 4*index" to value, looks like there are 16 of them
api : 800453BC, 0207BC : GetNpcVar			: void : #npcID, int index, {out} var value
api : 8004545C, 02085C : SetSelfRotation		: void : int rx, int ry, int rz
api : 8004550C, 02090C : SetSelfEnemyFlags "directly sets flags of parent NPC" : void : int flags
api : 80045524, 020924 : SetSelfEnemyFlagBits	: void : int flags, int mode "1 = set | 0 = clear"
% api : 80045580 : SyncOverrideEnemyPos "set override pos (of enemy collision?) to current NPC position" : void : bool
api : 80045614, 020A14 : GetSelfNpcID		: void : {out} var ID
api : 80045640, 020A40 : ClearDefeatedEnemies		: void : void
api : 80045688, 020A88 : SetEnemyFlagBits	: void : #npcID, int flags, int mode "1 = set | 0 = clear"
api : 80045734, 020B34 : GetSelfAnimationFromTable	: void : int index, {out} var animation	
api : 8004580C, 020C0C : GetEncounterTriggerHitTier : void : {out} var "'hit tier' from EncounterStatus struct: 0 = normal | 1 = super | 2 = ultra"
api : 80045A58, 020E58 : SetTattleString : void : #npcID, {print} stringID

asm : 80045B68, 020F68 : update_merlee_messages : void : void
asm : 80045C28, 021028 : draw_merlee_messages : void : void
asm : 80045C88, 021088 : get_current_merlee_message "fifo" : merlee_message_info* : void
asm : 80045CC4, 0210C4 : dispose_merlee_message : merlee_message_info* : void

asm : 80045D00, 021100 : show_merlee_message : void : int messageIndex, int duration "default = 60`"
asm : 80045D7C, 02117C : update_merlee_message : void : merlee_message_info*
asm : 80045E4C, 02124C : draw_merlee_message_string : void : merlee_message_info*, int posX, int posY
asm : 80045ED0, 0212D0 : draw_merlee_message : void : merlee_message_info*
asm : 80045FA4, 0213A4 : is_merlee_message_done : bool : void

asm : 800465E0, 0219E0 : draw_all_status_icons : void : void
asm : 80047608, 022A08 : create_status_icon_set : int index : void
asm : 800476F4, 022AF4 : remove_all_status_icons : void : int index
asm : 8004778C, 022B8C : set_status_icons_properties : void : int index, float x, float y, float z, float iconRadius, float iconOffsetY, float messageRadius, float messageOffset

asm : 80047898, 022C98 : remove_status_1 : void : int index
asm : 800478F8, 022CF8 : enable_status_1 "flag 4" : void : int index
asm : 800479A0, 022DA0 : remove_status_2 : void : int index
asm : 80047A00, 022E00 : enable_status_2 "flag 8" : void : int index
asm : 80047AA8, 022EA8 : remove_status_3 : void : int index
asm : 80047B08, 022F08 : enable_status_3 "flag 10" : void : int index
asm : 80047B84, 022F84 : remove_status_4 : void : int index
asm : 80047BE4, 022FE4 : enable_status_4 "flag 20" : void : int index
asm : 80047C14, 023014 : create_status_icon_boost_jump : void : int index
asm : 80047CA4, 0230A4 : remove_status_icon_boost_jump : void : int index
asm : 80047D00, 023100 : enable_status_icon_boost_jump "flag 40" : void : int index
asm : 80047D30, 023130 : create_status_icon_boost_hammer : void : int index
asm : 80047DC0, 0231C0 : remove_status_icon_boost_hammer : void : int index
asm : 80047E1C, 02321C : enable_status_icon_boost_hammer "flag 80" : void : int index
asm : 80047E4C, 02324C : create_status_icon_boost_partner : void : int index
asm : 80047EDC, 0232DC : remove_status_icon_boost_partner : void : int index
asm : 80047F28, 023328 : enable_status_icon_boost_partner "flag 100" : void : int index
asm : 80047F58, 023358 : create_status_icon_surprise : void : int index
asm : 80047FE8, 0233E8 : remove_status_icon_surprise : void : int index
asm : 80048034, 023434 : enable_status_icon_surprise "flag 200" : void : int index
asm : 80048064, 023464 : create_status_icon_peril : void : int index
asm : 800480F4, 0234F4 : remove_status_icon_peril : void : int index
asm : 80048140, 023540 : enable_status_icon_peril "flag 400" : void : int index
asm : 80048170, 023570 : create_status_icon_danger : void : int index
asm : 80048200, 023600 : remove_status_icon_danger : void : int index
asm : 8004824C, 02364C : enable_status_icon_danger "flag 800" : void : int index
asm : 80048280, 023680 : spawn_drops : void : enemy*
asm : 80048D50, 024150 : get_coin_drop_amount : int : enemy*

asm : 80048FD4, 0243D4 : is_point_within_region : bool : int shape "0 = circle, 1 = box", float pointX, float pointY, float centerX, float centerY, float sizeX "radius for circle", float sizeZ "unused for circle"

asm : 800494C0, 0248C0 : ai_enemy_play_sound : void : npc*, int soundID, int sourceFlags

% start file: 8004AB00 -->
asm : 8004AB00, 025F00 : create_audio_system "called during boot via func_802B2000, sets up the audio thread and loads/unpacks the audio data" : void : void
% ...
asm : 8004B074, 026474 : nuAuDmaCallBack		: ??? : ???
asm : 8004B224, 026624 : nuAuDmaNew				: code : NUDMAState** state
asm : 8004B268, 026668 : nuAuCleanDMABuffers	: void : void
% 8004b328
asm : 8004B3EC, 0267EC : alLink					: ??? : ???
asm : 8004B40C, 02680C : alUnlink				: ??? : ???
% <-- end of file

% start of file -->
% func 8004b440
asm : 8004B62C, 026A2C : snd_load_sfx_groups_from_SEF : void : snd_manager* manager
asm : 8004B698, 026A98 : snd_clear_sfx_queue : void : snd_manager* manager
asm : 8004B6D8, 026AD8 : snd_enqueue_sfx_event : void : snd_manager* sndManager, int soundID, int volume, short pitchShift, byte pan

asm : 8004C358, 027758 : snd_set_modifiers : void : snd_manager* manager, snd_sfx_entry* sfxEntry
asm : 8004C3D4, 0277D4 : snd_set_player_modifiers : void : snd_sound_player* player, snd_sfx_entry* sfxEntry

asm : 8004C844, 027C44 : snd_get_scaled_volume : int : snd_manager* manager, snd_sound_player* player
asm : 8004CD94, 028194 : snd_set_voice_volume : void : snd_voice*, snd_manager*, snd_sound_player*

asm : 8004CE70, 028270 : snd_SEFCmd_00_SetVolume "consumes: byte volume" : void : snd_manager* mngr, snd_sound_player* player
asm : 8004CEA4, 0282A4 : snd_SEFCmd_01_SetPan "consumes: byte pan" : void : snd_manager* mngr, snd_sound_player* player
asm : 8004CEC4, 0282C4 : snd_SEFCmd_02_SetInstrument "consumes: byte bank, byte instrument"	: void : snd_manager* mngr, snd_sound_player* player
asm : 8004CF0C, 02830C : snd_SEFCmd_03_SetReverb "consumes: byte" : void : snd_manager* mngr, snd_sound_player* player
asm : 8004CF3C, 02833C : snd_SEFCmd_04 "consumes: byte" : void : snd_manager* mngr, snd_sound_player* player
asm : 8004D00C, 02840C : snd_SEFCmd_05 "consumes: byte" : void : snd_manager* mngr, snd_sound_player* player
asm : 8004D038, 028438 : snd_SEFCmd_06 "consumes: byte" : void : snd_manager* mngr, snd_sound_player* player
asm : 8004D050, 028450 : snd_SEFCmd_07 "consumes: -1 byte. ???" : void : snd_manager* mngr, snd_sound_player* player
asm : 8004D07C, 02847C : snd_SEFCmd_08 "consumes: short time, byte targetVal" : void : snd_manager* mngr, snd_sound_player* player
asm : 8004D114, 028514 : snd_SEFCmd_09_StartLoop "consumes: byte iterCount" : void : snd_manager* mngr, snd_sound_player* player
asm : 8004D130, 028530 : snd_SEFCmd_0A_EndLoop "consumes nothing" : void : snd_manager* mngr, snd_sound_player* player
asm : 8004D15C, 02855C : snd_SEFCmd_0B "consumes: -1 byte. ???" : void : snd_manager* mngr, snd_sound_player* player
asm : 8004D180, 028580 : snd_SEFCmd_0C : void : snd_manager* mngr, snd_sound_player* player
asm : 8004D1B4, 0285B4 : snd_SEFCmd_0D : void : snd_manager* mngr, snd_sound_player* player
asm : 8004D23C, 02863C : snd_SEFCmd_0E : void : snd_manager* mngr, snd_sound_player* player
asm : 8004D2B0, 0286B0 : snd_SEFCmd_0F : void : snd_manager* mngr, snd_sound_player* player
asm : 8004D2E4, 0286E4 : snd_SEFCmd_10_Jump "consumes: short offset from SEF start" : void : snd_manager* mngr, snd_sound_player* player
asm : 8004D310, 028710 : snd_SEFCmd_11_Restart "consumes nothing" : void : snd_manager* mngr, snd_sound_player* player
asm : 8004D31C, 02871C : snd_SEFCmd_12_NOP : void : snd_manager* mngr, snd_sound_player* player
asm : 8004D324, 028724 : snd_SEFCmd_13 "consumes: byte" : void : snd_manager* mngr, snd_sound_player* player
asm : 8004D33C, 02873C : snd_SEFCmd_14 "consumes: byte" : void : snd_manager* mngr, snd_sound_player* player
asm : 8004D354, 028754 : snd_SEFCmd_15 "consumes: byte" : void : snd_manager* mngr, snd_sound_player* player
asm : 8004D36C, 02876C : snd_SEFCmd_16 : void : snd_manager* mngr, snd_sound_player* player
asm : 8004D3A0, 0287A0 : snd_SEFCmd_17 : void : snd_manager* mngr, snd_sound_player* player
asm : 8004D3F8, 0287F8 : snd_SEFCmd_18 : void : snd_manager* mngr, snd_sound_player* player

asm : 8004D794, 028B94 : snd_get_player_with_song_name : bgm_player* : int songString "char[4] e.g. 33313920 == '319 '"

asm : 8004D7E0, 028BE0 : snd_dispatch_bgm_player_event : int result : bgm_player_event*

asm : 8004DAE0, 028EE0 : snd_is_song_playing : int eIsSongPlaying : int songName

asm : 8004E3A4, 0297A4 : snd_update_bgm_fade : void : bgm_player*

asm : 8004E5D8, 0299D8 : snd_initialize_bgm_player : void : bgm_player*

asm : 8004FBBC, 02AFBC : snd_BGMCmd_E0_MasterTempo : void : bgm_player* player, bgm_player_track*
asm : 8004FC08, 02B008 : snd_bpm_to_tempo : int : bgm_player* player, int tempo
asm : 8004FCB4, 02B0B4 : snd_BGMCmd_E1_MasterVolume : void : bgm_player* player, bgm_player_track*
asm : 8004FCE4, 02B0E4 : snd_BGMCmd_E2_MasterTranspose : void : bgm_player* player, bgm_player_track*
asm : 8004FD04, 02B104 : snd_BGMCmd_E3 : void : bgm_player* player, bgm_player_track*
asm : 8004FD38, 02B138 : snd_BGMCmd_E6_MasterEffect : void : bgm_player* player, bgm_player_track*
asm : 8004FD94, 02B194 : snd_BGMCmd_E4_MasterTempoFade : void : bgm_player* player, bgm_player_track*
asm : 8004FE10, 02B210 : snd_BGMCmd_E5_MasterVolumeFade : void : bgm_player* player, bgm_player_track*
asm : 8004FE6C, 02B26C : snd_BGMCmd_E8_TrackOverridePatch : void : bgm_player* player, bgm_player_track*
asm : 8004FEB0, 02B2B0 : snd_BGMCmd_E9_SubTrackVolume : void : bgm_player* player, bgm_player_track*
asm : 8004FED0, 02B2D0 : snd_BGMCmd_F6_TrackVolumeFade : void : bgm_player* player, bgm_player_track*
asm : 8004FF3C, 02B33C : snd_BGMCmd_EA_SubTrackPan : void : bgm_player* player, bgm_player_track*
asm : 8004FF58, 02B358 : snd_BGMCmd_EB_SubTrackReverb : void : bgm_player* player, bgm_player_track*
asm : 8004FF70, 02B370 : snd_BGMCmd_EC_SegTrackVolume : void : bgm_player* player, bgm_player_track*
asm : 8004FF88, 02B388 : snd_BGMCmd_ED_SubTrackCoarseTune : void : bgm_player* player, bgm_player_track*
asm : 8004FFA8, 02B3A8 : snd_BGMCmd_EE_SubTrackFineTune : void : bgm_player* player, bgm_player_track*
asm : 8004FFB4, 02B3B4 : snd_BGMCmd_EF_SegTrackTune : void : bgm_player* player, bgm_player_track*
asm : 8004FFC8, 02B3C8 : snd_BGMCmd_F0_TrackTremolo : void : bgm_player* player, bgm_player_track*
asm : 8004FFE4, 02B3E4 : snd_BGMCmd_F1_TrackTremoloSpeed : void : bgm_player* player, bgm_player_track*
asm : 8004FFF0, 02B3F0 : snd_BGMCmd_F2_TrackTremoloTime : void : bgm_player* player, bgm_player_track*
asm : 8004FFFC, 02B3FC : snd_BGMCmd_F3_TrackTremoloStop : void : bgm_player* player, bgm_player_track*
asm : 80050004, 02B404 : snd_BGMCmd_F4 : void : bgm_player* player, bgm_player_track*
asm : 80050020, 02B420 : snd_BGMCmd_F5_TrackVoice : void : bgm_player* player, bgm_player_track*
asm : 80050128, 02B528 : snd_BGMCmd_F7_SubTrackReverbType : void : bgm_player* player, bgm_player_track*
asm : 8005015C, 02B55C : snd_BGMCmd_FD : void : bgm_player* player, bgm_player_track*
asm : 80050184, 02B584 : snd_BGMCmd_FE : void : bgm_player* player, bgm_player_track*
asm : 800501A8, 02B5A8 : snd_BGMCmd_FC_Jump : void : bgm_player* player, bgm_player_track*
asm : 800502F0, 02B6F0 : snd_BGMCmd_FF : void : bgm_player* player, bgm_player_track*
asm : 80050560, 02B960 : snd_BGMCmd_NOP : void : bgm_player* player, bgm_player_track*

asm : 80052E5C, 02E25C : snd_load_audio_data : void : int frequency
asm : 800532F4, 02E6F4 : snd_reset_instrument "set an instrument to 'default sound' values" : void : snd_bk_instrument* instrument

asm : 800533D0, 02E7D0 : snd_update_sequence_players "nop this function to sustain most recent note indefinately" : void : void

asm : 800538F8, 02ECF8 : snd_tune_param_to_timescale : float : int 

asm : 80053974, 02ED74 : snd_initialize_bgm_fade : void : snd_fade*, int time, int startValue, int endValue
asm : 80053A18, 02EE18 : snd_clear_bgm_fade : void : snd_fade* fade

asm : 80053C58, 02F058 : snd_get_sequence_player_and_track : void : int playerIndex, ptr outCurrentTrackData, bgm_player** outSongPlayer
asm : 80053CB4, 02F0B4 : snd_get_sequence_player : void : int playerIndex, bgm_player** outSongPlayer
asm : 80053CF8, 02F0F8 : snd_load_song_files "loads BGM + BK files for a given song to a music player" : int filename "4-character string at BGM[8]" : int songID, ptr bgmDataBuffer "where track data will be loaded", bgm_player* player
asm : 800542BC, 02F6BC : snd_load_INIT : void : snd_globals* sndData, int offset, int* head "of heap"
asm : 8005447C, 02F87C : snd_fetch_SBN_file : int "result: 0 = ok, 101` = file index out of bounds, 102` = wrong file format" : int fileIndex, int format, snd_sbn_file_entry* out
asm : 800544F8, 02F8F8 : snd_load_PER : void : snd_globals* sndData, int offsetPER
asm : 800545B4, 02F9B4 : snd_load_PRG : void : snd_globals* sndData, int offsetPRG
asm : 8005465C, 02FA5C : snd_load_BGM "load a BGM and its associated BK files" : int "result: 0 = ok, 102` = wrong file format" : int fileIndex
asm : 80054744, 02FB44 : snd_get_BK_instruments : snd_bk_instruments* : int bankGroup, int bankIndex
asm : 800547C8, 02FBC8 : snd_load_BK_to_bank : int : int bkFileOffset, snd_bank* bank, int bankIndex, int
asm : 800549F8, 02FDF8 : snd_swizzle_BK_instruments "converts file-relative offsets to overall ROM offsets in loaded instrument data" : void : int bkFileOffset, snd_bank* bank, snd_bk_instruments* instruments, int instrumentCount, int "value for unk_25 of each instrument"
asm : 80054C4C, 03004C : snd_load_BK : int "always zero" : int offsetBK, int bankIndex
asm : 80054E00, 030200 : snd_read_rom	: void : int offset, ptr buffer, int size
asm : 80054E90, 030290 : snd_memset : void : byte* buf, int size, byte writeVal
asm : 80054F48, 030348 : snd_bcopy : void : byte* src, byte* dest, int size
asm : 80054F74, 030374 : snd_copy_words "copies 4-byte aligned length from one location to another, provided they both are 4-byte aligned" : void : byte* src, byte* dest, int size

asm : 80054fc0, 0303C0 : snd_load_BK_headers	: void : snd_globals* sndData

asm : 800551E0, 0305E0 : snd_start_sound : void : int soundID, int volume, int pan
asm : 80055240, 030640 : snd_start_sound_with_shift : void : int soundID, int volume, int pan, int pitchShift
asm : 800552D0, 0306D0 : snd_adjust_sound : void : int soundID, int volume, int pan
asm : 80055330, 030730 : snd_adjust_sound_with_shift : void : int soundID, int volume, int pan, int pitchShift
asm : 800553C0, 0307C0 : snd_stop_sound : void : int soundID

asm : 80055408, 030808 : snd_start_sound_raw : void : int soundID, int volume, int pitchShift, int pan

asm : 800558D4, 030CD4 : snd_load_song : int filename "4-character string at BGM[8]" : int songID, int playerIndex

asm : 8005591C, 030D1C : snd_start_song "uses variation 0" : void : int songName "char[4]"
asm : 80055970, 030D70 : snd_start_song_variation : void : int songName "char[4]", int variation
asm : 80055A18, 030E18 : snd_set_song_variation_fade : void : int songName, int variation, int fadeInTime, int startVolume, int endVolume
asm : 80055A6C, 030E6C : snd_set_song_fade : void : int songName, int fadeInTime, int volumeA, int volumeB
asm : 80055ABC, 030EBC : snd_set_song_variation_fade_time : void : int songName, int fadeTime, int variation

asm : 800565C0, 0319C0 : alAudioFrame			: ??? : ???
asm : 80057F20, 033320 : alHeapInit : void : ALHeap* hp, ptr base, int len
asm : 80057F90, 033390 : alHeapAlloc			: ??? : ???
asm : 80057FD8, 0333D8 : alCopy : void : ptr src, ptr dest, int len

asm : 80059C80, 035080 : stub_effect_delegate : void : effect_instance* % used for unbound function points in effect structs
asm : 80059C88, 035088 : set_effect_pos_offset : void : effect_instance*, float x, float y, float z
asm : 80059C9C, 03509C : clear_effect_data : void : void
asm : 80059D50, 035150 : update_effects : void : void
asm : 80059EF4, 0352F4 : render_effects_world			: void : void
asm : 80059F94, 035394 : render_effects_UI : void : void
asm : 8005a2bc : create_effect_instance : effect_instance* : effect_instance_bp* bp
asm : 8005A450, 035850 : remove_effect			: void : effect_instance*
asm : 8005A4E0, 0358E0 : remove_all_effects		: void : void
asm : 8005A564, 035964 : load_effect			: void : int index
% <-- end of file

% start of file -->
asm : 8005A6C0, 035AC0 : load_map_script_lib	: void : void
asm : 8005A6F4, 035AF4 : load_map_by_IDs		: void : int areaID, int mapID, int loadType "0 = from another map | 1 = from main menu"
asm : 8005ABD8, 035FD8 : get_current_map_config	: map_config* : void
asm : 8005ABE8, 035FE8 : get_current_map_header	: map_data_header* : void
asm : 8005ABF8, 035FF8 : get_map_IDs_by_name	: bool foundMap : char* mapName, int* areaID, int* mapID
asm : 8005ACE8, 0360E8 : load_asset_by_name		: ptr data "possibly compressed" : char* name, int* decompressedSize
asm : 8005ADD0, 0361D0 : get_asset_offset		: int romStartOffset : char* name, int* decompressedSize
% <-- end of file

% start of file -->
asm : 8005AEA0, 0362A0 : allocate_hit_tables	: void : void
asm : 8005AF94, 036394 : initialize_collision	: void : void
asm : 8005AFC0, 0363C0 : load_hit_asset "loads hit asset from name at 800D91E0" : void : void
asm : 8005B058, 036458 : load_collision			: void : void
asm : 8005B1A0, 0365A0 : load_stage_collision	: void : char* assetName
asm : 8005B23C, 03663C : load_hit_data			: void : int mode "0 = collison, 1 = zone", ptr filedata % loads internal collision or zone data from a hit file
asm : 8005B780, 036B80 : parent_collider_to_model	: void : int colliderID, int modelIndex
asm : 8005B9A0, 036DA0 : _add_hit_vert_to_buffer	: void : float** buf, float* vert, int* bufSize
asm : 8005B9F4, 036DF4 : _get_hit_vert_index_from_buffer : int bufferIndex : float** buf, float* vert, int* bufSize
asm : 8005BA24, 036E24 : update_collider_transform	: void : int colliderID
asm : 8005BDA8, 0371A8 : get_collider_type_by_id : int : int colliderID
asm : 8005BDD8, 0371D8 : get_flat_collider_normal "returns the normal of the first triangle for a collider. this will give the normal of the collider if it forms a flat surface" : void : int colliderID, {out} float* nx, {out} float* ny, {out} float* nz
asm : 8005BE10, 037210 : get_collider_center		: void : int colliderID, float* cx, float* cy, float* cz
asm : 8005BE84, 037284 : test_ray_triangle_general "use arbitrary ray from cast data" : bool hit : collider_triangle* tri
asm : 8005C49C, 03789C : test_down_ray_triangle "use ray pointing down from cast origin" : bool hit : collider_triangle* tri
asm : 8005C7A4, 037BA4 : test_up_ray_triangle "use ray pointing up from cast origin" : bool hit : collider_triangle* tri

asm : 8005CCD0, 0380D0 : test_ray_colliders : int colliderID "valid if hit, -1 otherwise. only tests colliders which ignore_flags &= 0" : int ignore_flags, ...
	float ray_start_x, float ray_start_y, float ray_start_z, ...
	float ray_dir_x, float ray_dir_y, float ray_dir_z, ...
	float* out_hit_x, float* out_hit_y, float* out_hit_z, ...
	float* out_hit_depth, ...
	float* out_hit_nx, float* out_hit_ny, float* out_hit_nz

asm : 8005D124, 038524 : test_ray_zones : V0 int zoneID "valid if hit, -1 otherwise. always casts down" : ...
	F12 float ray_start_x, F14 float ray_start_y, A2 float ray_start_z, ...
	A3 float ray_dir_x, SP[10] float ray_dir_y, SP[14] float ray_dir_z, ...
	SP[18] float* out_hit_x, SP[1C] float* out_hit_y, SP[20] float* out_hit_z, ...
	SP[24] float* out_hit_depth, ...
	SP[28] float* out_hit_nx, SP[2C] float* out_hit_ny, SP[30] float* out_hit_nz
	
asm : 8005D2DC, 0386DC : test_up_ray_collider : bool hit "?" : int ignore_flags, int colliderID, float ray_origin_x, float ray_origin_y, float ray_origin_z, float ray_length, float ray_yaw "deg"

asm : 8005D448, 038848 : test_ray_entities : V0 int entityID : ...
	F12 float ray_origin_x, F14 float ray_origin_y, A2 float ray_origin_z, ...
	A3 float ray_dir_x, SP[10] float ray_dir_y, SP[14] float ray_dir_z, ...
	SP[18] float* out_hit_x, SP[1C] float* out_hit_y, SP[20] float* out_hit_z, ...
	SP[24] float* out_hit_depth, ...
	SP[28] float* out_hit_nx, SP[2C] float* out_hit_ny, SP[30] float* out_hit_nz

% api : 8005DB00
% api : 8005DD54
asm : 8005DE10, 039210 : get_npc_pos : void : #npcID "-1 for player", float* outX, float* outY, float* outZ, bool* unknown

%{ NUSYS OS
% start of file -->
asm : 8005E8B0, 039CB0 : nuBoot				: void : void
asm : 8005E90C, 039D0C : boot_idle "nusys idle thread, creates main thread, intiailized to boot_main and enters infinite idle loop" : void : void
% <-- split -->
asm : 8005E9B0, 039DB0 : nuScCreateScheduler	: void : int videoMode, int numFields
asm : 8005EBE0, 039FE0 : nuScExecuteAudio		: void : void
asm : 8005ED14, 03A114 : nuScExecuteGraphics	: void : void
asm : 8005EE30, 03A230 : nuScAddClient			: void : NUScClient* c, OSMesgQueue* mq, NUScMsg msgType
asm : 8005EEBC, 03A2BC : nuScRemoveClient		: void : NUScClient* client
asm : 8005EF38, 03A338 : nuScResetClientMesgType	: void : NUScClient* client, NUScMsg msgType
asm : 8005EF78, 03A378 : nuScGetGfxMQ			: OSMesgQueue* : void
asm : 8005EF84, 03A384 : nuScGetAudioMQ			: OSMesgQueue* : void
asm : 8005EF90, 03A390 : nuScSetFrameBufferNum	: void : int frameBufferNum
asm : 8005EF9C, 03A39C : nuScGetFrameRate		: int : void
asm : 8005EFA8, 03A3A8 : nuScEventHandler		: ??? : ???
asm : 8005F0C0, 03A4C0 : nuScEventBroadcast		: ??? : ???
asm : 8005F120, 03A520 : nuScWaitTaskReady		: ??? : ???
asm : 8005F250, 03A650 : nuGfxFuncSet			: ??? : ???
asm : 8005F290, 03A690 : nuGfxPreNMIFuncSet		: ??? : ???
asm : 8005F2D0, 03A6D0 : nuGfxTaskAllEndWait	: ??? : ???
asm : 8005F2F0, 03A6F0 : nuGfxSetCfb			: ??? : ???
asm : 8005F400, 03A800 : nuGfxDisplayOff		: ??? : ???
asm : 8005F430, 03A830 : nuGfxDisplayOn			: ??? : ???
asm : 8005F450, 03A850 : nuPiInit				: ??? : ???
asm : 8005F490, 03A890 : nuPiReadRom			: void : int srcOffset, ptr* destAddr, int size
asm : 8005F560, 03A960 : nuGfxInit				: ??? : ???
asm : 8005F610, 03AA10 : nuContInit				: ??? : ???
asm : 8005F650, 03AA50 : nuContDataGet			: ??? : ???
asm : 8005F6B0, 03AAB0 : nuContPakMgrInit		: ??? : ???
asm : 8005F6D4, 03AAD4 : nuContPakMgrRemove		: ??? : ???
asm : 8005F6F8, 03AAF8 : contPakOpen			: ??? : ???
asm : 8005F748, 03AB48 : contPakFree			: ??? : ???
asm : 8005F770, 03AB70 : contPakFileReadWrite	: ??? : ???
asm : 8005F7B0, 03ABB0 : contPakFileOpen		: ??? : ???
asm : 8005F864, 03AC64 : contPakFileDelete		: ??? : ???
asm : 8005F8A4, 03ACA4 : contPakFileState		: ??? : ???
asm : 8005F8D0, 03ACD0 : contPakFileNum			: ??? : ???
asm : 8005F8FC, 03ACFC : contPakRepairId		: ??? : ???
asm : 8005F920, 03AD20 : osMotorStop			: ??? : ???
asm : 8005FB10, 03AF10 : contRmbControl			: ??? : ???
asm : 8005FC8C, 03B08C : nuContRmbMgrInit		: ??? : ???
asm : 8005FCEC, 03B0EC : nuContRmbMgrRemove		: ??? : ???
asm : 8005FD10, 03B110 : contRmbCheckMesg		: ??? : ???
asm : 8005FD58, 03B158 : contRmbStartMesg		: ??? : ???
asm : 8005FE90, 03B290 : nuContRmbStart			: ??? : ???
asm : 8005FEF0, 03B2F0 : nuContRmbCheck			: ??? : ???
asm : 8005FF90, 03B390 : nuContRmbModeSet		: ??? : ???
asm : 800600A0, 03B4A0 : nuContRmbForceStop		: ??? : ???
asm : 800600C0, 03B4C0 : nuContRmbForceStopEnd	: ??? : ???
asm : 800600E0, 03B4E0 : nuPiReadRomOverlay		: void : NUPiOverlaySegment* segment
asm : 800601F0, 03B5F0 : nuGfxThreadStart		: void : void
asm : 80060248, 03B648 : nuGfxThread			: ??? : ???
asm : 80060310, 03B710 : nuGfxSwapCfbFuncSet	: ??? : ???
asm : 80060350, 03B750 : nuGfxSwapCfb			: void : ptr framebuffer
asm : 80060370, 03B770 : nuGfxRetraceWait		: ??? : ???
asm : 800603F0, 03B7F0 : nuSiCallBackAdd		: ??? : ???
asm : 80060490, 03B890 : nuSiCallBackRemove		: ??? : ???
asm : 80060510, 03B910 : nuContMgrInit			: ??? : ???
asm : 800605E8, 03B9E8 : nuContMgrRemove		: ??? : ???
asm : 8006060C, 03BA0C : nuContDataClose		: ??? : ???
asm : 80060634, 03BA34 : nuContDataOpen			: ??? : ???
asm : 8006065C, 03BA5C : contRetrace			: ??? : ???
asm : 80060738, 03BB38 : contReadData			: ??? : ???
asm : 800607B4, 03BBB4 : contReadNW				: ??? : ???
asm : 80060870, 03BC70 : contQuery				: ??? : ???
asm : 800608C0, 03BCC0 : nuContDataLock			: ??? : ???
asm : 800608F0, 03BCF0 : nuContDataUnLock		: ??? : ???
asm : 80060920, 03BD20 : nuContQueryRead		: ??? : ???
asm : 80060940, 03BD40 : osSetIntMask			: ??? : ???
asm : 800609E0, 03BDE0 : osCreatePiManager		: ??? : ???
asm : 80060B70, 03BF70 : osEPiRawStartDma		: ??? : ???
asm : 80060D60, 03C160 : osEPiWriteIo			: int : OSPiHandle* handle, int devAddr, int data
asm : 80060DC0, 03C1C0 : osEPiReadIo			: int : OSPiHandle* pihandle, int devAddr, int* data
asm : 80060E20, 03C220 : osEPiStartDma			: ??? : ???
asm : 80060EC0, 03C2C0 : osEPiLinkHandle		: ??? : ???
asm : 80060F10, 03C310 : osCartRomInit			: ??? : ???
asm : 80061090, 03C490 : osDevMgrMain			: ??? : ???
asm : 80061450, 03C850 : osPiCreateAccessQueue	: ??? : ???
asm : 800614A4, 03C8A4 : osPiGetAccess			: void : void
asm : 80061510, 03C910 : osPiRelAccess			: void : void
asm : 80061540, 03C940 : osAiGetLength			: ??? : ???
asm : 80061550, 03C950 : osAiGetStatus			: ??? : ???
asm : 80061560, 03C960 : osAiSetFrequency		: ??? : ???
asm : 80061680, 03CA80 : osAiSetNextBuffer		: ??? : ???
asm : 80061720, 03CB20 : osInvalDCache			: ??? : ???
asm : 800617D0, 03CBD0 : osInvalICache			: ??? : ???
asm : 80061850, 03CC50 : osWritebackDCache		: ??? : ???
asm : 800618D0, 03CCD0 : osWritebackDCacheAll	: ??? : ???
asm : 80061900, 03CD00 : osContStartQuery		: ??? : ???
asm : 80061980, 03CD80 : osContGetQuery			: ??? : ???
asm : 800619A0, 03CDA0 : osContStartReadData	: ??? : ???
asm : 80061A28, 03CE28 : osContGetReadData		: ??? : ???
asm : 80061AC4, 03CEC4 : osPackReadData			: ??? : ???
asm : 80061B80, 03CF80 : osContInit				: ??? : ???
asm : 80061D1C, 03D11C : osContGetInitData		: ??? : ???
asm : 80061DD0, 03D1D0 : osPackRequestData		: ??? : ???
asm : 80061E90, 03D290 : osVirtualToPhysical	: ??? : ???
asm : 80061EF0, 03D2F0 : sqrtf					: float : float value
asm : 80061F00, 03D300 : coss					: short : short angle
asm : 80061F30, 03D330 : guFrustumF				: void : matrix4f* mtx, float l, float r, float b, float t, float n, float f, float scale
asm : 80062060, 03D460 : guFrustum				: void : matrix4s* mtx, float l, float r, float b, float t, float n, float f, float scale
asm : 800621B0, 03D5B0 : guLookAtF				: void : matrix4f* mtx, float xEye, float yEye, float zEye, ...
	float xAt, float yAt, float zAt, float xUp,  float yUp, float zUp
asm : 80062530, 03D930 : guLookAt				: void : matrix4s* mtx, float xEye, float yEye, float zEye, ...
	float xAt, float yAt, float zAt, float xUp,  float yUp, float zUp
asm : 800628C0, 03DCC0 : guLookAtHiliteF		: void : matrix4f* mtx, LookAt* l, Hilite* h, float xEye, float yEye, float zEye, ...
	float xAt, float yAt, float zAt, float xUp, float yUp, float zUp, ...
	float xl1, float yl1, float zl1, float xl2, float yl2, float zl2, int twidth, int theight
asm : 80063244, 03E644 : guLookAtHilite			: void : matrix4s* mtx, LookAt* l, Hilite* h, float xEye, float yEye, float zEye, ...
	float xAt, float yAt, float zAt, float xUp, float yUp, float zUp, ...
	float xl1, float yl1, float zl1, float xl2, float yl2, float zl2, int twidth, int theight
asm : 80063320, 03E720 : guLookAtReflectF		: void : matrix4f* mtx, LookAt* l, float xEye, float yEye, float zEye, ...
	float xAt, float yAt, float zAt, float xUp, float yUp, float zUp
asm : 80063898, 03EC98 : guLookAtReflect		: void : matrix4s* mtx, LookAt* l, float xEye, float yEye, float zEye, ...
	float xAt,  float yAt, float zAt, float xUp, float yUp, float zUp
asm : 80063910, 03ED10 : guOrthoF				: void : matrix4f* mtx, float l, float r, float b, float t, float n, float f, float scale
asm : 80063A40, 03EE40 : guOrtho				: void : matrix4s* mtx, float l, float r, float b, float t, float n, float f, float scale
asm : 80063B90, 03EF90 : guPerspectiveF			: void : matrix4f* mtx, short* perspNorm, float fovy, float aspect, float near, float far, float scale
asm : 80063D40, 03F140 : guPerspective			: void : matrix4s* mtx, short* perspNorm, float fovy, float aspect, float near, float far, float scale
asm : 80063F10, 03F310 : guPositionF			: void : matrix4f* mtx, float r, float p, float h, float s, float x, float y, float z
asm : 800640E8, 03F4E8 : guPosition				: void : matrix4s* mtx, float r, float p, float h, float s, float x, float y, float z
asm : 800642D0, 03F6D0 : guRotateRPYF			: void : matrix4f* mtx, float r, float p, float h
asm : 80064458, 03F858 : guRotateRPY			: void : matrix4s* mtx, float r, float p, float y
asm : 800645F0, 03F9F0 : sins					: short : short angle
%<-- split -->
asm : 80064650, 03FA50 : bcopy					: ptr dest : ptr src, ptr dest, int numBytes
asm : 80064970, 03FD70 : bzero					: void : ptr dest, int len
asm : 80064A10, 03FE10 : strchr					: char* : char* string, int c
asm : 80064A50, 03FE50 : strlen					: int : char* string
asm : 80064A74, 03FE74 : memcpy					: void : ptr dest, ptr src, int len
asm : 80064AA0, 03FEA0 : _Printf				: void : code callback, ptr context, char* fmt, int* args
asm : 80065020, 040420 : _Putfld				: ??? : ???
asm : 800654F0, 0408F0 : sprintf    	 		: ptr endPos : ptr dest, char* format, char* string, ptr
asm : 80065548, 040948 : proutSprintf			: ??? : ???
asm : 80065580, 040980 : osCreateMesgQueue		: ??? : ???
asm : 800655B0, 0409B0 : osJamMesg				: ??? : ???
asm : 800656F0, 040AF0 : osRecvMesg				: ??? : ???
asm : 80065820, 040C20 : osSendMesg				: ??? : ???
asm : 80065950, 040D50 : osSetEventMesg			: ??? : ???
asm : 80065A00, 040E00 : osGetCount				: ??? : ???
asm : 80065A10, 040E10 : osSpTaskLoad			: ??? : ???
asm : 80065C1C, 04101C : osSpTaskStartGo		: ??? : ???
asm : 80065C50, 041050 : osSpTaskYield			: ??? : ???
asm : 80065C70, 041070 : osSpTaskYielded		: ??? : ???
asm : 80065CC0, 0410C0 : osSiRawStartDma		: ??? : ???
asm : 80065D70, 041170 : osSiCreateAccessQueue	: ??? : ???
asm : 80065DC4, 0411C4 : osSiGetAccess			: ??? : ???
asm : 80065E30, 041230 : osSiRelAccess			: ??? : ???
asm : 80065E60, 041260 : osCreateThread			: ??? : ???
asm : 80065F30, 041330 : osGetThreadPri			: ??? : ???
asm : 80065F50, 041350 : osSetThreadPri			: ??? : ???
asm : 80066020, 041420 : osStartThread			: ??? : ???
asm : 80066140, 041540 : osStopThread			: ??? : ???
asm : 80066200, 041600 : osDequeueThread		: ??? : ???
asm : 80066240, 041640 : osYieldThread			: ??? : ???
asm : 80066290, 041690 : osGetActiveQueue		: ??? : ???
asm : 800662A0, 0416A0 : osGetTime				: ??? : ???
asm : 80066330, 041730 : osSetTime				: ??? : ???
asm : 80066350, 041750 : osSetTimer				: ??? : ???
asm : 80066480, 041880 : osTimerServicesInit	: ??? : ???
asm : 800664D4, 0418D4 : osTimerInterrupt		: ??? : ???
asm : 80066610, 041A10 : osSetTimerIntr			: ??? : ???
asm : 80066690, 041A90 : osInsertTimer			: ??? : ???
asm : 800667A0, 041BA0 : osMapTLB				: void : int index, int pageMask, ptr vaddr, int evenpaddr, int oddpaddr, int asid
asm : 80066860, 041C60 : osProbeTLB				: int : void*
asm : 80066920, 041D20 : osUnmapTLB				: void : int index
asm : 80066960, 041D60 : osUnmapTLBAll			: void : void
asm : 800669B0, 041DB0 : osViGetCurrentFramebuffer	: ??? : ???
asm : 800669F0, 041DF0 : osViGetNextFramebuffer		: ??? : ???
asm : 80066A30, 041E30 : osViGetCurrentMode		: ??? : ???
asm : 80066A70, 041E70 : osCreateViManager		: ??? : ???
asm : 80066C10, 042010 : viMgrMain				: ??? : ???
asm : 80066DB0, 0421B0 : osViSetEvent			: ??? : ???
asm : 80066E10, 042210 : osViSetMode			: ??? : ???
asm : 80066E60, 042260 : osViSetSpecialFeatures	: ??? : ???
asm : 80066FD0, 0423D0 : osViSetYScale			: ??? : ???
asm : 80067020, 042420 : osViSwapBuffer			: ??? : ???
asm : 80067070, 042470 : osViSwapContext		: ??? : ???
asm : 80067380, 042780 : osViBlack				: ??? : ???
asm : 800673E0, 0427E0 : osViRepeatLine			: ??? : ???
asm : 80067440, 042840 : guMtxIdent				: void : matrix4s* mat
asm : 800674A0, 0428A0 : guMtxIdentF			: void : matrix4f* mat
asm : 80067500, 042900 : guMtxF2L				: void : matrix4f* src, matrix4s* dest
asm : 80067580, 042980 : guMtxL2F				: void : matrix4f* dest, matrix4s* src
asm : 80067600, 042A00 : guMtxCatF				: void : matrix4f* mtxA, matrix4f* mtxB, matrix4f* dest
asm : 80067700, 042B00 : guScale				: void : matrix4s* mtx, float sx, float sy, float sz
asm : 800677C0, 042BC0 : guScaleF				: void : matrix4f* mtx, float sx, float sy, float sz
asm : 80067820, 042C20 : guTranslate			: void : matrix4s* mtx, float x, float y, float z
asm : 80067900, 042D00 : guTranslateF			: void : matrix4f* mtx, float x, float y, float z
asm : 80067960, 042D60 : guMtxCat				: void : matrix4s* mtxA, matrix4s* mtxB, matrix4s* dest
asm : 800679E0, 042DE0 : guMtxXFML				: void : matrix4s* mtx, float x, float y, float z, {out} float* ox, {out} float* oy, {out} float* oz
asm : 80067A70, 042E70 : guMtxXFMF				: void : matrix4f* mtx, float x, float y, float z, {out} float* ox, {out} float* oy, {out} float* oz
asm : 80067B20, 042F20 : guRotateF				: void : matrix4f* mtx, float a, float x, float y, float z
asm : 80067C80, 043080 : guRotate				: void : matrix4s* mtx, float a, float x, float y, float z
asm : 80067E00, 043200 : osMotorAccess			: ??? : ???
asm : 80067F44, 043344 : osMotorInit			: ??? : ???
asm : 80068190, 043590 : osPfsAllocateFile		: ??? : ???
asm : 8006849C, 04389C : osPfsDeclearPage		: ??? : ???
asm : 800685C0, 0439C0 : osPfsDeleteFile		: ??? : ???
asm : 8006876C, 043B6C : osPfsReleasePages		: ??? : ???
asm : 800687E0, 043BE0 : osPfsReadWriteFile		: ??? : ???
asm : 80068C20, 044020 : osPfsFileState			: ??? : ???
asm : 80068DC0, 0441C0 : osPfsFindFile			: ??? : ???
asm : 80068F80, 044380 : osPfsFreeBlocks		: ??? : ???
asm : 80069090, 044490 : osPfsNumFiles			: ??? : ???
asm : 80069190, 044590 : osPfsInitPak			: ??? : ???
asm : 80069388, 044788 : osPfsCheckRamArea		: ??? : ???
asm : 80069460, 044860 : osPfsRepairId			: ??? : ???
asm : 800694C0, 0448C0 : osPfsGetStatus			: ??? : ???
asm : 800695B0, 0449B0 : osPfsRequestOneChannel	: ??? : ???
asm : 80069644, 044A44 : osPfsGetOneChannelData	: ??? : ???
asm : 800696D0, 044AD0 : osPfsSelectBank		: ??? : ???
asm : 80069740, 044B40 : osSumcalc				: ??? : ???
asm : 80069774, 044B74 : osIdCheckSum			: ??? : ???
asm : 800697B8, 044BB8 : osRepairPackId			: ??? : ???
asm : 80069AA4, 044EA4 : osCheckPackId			: ??? : ???
asm : 80069C08, 045008 : osGetId				: ??? : ???
asm : 80069DD4, 0451D4 : osCheckId				: ??? : ???
asm : 80069E8C, 04528C : osPfsRWInode			: ??? : ???
asm : 8006A1D0, 0455D0 : osContRamRead			: ??? : ???
asm : 8006A3C0, 0457C0 : osContRamWrite			: ??? : ???
asm : 8006A630, 045A30 : osAfterPreNMI			: ??? : ???
asm : 8006A708, 045B08 : osInitialize			: ??? : ???
asm : 8006AA00, 045E00 : osExceptionPreamble	: ??? : ???
asm : 8006B06C, 04646C : osEnqueueAndYield		: ??? : ???
asm : 8006B16C, 04656C : noEnqueue				: ??? : ???
asm : 8006B174, 046574 : osEnqueueThread		: ??? : ???
asm : 8006B1BC, 0465BC : osPopThread			: ??? : ???
asm : 8006B1CC, 0465CC : osNop					: ??? : ???
asm : 8006B1D4, 0465D4 : osDispatchThread		: ??? : ???
asm : 8006B350, 046750 : osCleanupThread		: ??? : ???
asm : 8006B360, 046760 : osDisableInt			: ??? : ???
asm : 8006B3D0, 0467D0 : osRestoreInt			: ??? : ???
asm : 8006B3F0, 0467F0 : osSetGlobalIntMask		: ??? : ???
asm : 8006B430, 046830 : osResetGlobalIntMask	: ??? : ???
asm : 8006B480, 046880 : osPiRawStartDma		: ??? : ???
asm : 8006B550, 046950 : osPiGetCmdQueue		: ??? : ???
asm : 8006B570, 046970 : osEPiRawReadIo			: ??? : ???
asm : 8006B6E0, 046AE0 : osEPiRawWriteIo		: ??? : ???
asm : 8006B850, 046C50 : osAiDeviceBusy			: ??? : ???
asm : 8006B870, 046C70 : bcmp					: ??? : ???
asm : 8006B980, 046D80 : _Litob					: ??? : ???
asm : 8006BBD0, 046FD0 : _Ldtob					: ??? : ???
asm : 8006C01C, 04741C : _Ldunscale				: ??? : ???
asm : 8006C0B4, 0474B4 : _Genld					: ??? : ???
asm : 8006C660, 047A60 : osGetCause				: ??? : ???
asm : 8006C670, 047A70 : osGetSR				: ??? : ???
asm : 8006C680, 047A80 : osSetCompare			: ??? : ???
asm : 8006C690, 047A90 : osSetFpcCsr			: ??? : ???
asm : 8006C6A0, 047AA0 : osSetSR				: ??? : ???
asm : 8006C6B0, 047AB0 : osSetWatchLo			: ??? : ???
asm : 8006C6C0, 047AC0 : osSpDeviceBusy			: ??? : ???
asm : 8006C6E0, 047AE0 : osSpGetStatus			: ??? : ???
asm : 8006C6F0, 047AF0 : osSpSetStatus			: ??? : ???
asm : 8006C700, 047B00 : osSpSetPc				: ??? : ???
asm : 8006C730, 047B30 : osSpRawStartDma		: ??? : ???
asm : 8006C7C0, 047BC0 : osSiRawReadIo			: ??? : ???
asm : 8006C810, 047C10 : osSiRawWriteIo			: ??? : ???
asm : 8006C860, 047C60 : osContAddressCrc		: ??? : ???
asm : 8006C8CC, 047CCC : osContDataCrc			: ??? : ???
asm : 8006C950, 047D50 : osDestroyThread		: ??? : ???
asm : 8006CA30, 047E30 : osMapTLBRdb			: ??? : ???
asm : 8006CA90, 047E90 : osViInit				: ??? : ???
asm : 8006CBA0, 047FA0 : osViGetCurrentContext	: ??? : ???
asm : 8006CBC0, 047FC0 : guNormalize			: ??? : ???
asm : 8006CC20, 048020 : osPfsChecker			: ??? : ???
asm : 8006D080, 048480 : corrupted_init			: ??? : ???
asm : 8006D1D8, 0485D8 : corrupted				: ??? : ???
asm : 8006D340, 048740 : osPfsIsPlug			: ??? : ???
asm : 8006D4BC, 0488BC : osPfsRequestData		: ??? : ???
asm : 8006D560, 048960 : osPfsGetInitData		: ??? : ???
asm : 8006D620, 048A20 : ldiv					: ??? : ???
asm : 8006D6A4, 048AA4 : lldiv					: ??? : ???
asm : 8006D7E0, 048BE0 : osSiDeviceBusy			: ??? : ???
asm : 8006ED40, 04A140 : strcpy					: ??? : ???
asm : 8006ED70, 04A170 : strcmp					: ??? : ???
asm : 8006EDB0, 04A1B0 : memset					: ??? : ???
asm : 8006EDF0, 04A1F0 : decode_yay0			: void : ptr src, ptr dest
asm : 8006EF68, 04A368 : osFlashInit			: OSPiHandle* : void
asm : 8006F0B8, 04A4B8 : osFlashReadStatus		: ??? : ???
asm : 8006F184, 04A584 : osFlashReadId			: ??? : ???
asm : 8006F29C, 04A69C : osFlashClearStatus		: ??? : ???
asm : 8006F308, 04A708 : osFlashAllErase		: ??? : ???
asm : 8006F424, 04A824 : osFlashSectorErase		: ??? : ???
asm : 8006F550, 04A950 : osFlashWriteBuffer		: ??? : ???
asm : 8006F61C, 04AA1C : osFlashWriteArray		: ??? : ???
asm : 8006F75C, 04AB5C : osFlashReadArray		: ??? : ???
%}
% <-- split -->
%{ PLAY FX
asm : 8006F890, 04AC90 : playFX_00 : effect_instance* : *
asm : 8006F8F0, 04ACF0 : playFX_01 : effect_instance* : *
asm : 8006F950, 04AD50 : playFX_02 : effect_instance* : *
asm : 8006F9B0, 04ADB0 : playFX_03 : effect_instance* : *
asm : 8006FA10, 04AE10 : playFX_04 : effect_instance* : *
asm : 8006FA70, 04AE70 : playFX_05 : effect_instance* : *
asm : 8006FAD0, 04AED0 : fx_land						: void : int subtype, float posX, float posY, float posZ, int
asm : 8006FB30, 04AF30 : fx_walk						: void : int subtype, float posX, float posY, float posZ, float velX, float velZ
asm : 8006FB90, 04AF90 : playFX_08 : effect_instance* : *
asm : 8006FBF0, 04AFF0 : playFX_09 : effect_instance* : *
asm : 8006FC50, 04B050 : playFX_0A : effect_instance* : *
asm : 8006FCB0, 04B0B0 : playFX_0B : effect_instance* : *
asm : 8006FD10, 04B110 : playFX_0C : effect_instance* : *
asm : 8006FD70, 04B170 : playFX_0D : effect_instance* : *
asm : 8006FDD0, 04B1D0 : playFX_0E : effect_instance* : *
asm : 8006FE30, 04B230 : playFX_0F : effect_instance* : *
asm : 8006FE90, 04B290 : fx_emote						: effect_instance* "uncertain if intentional" : int subtype, npc* "or npcID?", float dX, float dY, float dZ, float radius, float pitch "0 = up, >0 = left", float duration, {out} effect_instance** outEffect
asm : 8006FEF0, 04B2F0 : playFX_11 : effect_instance* : *
asm : 8006FF50, 04B350 : playFX_12 : effect_instance* : *
asm : 8006FFB0, 04B3B0 : playFX_13 : effect_instance* : *
asm : 80070010, 04B410 : playFX_14 : effect_instance* : ???, float, float, float, ???
asm : 80070070, 04B470 : playFX_15 : effect_instance* : *
asm : 800700D0, 04B4D0 : playFX_16 : effect_instance* : *
asm : 80070130, 04B530 : playFX_17 : effect_instance* : *
asm : 80070190, 04B590 : playFX_18 : effect_instance* : *
asm : 800701F0, 04B5F0 : playFX_19 : effect_instance* : *
asm : 80070250, 04B650 : playFX_1A : effect_instance* : *
asm : 800702B0, 04B6B0 : playFX_1B : effect_instance* : *
asm : 80070310, 04B710 : playFX_1C : effect_instance* : *
asm : 80070370, 04B770 : playFX_1D : effect_instance* : *
asm : 800703D0, 04B7D0 : playFX_1E : effect_instance* : *
asm : 80070430, 04B830 : playFX_1F : effect_instance* : *
asm : 80070490, 04B890 : playFX_20 : effect_instance* : *
asm : 800704F0, 04B8F0 : playFX_21 : effect_instance* : *
asm : 80070550, 04B950 : playFX_22 : effect_instance* : *
asm : 800705B0, 04B9B0 : playFX_23 : effect_instance* : *
asm : 80070610, 04BA10 : playFX_24 : effect_instance* : *
asm : 80070670, 04BA70 : playFX_25 : effect_instance* : *
asm : 800706D0, 04BAD0 : playFX_26 : effect_instance* : *
asm : 80070730, 04BB30 : playFX_27 : effect_instance* : *
asm : 80070790, 04BB90 : fx_sweat						: effect_instance* : *
asm : 800707F0, 04BBF0 : fx_sleep_bubble				: effect_instance* : *
asm : 80070850, 04BC50 : playFX_2A : effect_instance* : *
asm : 800708B0, 04BCB0 : playFX_2B : effect_instance* : *
asm : 80070910, 04BD10 : playFX_2C : effect_instance* : *
asm : 80070970, 04BD70 : playFX_2D : effect_instance* : *
asm : 800709D0, 04BDD0 : playFX_2E : effect_instance* : *
asm : 80070A30, 04BE30 : playFX_2F : effect_instance* : *
asm : 80070A90, 04BE90 : playFX_30 : effect_instance* : *
asm : 80070AF0, 04BEF0 : playFX_31 : effect_instance* : *
asm : 80070B50, 04BF50 : playFX_32 : effect_instance* : *
asm : 80070BB0, 04BFB0 : playFX_33 : effect_instance* : *
asm : 80070C10, 04C010 : playFX_34 : effect_instance* : *
asm : 80070C70, 04C070 : playFX_35 : effect_instance* : *
asm : 80070CD0, 04C0D0 : playFX_36 : effect_instance* : *
asm : 80070D30, 04C130 : playFX_37 : effect_instance* : *
asm : 80070D90, 04C190 : playFX_38 : effect_instance* : *
asm : 80070DF0, 04C1F0 : playFX_39 : effect_instance* : *
asm : 80070E50, 04C250 : playFX_3A : effect_instance* : *
asm : 80070EB0, 04C2B0 : playFX_3B : effect_instance* : *
asm : 80070F10, 04C310 : playFX_3C : effect_instance* : *
asm : 80070F70, 04C370 : playFX_3D : effect_instance* : *
asm : 80070FD0, 04C3D0 : playFX_3E : effect_instance* : *
asm : 80071030, 04C430 : playFX_3F : effect_instance* : *
asm : 80071090, 04C490 : playFX_40 : effect_instance* : *
asm : 800710F0, 04C4F0 : playFX_41 : effect_instance* : *
asm : 80071150, 04C550 : playFX_42 : effect_instance* : *
asm : 800711B0, 04C5B0 : playFX_43 : effect_instance* : *
asm : 80071210, 04C610 : playFX_44 : effect_instance* : *
asm : 80071270, 04C670 : playFX_45 : effect_instance* : *
asm : 800712D0, 04C6D0 : playFX_46_whirlwind 			: effect_instance* : * % int variation, ptr object, float scale "A3", ...?
asm : 80071330, 04C730 : playFX_47 : effect_instance* : *
asm : 80071390, 04C790 : playFX_48 : effect_instance* : *
asm : 800713F0, 04C7F0 : playFX_49 : effect_instance* : *
asm : 80071450, 04C850 : playFX_4A : effect_instance* : *
asm : 800714B0, 04C8B0 : playFX_4B : effect_instance* : *
asm : 80071510, 04C910 : playFX_4C : effect_instance* : *
asm : 80071570, 04C970 : playFX_4D : effect_instance* : *
asm : 800715D0, 04C9D0 : playFX_4E : effect_instance* : *
asm : 80071630, 04CA30 : playFX_4F : effect_instance* : *
asm : 80071690, 04CA90 : playFX_50 : effect_instance* : *
asm : 800716F0, 04CAF0 : playFX_51 : effect_instance* : *
asm : 80071750, 04CB50 : playFX_52 : effect_instance* : *
asm : 800717B0, 04CBB0 : playFX_53 : effect_instance* : *
asm : 80071810, 04CC10 : playFX_54 : effect_instance* : *
asm : 80071870, 04CC70 : playFX_55 : effect_instance* : *
asm : 800718D0, 04CCD0 : playFX_56 : effect_instance* : *
asm : 80071930, 04CD30 : playFX_57 : effect_instance* : *
asm : 80071990, 04CD90 : playFX_58 : effect_instance* : *
asm : 800719F0, 04CDF0 : playFX_59 : effect_instance* : *
asm : 80071A50, 04CE50 : playFX_5A : effect_instance* : *
asm : 80071AB0, 04CEB0 : playFX_5B : effect_instance* : *
asm : 80071B10, 04CF10 : playFX_5C : effect_instance* : *
asm : 80071B70, 04CF70 : playFX_5D : effect_instance* : *
asm : 80071BD0, 04CFD0 : playFX_5E : effect_instance* : *
asm : 80071C30, 04D030 : playFX_5F : effect_instance* : *
asm : 80071C90, 04D090 : playFX_60 : effect_instance* : *
asm : 80071CF0, 04D0F0 : playFX_61 : effect_instance* : *
asm : 80071D50, 04D150 : playFX_62 : effect_instance* : *
asm : 80071DB0, 04D1B0 : playFX_63 : effect_instance* : *
asm : 80071E10, 04D210 : playFX_64 : effect_instance* : *
asm : 80071E70, 04D270 : playFX_65 : effect_instance* : *
asm : 80071ED0, 04D2D0 : playFX_66 : effect_instance* : *
asm : 80071F30, 04D330 : playFX_67 : effect_instance* : *
asm : 80071F90, 04D390 : playFX_68 : effect_instance* : *
asm : 80071FF0, 04D3F0 : playFX_69 : effect_instance* : *
asm : 80072050, 04D450 : playFX_6A : effect_instance* : *
asm : 800720B0, 04D4B0 : playFX_6B : effect_instance* : *
asm : 80072110, 04D510 : playFX_6C : effect_instance* : *
asm : 80072170, 04D570 : playFX_6D : effect_instance* : *
asm : 800721D0, 04D5D0 : playFX_6E : effect_instance* : *
asm : 80072230, 04D630 : playFX_6F : effect_instance* : *
asm : 80072290, 04D690 : playFX_70 : effect_instance* : *
asm : 800722F0, 04D6F0 : playFX_71 : effect_instance* : *
asm : 80072350, 04D750 : playFX_72 : effect_instance* : *
asm : 800723B0, 04D7B0 : playFX_73 : effect_instance* : *
asm : 80072410, 04D810 : playFX_74 : effect_instance* : *
asm : 80072470, 04D870 : playFX_75 : effect_instance* : *
asm : 800724D0, 04D8D0 : playFX_76 : effect_instance* : *
asm : 80072530, 04D930 : playFX_77 : effect_instance* : *
asm : 80072590, 04D990 : playFX_78 : effect_instance* : *
asm : 800725F0, 04D9F0 : playFX_79 : effect_instance* : *
asm : 80072650, 04DA50 : playFX_7A : effect_instance* : *
asm : 800726B0, 04DAB0 : playFX_7B : effect_instance* : *
asm : 80072710, 04DB10 : playFX_7C : effect_instance* : *
asm : 80072770, 04DB70 : playFX_7D : effect_instance* : *
asm : 800727D0, 04DBD0 : playFX_7E : effect_instance* : *
asm : 80072830, 04DC30 : playFX_7F : effect_instance* : *
asm : 80072890, 04DC90 : playFX_80 : effect_instance* : *
asm : 800728F0, 04DCF0 : playFX_81 : effect_instance* : *
asm : 80072950, 04DD50 : playFX_82 : effect_instance* : *
asm : 800729B0, 04DDB0 : playFX_83 : effect_instance* : *
asm : 80072A10, 04DE10 : playFX_84 : effect_instance* : *
asm : 80072A70, 04DE70 : playFX_85 : effect_instance* : *
asm : 80072AD0, 04DED0 : playFX_86 : effect_instance* : *
%}
% <-- split? -->
asm : 80072B30, 04DF30 : reset_battle_status : void : void
asm : 80072BB0, 04DFB0 : ALT_reset_battle_status "purpose unknown" : void : void
asm : 80072BDC, 04DFDC : load_battle_section "loads the table entry for the current battleID in gBattleStatus" : void : void
asm : 80072C90, 04E090 : load_battle 			: void : int battleID
asm : 80072CCC, 04E0CC : set_battle_stage : void : int stageID "from encounter"
asm : 80072CDC, 04E0DC : set_battle_formation : void : StaticFormationEntry* formation
asm : 80072D2C, 04E12C : setup_demo_player "assigns stats and game data for demo player" : void : void
asm : 80072E14, 04E214 : load_demo_battle		: void : int index
% 8007301C starts a battle without first strike, demo-related?
% 80073070 starts a battle with first strike, demo-related?
% <-- end of file

%}
% end at 8009A5B0

% scr : 80077E38 : NpcDefeat

/%
RAM: 800DC500 - 8010C920
ROM:    759B0 -	   A5DD0
%/
%{

%{ RAY CASTING
asm : 800DC500, 0759B0 : npc_raycast_down ...
	"check for collision below a given point" ...
	"MAY BE FOR PLAYER-ONLY, SETS VALUES IN GAME_STATUS" ...
	: uint hitObjectID "either (colliderID) or (entityID | 4000)" ...
	: uint ignoreFlags, {out} float* x, {out} float* y, {out} float* z, {out} float* length

asm : 800DC778, 075C28 : npc_raycast_down_ahead ...
	"check ahead radius/2.5 units at angles yaw, yaw+120 and yaw-120" ...
	"sets HitTest_Collider/FloorForward/FloorSide and HitTest_PosY_A/B/C" ...
	: bool hit ...
	: uint ignoreFlags, {out} float* x, {out} float* y, {out} float* z, {out} float* length

asm : 800DCB7C, 07602C : npc_raycast_down_sides  ...
	"check 10 units along yaw = 0 and 180" ...
	: bool hit ...
	: uint ignoreFlags, {out} float* x, {out} float* y, {out} float* z, {out} float* length

asm : 800DCE70, 076320 : npc_raycast_up ...
	"check for collision above a given point; sets HitTest_Collider" ...
	: uint hitObjectID "either (colliderID) or (entityID | 4000)" ...
	: uint ignoreFlags, {out} float* x, {out} float* y, {out} float* z, {out} float* length

asm : 800DD04C, 0764FC : npc_raycast_up_corner ...
	"used with npc_raycast_up_corners; always checks 10 units for entities" ...
	: uint hitObjectID "either (colliderID) or (entityID | 4000)" ...
	: uint ignoreFlags, {out} float* x, {out} float* y, {out} float* z, {out} float* length "for colliders only"

asm : 800DD228, 0766D8 : npc_raycast_up_corners ...
	"upward test for 4 corners of circle (NW/NE/SW/SE) given by point and radius" ...
	: uint hitObjectID "either (colliderID) or (entityID | 4000)" ...
	: uint ignoreFlags, {out} float* x, {out} float* y, {out} float* z, {out} float* length, float yaw, float radius

asm : 800DD44C, 0768FC : npc_raycast_general ...
	"check for collision along a given unit vector in any direction" ...
	: uint hitObjectID "either (colliderID) or (entityID | 4000)" ...
	: uint ignoreFlags, ...
	float ray_start_x, float ray_start_y, float ray_start_z, float ray_dir_x, float ray_dir_y, float ray_dir_z, ...
	float* out_hit_x, float* out_hit_y, float* out_hit_z, float* out_depth, ...
	float* out_hit_nx, float* out_hit_ny, float* out_hit_nz

asm : 800DD5B4, 076A64 : npc_get_slip_vector "equals half the perpendicular component of the move vector" ...
	: void ...
	: {out} float* outX, {out} float* outZ, float moveX, float moveZ, float normX, float normZ

asm : 800DD618, 076AC8 : npc_test_move_with_slipping ...
	"sets HitTest_Collider" ...
	: uint hitObjectID "either (colliderID) or (entityID | 4000)" ...
	: uint ignoreFlags, {out} float* x, {out} float* y, {out} float* z, float length, float yaw, float radius

asm : 800DD8FC, 076DAC : npc_test_move_without_slipping ...
	"sets HitTest_Collider" ...
	: uint hitObjectID "either (colliderID) or (entityID | 4000)" ...
	: uint ignoreFlags, {out} float* x, {out} float* y, {out} float* z, float length, float yaw, float radius

asm : 800DDAE4, 076F94 :  npc_test_move_taller_with_slipping ...
	"tests lateral motion (with slipping) at (y + 10.01) and (y+height-1)" ...
	"(indirectly) sets HitTest_Collider" ...
	: bool hit ...
	: uint ignoreFlags, {out} float* x, {out} float* y, {out} float* z, float length, float yaw, float height, float radius

asm : 800DDC44, 0770F4 : npc_test_move_simple_with_slipping ...
	"tests lateral motion (y + 10.01)" ...
	"(indirectly) sets HitTest_Collider" ...
	: bool hit ...
	: uint ignoreFlags, {out} float* x, {out} float* y, {out} float* z, float length, float yaw, float height, float radius

asm : 800DDCEC, 07719C : npc_test_move_simple_without_slipping ...
	"tests lateral motion (y + 10.01)" ...
	"(indirectly) sets HitTest_Collider" ...
	: bool hit ...
	: uint ignoreFlags, {out} float* x, {out} float* y, {out} float* z, float length, float yaw, float height, float radius

asm : 800DDD94, 077244 : npc_test_move_complex_with_slipping ...
	"check lateral movement at different heights; has slipping" ...
	"(indirectly) sets HitTest_Collider" ...
	: int whichHit "0 = none, 1-4 from bottom to top: (y + 10), (y + 15), (y + 20), or (y + height - 1)" ...
	: uint ignoreFlags, {out} float* x, {out} float* y, {out} float* z, float length, float yaw, float height, float radius
% <-- end of file

% start of file -->
asm : 800DDFD0, 077480 : player_raycast_below ...
	"downward test for 4 corners of circle (NW/NE/SW/SE) and center; possible bugged, wrong trig formulae used?" ...
	: uint hitObjectID "either (colliderID) or (entityID | 4000)" ...
	: float yaw, float diameter, {out} float* x, {out} float* y, {out} float* z, {out} float* length, ...
	{out} float* hit_rx, {out} float* hit_rz, {out} float* hitDirX, {out} float* hitDirZ

asm : 800DE46C, 07791C : player_raycast_below_cam_relative ...
	"downward test for 4 corners of circle (NW/NE/SW/SE) and center; possible bugged, wrong trig formulae used?" ...
	: uint hitObjectID "either (colliderID) or (entityID | 4000)" ...
	: player_status* player, {out} float* x, {out} float* y, {out} float* z, {out} float* length, ...
	{out} float* hit_rx, {out} float* hit_rz, {out} float* hitDirX, {out} float* hitDirZ

asm : 800DE54C, 0779FC : player_raycast_down ...
	"test a point directly below the player" ...
	: uint hitObjectID "either (colliderID) or (entityID | 4000)" ...
	: {out} float* x, {out} float* y, {out} float* z, {out} float* length

asm : 800DE7E4, 077C94 : player_raycast_up_corners ...
	"upward test for 4 corners of circle (NW/NE/SW/SE) given by point and radius" ...
	: uint hitObjectID "either (colliderID) or (entityID | 4000)" ...
	: player_status* player, {out} float* x, {out} float* y, {out} float* z, {out} float* length, float yaw
	
asm : 800DEA08, 077EB8 : player_raycast_up_corner ...
	"used with player_raycast_up_corners; always checks 10 units for entities" ...
	: uint hitObjectID "either (colliderID) or (entityID | 4000)" ...
	: {out} float* x, {out} float* y, {out} float* z, {out} float* length "for colliders only"

asm : 800DEC04, 0780B4 : player_test_lateral_overlap ...
	"do a collision trace and clip movement along the trace direction using normal of hit object" ...
	: uint hitObjectID "either (colliderID) or (entityID | 4000)" ...
	: int type, player_status*, float* posX, float* posY, float* posZ, float length, float yaw

asm : 800DEE5C, 07830C : player_raycast_general ...
	: uint hitObjectID "either (colliderID) or (entityID | 4000)" ...
	: int type, float ray_start_x, float ray_start_y, float ray_start_z, float ray_dir_x, float ray_dir_y, float ray_dir_z, float* out_hit_x, float* out_hit_y, float* out_hit_z, float* out_hit_depth, float* out_hit_nx, float* out_hit_ny, float* out_hit_nz

asm : 800DF15C, 07860C : player_test_move_without_slipping ...
	"tests at (y+0.1) and (y+height*0.286)"...
	: uint hitObjectID "either (colliderID) or (entityID | 4000)" ...
	: player_status* player, float* posX, float* posY, float* posZ, float length, float yaw, float* lowHit "test for posY + 0.1 was true"

asm : 800DF3FC, 0788AC : player_get_slip_vector ...
	: void ...
	: {out} float* outX, {out} float* outZ, float moveX, float moveZ, float normX, float normZ

asm : 800DF460, 078910 : player_test_move_with_slipping ...
	"tests at (y+10.01) and (y+height*0.75)"...
	: uint hitObjectID "either (colliderID) or (entityID | 4000)" ...
	: player_status* player, {out} float* posX, {out} float* posY, {out} float* posZ, float length, float yaw "in world coords"
%}

asm : 800DF740, 078BF0 : update_player : void : void
asm : 800DFA00, 078EB0 : check_input_use_partner	: void : void
asm : 800DFAAC, 078F5C : phys_update_standard : void : void

asm : 800DFBE8, 079098 : phys_update_lava_reset : void : void

asm : 800DFC50, 079100 : clear_player_status : void : void
asm : 800DFC74, 079124 : player_reset_data : void : void

asm : 800DFD48, 0791F8 : get_overriding_player_anim : animID "of -1 if no change allowed" : int animID
asm : 800DFEFC, 0793AC : suggest_player_anim_clearUnkFlag : void : int animID
asm : 800DFF50, 079400 : force_player_anim : void : int animID
asm : 800DFF78, 079428 : suggest_player_anim_setUnkFlag : void : int animID
asm : 800DFFCC, 07947C : update_player_blink "i.e., sprite flashing (not eyes)" : void : void
asm : 800E0088, 079538 : get_xz_dist_to_player : float dist : float posX, float posZ
asm : 800E00B0, 079560 : enable_player_shadow		: void : void
asm : 800E00E4, 079594 : disable_player_shadow		: void : void
asm : 800E0114, 0795C4 : disable_player_static_collisions "disable lateral collisions with the world while the player is standing still" : int disableCount : void
asm : 800E0140, 0795F0 : enable_player_static_collisions "enable lateral collisions with the world while the player is standing still": int disableCount : void
asm : 800E0178, 079628 : disable_player_input		: int disableCount : void
asm : 800E01A4, 079654 : enable_player_input		: int disableCount : void

asm : 800E0260, 079710 : player_render_interact_prompts : void : void

asm : 800E0294, 079744 : check_for_ispy : void : void
asm : 800E0398, 079848 : check_for_pulse_stone : void : void

asm : 800E0538, 0799E8 : has_valid_conversation_npc : bool : void
asm : 800E0580, 079A30 : check_for_conversation_prompt "should the prompt appear?" : void : void 

asm : 800E0818, 079CC8 : check_for_interactables : void : void

asm : 800E0B38, 079FE8 : update_partner_timers : void : void

asm : 800E0FEC, 07A49C : get_player_back_anim "replaces certain hard-coded animations with others facing away from the camera" : int animID : int animID

asm : 800E1138, 07A5E8 : render_player				: void : void
asm : 800E1168, 07A618 : render_player_model		: void : void
asm : 800E12F4, 07A7A4 : appendGfx_player		: void : void
asm : 800E1704, 07ABB4 : appendGfx_player_spin	: void : void % only used when speedy spinning

asm : 800E1BC4, 07B074 : update_player_shadow "update shadow and floorBelow collider" : void : void
% <-- end of file

% start of file -->
asm : 800E1F90, 07B440 : update_player_input : void : void
asm : 800E205C, 07B50C : reset_player_status : void : void
asm : 800E22E4, 07B794 : get_packed_buttons : int* outButtons "upper 16 bits for pressed, lower 16 bits for current" : void
asm : 800E2304, 07B7B4 : player_input_to_move_vector "uses input from PlayerStatus" : void : float* angle, float* magnitude "0 to 70"
asm : 800E23FC, 07B8AC : game_input_to_move_vector "uses input from GameStatus" : void : float* angle, float* magnitude "0 to 70"

asm : 800E26B0, 07BB60 : record_jump_apex : void : void
asm : 800E26C4, 07BB74 : can_trigger_loading_zone : bool : void
asm : 800E2778, 07BC28 : move_player				: void : int duration "frames", float yaw, float speed
asm : 800E27E0, 07BC90 : collision_main_above : int hitID : void

asm : 800E2D18, 07C1C8 : phys_update_jump : void : void
asm : 800E2F60, 07C410 : phys_init_integrator_for_current_state : void : void
asm : 800E306C, 07C51C : gravity_use_fall_parms : void : void
asm : 800E3100, 07C5B0 : phys_update_falling : void : void
asm : 800E3278, 07C728 : phys_player_land : void : void
asm : 800E3448, 07C8F8 : integrate_gravity : float velocity : void

asm : 800E3514, 07C9C4 : player_check_collision_below : void : float length, {out} int* hitColliderID

asm : 800E363C, 07CAEC : collision_main_lateral : void : void
asm : 800E4308, 07D7B8 : collision_check_player_intersecting_world : int hitID : int type, int heightOffset
asm : 800E4508, 07D9B8 : collision_check_player_overlaps "actually just updates gPlayerStatus.field_0x64" : void : void
asm : 800E45E0, 07DA90 : phys_should_player_be_sliding : bool : void
asm : 800E46C8, 07DB78 : phys_is_on_sloped_ground : bool : void
asm : 800E4744, 07DBF4 : phys_main_collision_below : void : void
asm : 800E4BB8, 07E068 : collision_lava_reset_check_additional_overlaps : void : void
asm : 800E4FCC, 07E47C : check_input_midair_jump	: void : void
asm : 800E5088, 07E538 : get_current_partner_id : #partnerID : void
asm : 800E5098, 07E548 : try_player_footstep_sounds : void : int interval "how many frames between sounds"
asm : 800E5150, 07E600 : phys_update_interact_collider : void : void
asm : 800E5174, 07E624 : phys_check_interactable_collision : int hitID : void
asm : 800E52F8, 07E7A8 : phys_can_player_interact : bool : void
% asm : 800E5348, 07E7F8 : player_get_facing_angle : float : void
asm : 800E546C, 07E91C : player_get_camera_facing_angle : float : void
asm : 800E54E0, 07E990 : phys_save_ground_pos : void : void
asm : 800E5530, 07E9E0 : phys_adjust_cam_on_landing : int result "0-2" : void

asm : 800E58F0, 07EDA0 : phys_clear_spin_history : void : void
asm : 800E5938, 07EDE8 : phys_get_spin_history : float angle : int lagTime "frames", {out} int* x, {out} int* y, {out} int* z
asm : 800E59A0, 07EE50 : phys_reset_spin_history : void : void
asm : 800E5A2C, 07EEDC : phys_update_action_state : void : void

asm : 800E5C78, 07F128 : phys_peach_update : void : void

asm : 800E5DA4, 07F254 : set_action_state			: void : #actionState actionState
asm : 800E5F68, 07F418 : update_locomotion_state	: void : void % update run/walk state based on speed and slowgo
asm : 800E5FD0, 07F480 : start_falling				: void : void
asm : 800E6034, 07F4E4 : start_bounce_a				: void : void % bouncing off kooper, perhaps also enemies jumped on?
asm : 800E608C, 07F53C : start_bounce_b				: void : void % bouncing off kooper, perhaps also enemies jumped on?
asm : 800E60E0, 07F590 : check_input_hammer			: bool : void
asm : 800E6160, 07F610 : check_input_jump			: bool : void
asm : 800E6268, 07F718 : check_input_spin			: void : void

asm : 800E636C, 07F81C : peach_set_disguise_anim : void : animID
% asm : 800e63a4 : peach_remove_disguise : void : int
asm : 800E6428, 07F8D8 : peach_check_for_parasol_input : void : void
asm : 800E6500, 07F9B0 : peach_sync_disguise_npc : void : void
asm : 800E657C, 07FA2C : peach_make_disguise_npc : npc* : int peachDisguise "from game_status"
asm : 800E66C4, 07FB74 : peach_disguise_check_overlaps : void : void
% <-- end of file

asm : 800E69DC, 07FE8C : can_pause : bool : #buttons current, #buttons pressed

asm : 800E6B78, 080028 : setup_partner_popup : int count : popup_menu*
asm : 800E6C44, 0800F4 : setup_item_popup : int count : popup_menu*

asm : 800E6CE4, 080194 : check_input_open_menus : void : void

asm : 800E728C, 08073C : check_input_status_menu	: void : void
% <-- end of file

% start of file -->
asm : 800E73A0, 080850 : clear_player_data			: void : void
asm : 800E7564, 080A14 : get_player_data			: player_data* : void	% returns constant 8010F290
asm : 800E7574, 080A24 : add_item					: int addedPosition "-1 if no room" : int itemID
asm : 800E75EC, 080A9C : get_item_count				: int numItems : void
asm : 800E7620, 080AD0 : get_item_empty_count		: int numEmpty : void
asm : 800E7644, 080AF4 : find_item "works for both keys and consumables" : int slotNum "-1 if not found" : int itemID
asm : 800E76CC, 080B7C : sort_items					: void : void
asm : 800E773C, 080BEC : add_badge					: int addedPosition "-1 if no room" : int itemID
asm : 800E77C4, 080C74 : store_item					: int addedPosition "-1 if no room" : int itemID
asm : 800E7814, 080CC4 : get_stored_count			: int numItems : void
asm : 800E7848, 080CF8 : get_stored_empty_count		: int numEmpty : void
asm : 800E786C, 080D1C : enforce_hpfp_limits		: void : void
asm : 800E7934, 080DE4 : initialize_status_menu		: void : void
asm : 800E7CA4, 081154 : status_menu_draw_number	: void : int iconID, int posX, int posY, int value, int numDigits
asm : 800E7E34, 0812E4 : status_menu_draw_stat		: void : int iconID, int posX, int posY, int min, int max
asm : 800E80B4, 081564 : update_status_menu			: void : void
asm : 800E92D8, 082788 : coin_counter_draw_content	: @draw_window_contents
asm : 800E93DC, 08288C : update_coin_counter		: void : void
asm : 800E9518, 0829C8 : show_coin_counter			: void : void
asm : 800E9698, 082B48 : hide_coin_counter			: void : void

api : 800E96F8, 082BA8 : ShowCoinCounter "shows coin counter in lower left hand corner" : void : bool "1 = show | 0 = hide"

asm : 800E973C, 082BEC : draw_status_ui "draw status menu and coin counter" : void : void
asm : 800E9760, 082C10 : open_status_menu_long "opens for 210 frames" : void : void
asm : 800E978C, 082C3C : open_status_menu_short "opens for 105 frames" : void : void
asm : 800E97B8, 082C68 : close_status_menu : void : void

asm : 800E9910, 082DC0 : is_status_menu_visible					: bool : void
asm : 800E9920, 082DD0 : status_menu_start_blinking_hp			: void : void
asm : 800E9964, 082E14 : status_menu_stop_blinking_hp			: void : void
asm : 800E998C, 082E3C : status_menu_start_blinking_fp			: void : void
asm : 800E99D0, 082E80 : status_menu_stop_blinking_fp			: void : void
asm : 800E99F4, 082EA4 : status_menu_start_blinking_coins		: void : void
asm : 800E9A38, 082EE8 : status_menu_stop_blinking_coins		: void : void
asm : 800E9A60, 082F10 : status_menu_start_blinking_sp			: void : void
asm : 800E9A94, 082F44 : status_menu_stop_blinking_sp			: void : void
asm : 800E9AB8, 082F68 : status_menu_start_blinking_sp_bars		: void :  int numBarsToBlink
asm : 800E9AE4, 082F94 : status_menu_start_blinking_starpoints	: void : void
asm : 800E9B0C, 082FBC : status_menu_stop_blinking_starpoints	: void : void
asm : 800E9B30, 082FE0 : decrement_status_menu_disabled		: void : void
asm : 800E9B54, 083004 : increment_status_menu_disabled		: void : void
asm : 800E9B6C, 08301C : sync_status_menu "set displayed values to real values" : void : void
asm : 800E9BB0, 083060 : reset_status_menu			: void : void
asm : 800E9D48, 0831F8 : is_ability_active			: int activeCount : #abilityID
asm : 800EA0B8, 083568 : is_partner_ability_active "STUB -- unused in vanilla game" : int activeCount : #abilityID
asm : 800EA0C0, 083570 : add_coins					: int newCoinTotal : int amount
asm : 800EA128, 0835D8 : add_star_points			: int newValue : int amount
asm : 800EA170, 083620 : add_star_pieces			: int newValue : int amount
asm : 800EA1B4, 083664 : increment_max_SP			: void : void
asm : 800EA1D8, 083688 : set_max_SP					: void : int value
asm : 800EA1F4, 0836A4 : add_SP						: void : int amount
asm : 800EA264, 083714 : recover_fp					: int newValue : int amount "-1 heals to full, -2 heals to full and increments maxFP by one"
asm : 800EA2CC, 08377C : recover_hp					: int newValue : int amount "-1 heals to full, -2 heals to full and increments maxHP by one"
asm : 800EA334, 0837E4 : subtract_hp				: void : int amount "use negative values to set HP = 1"
asm : 800EA360, 083810 : has_full_hp				: bool : void
asm : 800EA37C, 08382C : has_full_fp				: bool : void
asm : 800EA398, 083848 : add_fortress_keys			: int newValue : int amount
asm : 800EA3B8, 083868 : subtract_fortress_keys		: int newValue : int amount
asm : 800EA3E4, 083894 : get_fortress_key_count		: int value : void
% <-- end of file

asm : 800EA400, 0838B0 : use_consumable				: script_instance* itemUseScript : int itemIndex "which item to use from consumables inventory, stores itemID in Var[A] of returned script"
asm : 800EA47C, 08392C : remove_consumable "remove item at 8010CD20" : void : void

asm : 800EA514, 0839C4 : partner_is_idle : bool : void
asm : 800EA5A4, 083A54 : partner_is_flying : void : bool flying
asm : 800EA5D0, 083A80 : partner_create_npc : void : void
asm : 800EA6A8, 083B58 : partner_free_npc : void : void
asm : 800EA6CC, 083B7C : partner_manager_update : void : void
asm : 800EB168, 084618 : switch_to_partner : void : #partnerID
asm : 800EB200, 0846B0 : partner_init_after_battle : void : #partnerID
% 800EB2A4
asm : 800EB314, 0847C4 : partner_use_ability		: bool success : void
asm : 800EB3E0, 084890 : partner_player_can_pause : bool canPause : void
asm : 800EB42C, 0848DC : partner_can_use_ability : bool canUseAbility : void
asm : 800EB474, 084924 : partner_reset_data "called during map load" : void : void
asm : 800EB580, 084A30 : partner_initialize_data "called on boot" : void : void
asm : 800EB5E4, 084A94 : partner_test_enemy_collision "is the partner current colliding with a given enemy? triggers first strike when true" : bool isColliding : enemy* testEnemy
asm : 800EB638, 084AE8 : partner_get_ride_script : bytecode* : void
asm : 800EB658, 084B08 : partner_handle_before_battle : void : void
asm : 800EB6C4, 084B74 : partner_handle_after_battle : void : void
asm : 800EB7CC, 084C7C : partner_kill_ability_script "kill current ability script, if one is running" : void : void
asm : 800EB818, 084CC8 : partner_suspend_ability_script "suspend current ability script, if one is running" : void : void
asm : 800EB860, 084D10 : partner_resume_ability_script "resumes current ability script, if one is running" : void : void

asm : 800EB8A8, 084D58 : partner_walking_enable : void : npc* partner, int
asm : 800EBA3C, 084EEC : partner_walking_update_player_tracking	: void : npc* partner
asm : 800EBB40, 084FF0 : partner_walking_update_motion : void : npc* partner, int initialCall
asm : 800EBC74, 085124 : partner_walking_follow_player : void : npc* partner, int initialCall
asm : 800ED310, 0867C0 : partner_flying_enable : void : npc* partner, int
asm : 800ED4B8, 086968 : partner_flying_update_player_tracking	: void : npc* partner
asm : 800ED5D0, 086A80 : partner_flying_update_motion : void : npc* partner, int initialCall
asm : 800ED9F8, 086EA8 : partner_flying_follow_player : void : npc* partner, int initialCall
asm : 800EE994, 087E44 : partner_init_put_away : void : npc* partner
asm : 800EE9B8, 087E68 : partner_put_away : void : npc* partner, int initialCall
asm : 800EECC4, 088174 : partner_init_get_out : void : npc* partner
asm : 800EECE8, 088198 : partner_get_out : void : npc* partner
/%
asm : 800EF300, 0887B0 : partner_disable_ai : void : void
asm : 800EF314, 0887C4 : partner_enable_ai : void : void
%/
asm : 800EF328, 0887D8 : enable_partner_ai : void : void
asm : 800EF394, 088844 : partner_set_tether_distance : void : float distanceFromPlayer
asm : 800EF3A4, 088854 : partner_reset_tether_distance "default = 40.0" : void : void

asm : 800EF45C, 08890C : partner_clear_player_tracking : void : npc* partner
% possible end of file
asm : 800EF3C0, 088870 : partner_set_goal_pos : void : int posX, int posZ
asm : 800EF600, 088AB0 : partner_enable_input	: int disableCount : void
asm : 800EF628, 088AD8 : partner_disable_input	: int disableCount : void
asm : 800EF640, 088AF0 : partner_do_player_collision : void : npc* partner
asm : 800EF82C, 088CDC : partner_move_to_goal : void : npc* partnerNpc, bool flying
% <-- split -->

asm : 800F13B0, 08A860 : hide_popup_menu : void : void
asm : 800F1538, 08A9E8 : destroy_popup_menu : void : void

asm : 800F1A10, 08AEC0 : popup_menu_update : int state : void

asm : 800F3680, 08CB30 : popup_menu_draw_menu_contents  : @draw_window_contents
asm : 800F4648, 08DAF8 : popup_menu_draw_title_contents : @draw_window_contents

% asm : 800F4648 : draw_submenu_title : void : ???, int posX, int posY -- for the little menus 'items'/'partner'/etc

asm : 800F4E40, 08E2F0 : create_popup_menu : void : popup_menu* popup
% another type of create at 800f4fc4?

asm : 800F52E0, 08E790 : draw_box : bool failed : int flags, int windowStyle "present index or window_style_custom pointer", int posX, int posY, int posZ, int width, int height, int opacity, int darkening "from 00 (no darkening) to FF (black)", float scaleX, float scaleY, float rotX, float rotY, float rotZ, code fpDrawContents, int drawContentsArg0, matrix4f* rotScaleMtx, int translateX, int translateY, {out} matrix4f* outMtx
% 800F7B28 <-- end of file, also end of functions for this section
%}
% end at 8010C920

/%
RAM: 8010F6D0 - 801512B0
ROM:    A5DD0 -	   E79B0
%/
%{

asm : 8010F6D0, 0A5DD0 : update_entities			: void : void
asm : 8010FA98, 0A6198 : update_shadows				: void : void

asm : 8010FBC0, 0A62C0 : set_entity_commandlist : void : entity*, int* entityScript
asm : 8010FBD8, 0A62D8 : step_entity_commandlist : void : entity*
asm : 8010FD68, 0A6468 : exec_entity_commandlist : void : entity*

asm : 8010FE68, 0A6568 : entity_model_set_shadow_color : void : int alpha
asm : 8010FEB4, 0A65B4 : render_entities : void : void
asm : 801100CC, 0A67CC : render_shadows : void : void

asm : 8011022C, 0A692C : update_entity_transform_matrix		: void : entity*
asm : 80110374, 0A6A74 : update_shadow_transform_matrix : void : shadow*
asm : 801104A4, 0A6BA4 : update_entity_inverse_rotation_matrix : void : entity*
asm : 801105E8, 0A6CE8 : get_entity_by_index		: entity* : int index
asm : 80110604, 0A6D04 : get_shadow_by_index		: shadow* : int index
asm : 80110620, 0A6D20 : get_entity_list			: entity** : void
asm : 8011064C, 0A6D4C : get_shadow_list			: shadow** : void
asm : 80110678, 0A6D78 : entity_start_script "call this to notify that a new instance of the bound entity script should be started" : bool "false if script is null" : void
asm : 801106A4, 0A6DA4 : get_entity_type	: #entityType : int entityIndex
asm : 801106D0, 0A6DD0 : delete_entity	: void : int entityIndex
asm : 80110790, 0A6E90 : delete_entity_and_unload_data	: void : int entityIndex
asm : 8011085C, 0A6F5C : _delete_shadow : void : int shadowIndex
asm : 801108B8, 0A6FB8 : entity_get_collision_flags "checks entity against objects the player is touching, hammering, etc." : int flags : entity*
asm : 801109DC, 0A70DC : entity_interacts_with_current_partner : bool : int entityIndex
asm : 80110AAC, 0A71AC : test_player_entity_aabb	: bool intersects : entity*
asm : 80110BB0, 0A72B0 : is_player_action_state		: bool : #actionState
asm : 80110BCC, 0A72CC : entity_set_render_script : void : entity*, $EntityModelScript
asm : 80110C14, 0A7314 : load_area_specific_entity_data		: void : void
asm : 80110CB8, 0A73B8 : clear_entity_data : void : int "usually zero?"
asm : 801110B4, 0A77B4 : entity_anim_make_vertex_pointers : void : $EntityBP, ptr baseAddr, vertex* baseVertices
asm : 8011115C, 0A785C : is_entity_data_loaded : bool dataNotFound : entity*, $EntityBP, int* loadedStart "buffer position in words", int* loadedEnd "buffer position in words"
asm : 801112A4, 0A79A4 : load_simple_entity_data : void : entity*, $EntityBP
asm : 80111408, 0A7B08 : load_split_entity_data : void : entity*, $EntityBP
asm : 801117DC, 0A7EDC : entity_free_static_data : void : $EntityBP

asm : 801118C4, 0A7FC4 : create_entity				: int entityIndex : $EntityBP data, int x, int y, int z, int flags
asm : 80111BD8, 0A82D8 : create_shadow_from_data	: int shadowIndex : static_shadow_data* data, float x, float y, float z
api : 80111D38, 0A8438 : MakeEntity       			: Var[0] int entityIndex : varargs % $EntityBP, x, y, z, angle, ...
api : 80111E9C, 0A859C : SetEntityCullMode : void : int cullMode
api : 80111F2C, 0A862C : UseDynamicShadow "last-created entity: should shadow position be recomputed every frame?" : void : bool
api : 80111FB0, 0A86B0 : AssignScript				: void : $Script
api : 80111FF8, 0A86F8 : AssignAreaFlag				: void : int index
api : 8011206C, 0A876C : AssignBlockFlag			: void : int flagVar
api : 801120B8, 0A87B8 : AssignFlag					: void : int flagVar
api : 80112114, 0A8814 : AssignPanelFlag			: void : int flagVar
api : 80112170, 0A8870 : AssignCrateFlag			: void : int flagVar
asm : 801121CC, 0A88CC : create_entity_shadow		: int shadowIndex : entity*, float x, float y, float z

asm : 80112260, 0A8960 : create_shadow_type			: int shadowIndex : int type "0-5 inclusive", float x, float y, float z
asm : 80112328, 0A8A28 : delete_shadow : void : int shadowIndex
asm : 80112344, 0A8A44 : update_entity_shadow_position : void : entity*
asm : 801125E8, 0A8CE8 : entity_raycast_down : bool hit : {out} float* x, {out} float* y, {out} float* z, {out} float* hitYaw, {out} float* hitPitch, {out} float* hitLength
asm : 8011285C, 0A8F5C : set_standard_shadow_scale "used for mario and battle actors" : void : shadow*, float height
asm : 80112900, 0A9000 : set_npc_shadow_scale : void : shadow*, float height, float npcRadius "collision size"
asm : 801129D4, 0A90D4 : set_peach_shadow_scale : void : shadow*, float height
asm : 80112B20, 0A9220 : is_block_on_ground : bool : entity*
asm : 80112B90, 0A9290 : state_delegate_NOP : void : void
asm : 80112B98, 0A9298 : clear_game_modes : void : void
asm : 80112BBC, 0A92BC : set_next_game_mode "unused?" : game_mode* : game_mode_bp* mode
asm : 80112CA8, 0A93A8 : set_game_mode_slot : game_mode* : int slot "0 or 1", game_mode_bp* mode

asm : 80112D84, 0A9484 : game_mode_set_fpDrawAuxUI : void : int slot, code fpDrawUI

asm : 80112E78, 0A9578 : step_current_game_mode		: void : void
asm : 80112EEC, 0A95EC : state_do_unk "state delegate 0xC, unused?" : void : void
asm : 80112F58, 0A9658 : state_render_backUI		: void : void
asm : 80112FC4, 0A96C4 : state_render_frontUI		: void : void
asm : 80113090, 0A9790 : appendGfx_model : void : model*
asm : 80114D6C, 0AB46C : load_tile_header			: void : char* textureName, int romOffset, int size
asm : 80115B0C, 0AC20C : get_model_property			: int* : model_node* mdl, #modelProperty property
asm : 80115B44, 0AC244 : _load_model_textures "recursive part for load_model_textures" : void : model_node* mdl, int romOffset, int size
asm : 80115C24, 0AC324 : load_model_textures 		: void : model_node* model, int romOffset, int size
asm : 80115CA8, 0AC3A8 : mdl_get_child_count : int numChildren : model_node* mdl
asm : 80115D44, 0AC444 : clear_model_data			: void : void
asm : 80115FE8, 0AC6E8 : init_model_data			: void : void
asm : 8011612C, 0AC82C : calculate_model_sizes		: void : void
asm : 8011620C, 0AC90C : mdl_create_model : void : model_bp*
asm : 80116B90, 0AD290 : render_models				: void : void
asm : 80117C94, 0AE394 : appendGfx_model_group : void : model*
asm : 80117E74, 0AE574 : render_transform_group_node : void : model_node*
asm : 8011800C, 0AE70C : render_transform_group : void : mdl_transform_group*

asm : 8011AD30, 0B1430 : get_model_from_list_index	: model* : int listIndex
asm : 8011AD48, 0B1448 : load_data_for_models "loads textures and prepares transformations" : void : model_node* mdl "typically root", int romOffset, int size
asm : 8011ADC8, 0B14C8 : load_model_transforms		: void : model_node* mdl, model_node* parent, matrix4f* mdlTxMtx, int treeDepth
asm : 8011B010, 0B1710 : get_model_list_index_from_tree_index	: int listIndex : int treeIndex
asm : 8011B090, 0B1790 : get_transform_group_index : int groupIndex "0-3 or -1 if none" : modelID
asm : 8011B0EC, 0B17EC : get_model_center_and_size  : void : modelID, float* outCenterX, float* outCenterY, float* outCenterZ, float* outSizeX,float* outSizeY, float* outSizeZ
asm : 8011B1C0, 0B18C0 : get_transform_group : mdl_transform_group* : int groupIndex

asm : 8011B37C, 0B1A7C : make_transform_group : void : modelID
asm : 8011B5D0, 0B1CD0 : enable_transform_group : void : modelID
asm : 8011B660, 0B1D60 : disable_transform_group : void : modelID
asm : 8011B6F0, 0B1DF0 : clone_model "fully copies srcModel, changing only modelID" : void : int srcModelID, int newModelID

asm : 8011BB50, 0B2250 : enable_world_fog : void : void
asm : 8011BB64, 0B2264 : disable_world_fog : void : void
asm : 8011BB74, 0B2274 : set_world_fog_dist : void : int start, int end
asm : 8011BB88, 0B2288 : set_world_fog_color "each channel 0-255" : void : int R, int G, int B, int A
asm : 8011BBA4, 0B22A4 : is_world_fog_enabled : bool : void
asm : 8011BBB4, 0B22B4 : get_world_fog_distance : void : int* out_start, int* out_end
asm : 8011BBD8, 0B22D8 : get_world_fog_color "each channel 0-255" : void : int* R, int* B, int* G, int* A
asm : 8011BC14, 0B2314 : set_tex_panner		: void : model* model, int pannerID
asm : 8011BC1C, 0B231C : set_main_pan_u		: void : int pannerID, int amount
asm : 8011BC34, 0B2334 : set_main_pan_v		: void : int pannerID, int amount
asm : 8011BC4C, 0B234C : set_aux_pan_u		: void : int pannerID, int amount
asm : 8011BC64, 0B2364 : set_aux_pan_v		: void : int pannerID, int amount
asm : 8011BC7C, 0B237C : set_mdl_custom_gfx_set : void : model*, int customGfxIndex "-1 for no change", int fogType "-1 for no change"
asm : 8011BCB4, 0B23B4 : set_custom_gfx : void : int customGfxIndex, gfx* preRender, gfx* postRender
asm : 8011BCD0, 0B23D0 : set_custom_gfx_builders : void : int customGfxIndex, code, code % each fp is: void func(int index)
asm : 8011BCEC, 0B23EC : build_custom_gfx : void : void
asm : 8011BE14, 0B2514 : is_identity_fixed_mtx : bool "true if mtx is NULL or equal to identity" : matrix4s* mtx
asm : 8011BE5C, 0B255C : set_background_color_blend : void : int R, int G, int B, int alpha "0-255 lerp amount"
asm : 8011BE80, 0B2580 : get_background_color_blend : void : int* out_R, int* out_G, int* out_B, int* out_alpha "0-255 lerp amount"
asm : 8011BEB4, 0B25B4 : set_model_fog_color_parameters : void : int primR, int primG, int primB, int primA, int fogR, int fogG, int fogB, int fogStart, int fogEnd
asm : 8011BF14, 0B2614 : get_model_fog_color_parameters : void : {out} int* primR, {out} int* primG, {out} int* primB, {out} int* primA, {out} int* fogR, {out} int* fogG, {out} int* fogB, {out} int* fogStart, {out} int* fogEnd
asm : 8011BF98, 0B2698 : set_model_env_color_parameters : void : int primR, int primG, int primB, int envR, int envG, int envB
asm : 8011BFD4, 0B26D4 : get_model_env_color_parameters : void : {out} int* primR, {out} int* primG, {out} int* primB, {out} int* envR, {out} int* envG, {out} int* envB
asm : 8011C028, 0B2728 : mdl_get_vertex_count : void : gfx*, {out} int* numVertices, {out} vertex* minVertex, {out} int* gfxCmdCount, vertex* baseAddr
asm : 8011C0DC, 0B27DC : mdl_local_gfx_update_vtx_pointers : void : byte* src, int count, byte* dest
asm : 8011C130, 0B2830 : mdl_local_gfx_copy_vertices : void : byte* src, int count, byte* dest
asm : 8011C164, 0B2864 : mdl_make_local_vertex_copy : void : int copyIndex, int modelID, bool clear
asm : 8011C2B0, 0B29B0 : mdl_get_copied_vertices : void : int copyIndex, {out} vertex** firstVertex, {out} vertex** copiedVertices, {out} int* numCopied
asm : 8011C2EC, 0B29EC : mdl_get_copied_gfx "side effect: causes struct's selector to increment" : gfx* : int copyIndex
%asm : 8011c80c : ??? : bool : modelID, int, {out} float* screenPosX, {out} float *screenPosY
%asm : 8011cfbc : ??? : bool : float x, float y, float z, int, {out} float* screenPosX, {out} float* screenPosY
asm : 8011C32C, 0B2A2C : mdl_project_tex_coords : void : modelID, gfx* destGfx, matrix4f* destMtx, vertex* destVertices
asm : 8011D72C, 0B3E2C : mdl_draw_hidden_panel_surface : void : gfx** displayListPos, int modelID
asm : 8011D7E4, 0B3EE4 : mdl_get_next_texture_address : ptr "0x40 aligned, NULL if out of space" : int size
asm : 8011D82C, 0B3F2C : mdl_set_all_fog_mode : void : int fogMode
asm : 8011D890, 0B3F90 : clear_render_tasks : void : void
asm : 8011D8D0, 0B3FD0 : clear_render_tasks_alt "unused?" : void : void
asm : 8011D910, 0B4010 : queue_render_task "might use blueprint pattern: render_task_BP -> render_task" : render_task* : render_task* task
asm : 8011D9B8, 0B40B8 : execute_render_tasks : void : void
% <-- split -->
asm : 8011DE80, 0B4580 : animator_copy_vertices_to_buffer : vertex* : model_animator* animator, animator_node* node, vertex* buffer, int vertexCount, int overhead, int startIndex
asm : 8011DFD0, 0B46D0 : animator_make_mirrorZ : void : matrix4f*
asm : 8011E014, 0B4714 : animator_make_mirrorY : void : matrix4f*
asm : 8011E058, 0B4758 : animator_make_mirrorX : void : matrix4f*
asm : 8011E09C, 0B479C : animator_make_identity : void : matrix4f*
asm : 8011E0DC, 0B47DC : get_animator_child_with_id : animator_node* : animator_node* root, int id
asm : 8011E150, 0B4850 : get_animator_child_for_model : animator_node* : animator_node* root, modelID
asm : 8011E1C4, 0B48C4 : free_animator_nodes : void : animator_node* root
asm : 8011E224, 0B4924 : clear_animator_list : void : void
asm : 8011E310, 0B4A10 : reset_animator_list : void : void
asm : 8011E398, 0B4A98 : delete_model_animator_node : void : animator_node*
asm : 8011E400, 0B4B00 : delete_model_animator_nodes : void : model_animator*
asm : 8011E438, 0B4B38 : delete_model_animator : void : model_animator*
asm : 8011E4B8, 0B4BB8 : create_model_animator : int index : $ModelAnimation
asm : 8011E5E0, 0B4CE0 : create_mesh_animator  : int index : $ModelAnimation
asm : 8011E718, 0B4E18 : add_anim_node : animator_node* newNode : model_animator*, int parentNodeID, animator_node_bp*
asm : 8011E8BC, 0B4FBC : update_model_animator : void : int index
asm : 8011EBF0, 0B52F0 : step_model_animator : bool keepGoing : model_animator*
asm : 8011F058, 0B5758 : animator_update_model_transforms : void : model_animator*, matrix4s* rootTransform
asm : 8011F118, 0B5818 : animator_node_update_model_transform : void : model_animator*, matrix4f* flipMtx, animator_node* node, matrix4s* rootTransform
asm : 8011F304, 0B5A04 : render_animated_model : void : int animatorID, matrix4s* rootTransform
asm : 8011F3E8, 0B5AE8 : render_animated_model_with_vertices : void : int animatorID, matrix4s* rootTransform, int vertexSegment, ptr vertexArray
asm : 8011F4D4, 0B5BD4 : appendGfx_animator : void : model_animator*
asm : 8011FA54, 0B6154 : appendGfx_animator_node : void : model_animator*, animator_node*, matrix4f* mtx
asm : 8011FF74, 0B6674 : get_animator_node_for_tree_index : animator_node* : model_animator*, int treeIndex
asm : 8011FF98, 0B6698 : get_animator_node_with_id : animator_node* : model_animator*, int nodeID
asm : 8011FFB4, 0B66B4 : set_animator_tree_to_node_map : void : model_animator*, int* nodeIDs, int count
asm : 8011FFE0, 0B66E0 : get_animator_by_index : model_animator* : int index
asm : 80120000, 0B6700 : set_animator_render_callback : void : int index, code fpRenderCallback, ptr callbackArg
asm : 80120028, 0B6728 : enable_anim_model_fog : void : void
asm : 8012003C, 0B673C : disable_anim_model_fog : void : void
asm : 8012004C, 0B674C : set_anim_model_fog_dist : void : int start, int end
asm : 80120064, 0B6764 : set_anim_model_fog_color "each channel 0-255" : void : int R, int G, int B, int A
asm : 8012008C, 0B678C : is_anim_model_fog_enabled : bool : void
asm : 8012009C, 0B679C : get_anim_model_fog_distance : void : int* out_start, int* out_end
asm : 801200B8, 0B67B8 : get_anim_model_fog_color "each channel 0-255" : void : int* R, int* G, int* B, int* A
asm : 801200EC, 0B67EC : set_animator_flags		: void : int index, int bits
asm : 80120118, 0B6818 : clear_animator_flags	: void : int index, int bits
asm : 80120148, 0B6848 : play_model_animation	: void : int index, $ModelAnimation
asm : 80120198, 0B6898 : play_model_animation_starting_from	: void : int index, $ModelAnimation, int framesToSkip
asm : 80120234, 0B6934 : load_model_animator_node "recursive part of next function" : void : static_animator_node* node, model_animator* animator, int parentNodeID, {out} int* treeIndexToNodeIDs
asm : 801203AC, 0B6AAC : load_model_animator_tree : void : int index, static_animator_node** tree
asm : 80120420, 0B6B20 : load_mesh_animator_node "recursive part of next function" : void : static_animator_node* node, model_animator* animator, int parentNodeID, {out} int* treeIndexToNodeIDs
asm : 80120474, 0B6B74 : load_mesh_animator_tree : void : int index, static_animator_node** tree
asm : 80120530, 0B6C30 : reload_mesh_animator_node "recursive part of next function" : void : static_animator_node* node, model_animator* animator, int parentNodeID, {out} int* treeIndexToNodeIDs
asm : 80120678, 0B6D78 : reload_mesh_animator_tree : void : model_animator* animator
asm : 801206F8, 0B6DF8 : step_mesh_animator : void : model_animator* animator
% <-- split -->
asm : 80120BB0, 0B72B0 : clear_entity_models : void : void
asm : 80120C58, 0B7358 : init_entity_models : void : void
asm : 80120CE0, 0B73E0 : load_entity_model : int entityModelID : ptr entityModelData
asm : 80120DE4, 0B74E4 : ALT_load_entity_model "same as func_80120ce0, but sets entity flag 400 as well. only used by entity models allocated in scripts" : int entityModelIndex : int* renderCmdList
asm : 80120F04, 0B7604 : exec_entity_model_commandlist : void : int entityModelIndex
asm : 80120FB8, 0B76B8 : step_entity_model_commandlist : bool hasMore : entity_model*
asm : 80121140, 0B7840 : make_entity_model_mtx_flipZ : void : matrix4f* mtx
asm : 80121184, 0B7884 : appendGfx_entity_model : void : entity_model*
% shadows and entities are drawn in a similar manner, with both represented with 'entity models'
% two render paths are available depending on whether or not these models have vertex data
asm : 80121CE8, 0B83E8 : draw_entity_model_A "used for shadows" : void : int entityModelIndex, matrix4s* transformMtx
asm : 80121EB8, 0B85B8 : draw_entity_model_B "used for actual entities" : void : int entityModelIndex, matrix4s* transformMtx, int segment "80154374 set to this", int* vertexArray
asm : 80122088, 0B8788 : draw_entity_model_C "unused?" : void : int entityModelIndex, matrix4s* transformMtx
asm : 80122188, 0B8888 : draw_entity_model_D "unused?" : void : int entityModelIndex, matrix4s* transformMtx
asm : 80122288, 0B8988 : draw_entity_model_E "used for virtual entities" : void : int entityModelIndex, matrix4s* transformMtx
asm : 80122D7C, 0B947C : set_entity_model_render_command_list : void : int entityModelIndex, int* cmdList
asm : 80122DDC, 0B94DC : get_entity_model : entity_model* : int listIndex
asm : 80122DFC, 0B94FC : free_entity_model_by_index : void : entity_model*
asm : 80122E94, 0B9594 : free_entity_model_by_ref : void : entity_model*
asm : 80122EE8, 0B95E8 : set_entity_model_flags : void : int entityModelIndex, int flagBits
asm : 80122F24, 0B9624 : clear_entity_model_flags : void : int entityModelIndex, int flagBits
asm : 80122F64, 0B9664 : bind_entity_model_setupGfx : void : int entityModelIndex, int callbackArg0, code fpSetupGfxCallback
% asm : ??? : 80122F8C : void : another set_entity_model_flags
% asm : ??? : 80122FB8 : void : another set_entity_model_flags, but only supposed to set lowest nibble
asm : 80122FEC, 0B96EC : enable_entity_fog : void : void
asm : 80123000, 0B9700 : disable_entity_fog : void : void
asm : 80123010, 0B9710 : set_entity_fog_dist : void : int min, int max
asm : 80123028, 0B9728 : set_entity_fog_color "each channel 0-255" : void : int R, int G, int B, int A
asm : 80123050, 0B9750 : is_entity_fog_enabled : bool : void
asm : 80123060, 0B9760 : get_entity_fog_distance : void : int* out_start, int* out_end
asm : 8012307C, 0B977C : get_entity_fog_color "each channel 0-255" : void : int* R, int* B, int* G, int* A
asm : 801230B0, 0B97B0 : stub_generic_entity_delegate : void : generic_entity*
asm : 801230B8, 0B97B8 : clear_generic_entity_list : void : void
asm : 80123114, 0B9814 : init_generic_entity_list : void : void
asm : 80123158, 0B9858 : create_generic_entity_world : int index : code* updateFunc, code* drawFunc
asm : 8012323C, 0B993C : create_generic_entity_frontUI : int index : code* updateFunc, code* drawFunc
asm : 80123320, 0B9A20 : create_generic_entity_backUI : int index : code* updateFunc, code* drawFunc
asm : 80123404, 0B9B04 : update_generic_entities : void : void
asm : 80123470, 0B9B70 : render_generic_entities_world : void : void
asm : 801234E0, 0B9BE0 : render_generic_entities_frontUI : void : void
asm : 80123550, 0B9C50 : render_generic_entities_backUI : void : void
asm : 801235C0, 0B9CC0 : free_generic_entity : void : int index
asm : 8012363C, 0B9D3C : get_generic_entity : generic_entity* : void
% <-- split -->
asm : 80123660, 0B9D60 : clear_character_set : void : void
asm : 80123674, 0B9D74 : clear_printers : void : void
asm : 80123708, 0B9E08 : load_font_data : void : int start, int size, int dest
asm : 80123734, 0B9E34 : load_font	 : void : int font "0 = standard, 1/2 = credits"
asm : 801237D8, 0B9ED8 : update_messages : void : void
asm : 80123898, 0B9F98 : _update_message : void : msg_print_state* printer
asm : 80124204, 0BA904 : render_messages : void : void
asm : 80124434, 0BAB34 : msg_play_speech_sound : void : msg_print_state* printer, int character
asm : 80124570, 0BAC70 : msg_copy_to_print_buffer : void : msg_print_state* printer, int bufSize, int flags
asm : 801256A4, 0BBDA4 : initialize_printer		: void : msg_print_state*
asm : 80125804, 0BBF04 : dma_load_string			: void : int stringID, ptr dest
asm : 8012588C, 0BBF8C : load_message_to_buffer "load into standard message buffers at 80154430" : ptr buffer : int stringID
asm : 80125900, 0BC000 : msg_get_printer_for_string : msg_print_state* : stringID, bool* donePrintingWriteback
asm : 8012591C, 0BC01C : _get_printer_for_string : msg_print_state* : stringID, bool* donePrintingWriteback
asm : 80125A68, 0BC168 : msg_printer_load_string : int "always 1?" : stringID, msg_print_state*
asm : 80125AB8, 0BC1B8 : msg_printer_set_origin_pos : void : msg_print_state* printer, int X, int Y
asm : 80125B08, 0BC208 : cancel_message : void : msg_print_state*
asm : 80125B2C, 0BC22C : set_message_images	: void : ptr images
asm : 80125B3C, 0BC23C : set_message_string	: void : int string, int index
asm : 80125BE8, 0BC2E8 : set_message_value	: void : int value, int index
asm : 80125C70, 0BC370 : close_message : void : msg_print_state*
asm : 80125C84, 0BC384 : msg_get_print_char_width "operates on print buffer characters" : int width : int char, int charSet, int variation, float stringScale, int overrideCharWidth, int flags
asm : 80125DF4, 0BC4F4 : msg_get_draw_char_width "operates on draw buffer characters" : int width : int char, int charSet, int variation, float stringScale, int overrideCharWidth, int flags
asm : 80125F68, 0BC668 : get_string_properties	: void : stringID, int* outHeight, int* outWidth, int*, int*, int*, int*, int charset
asm : 80126474, 0BCB74 : get_string_width		: int width : int stringID, int charset "0 = standard"
asm : 801264B0, 0BCBB0 : get_string_lines : int numLines : int stringID
asm : 801264EC, 0BCBEC : draw_string			: void : int stringID "or address", int posX, int posY, int opacity, int palette, int style "0 = default"
asm : 80126790, 0BCE90 : msg_update_rewind_arrow : void : int printerIndex
asm : 80126EAC, 0BD5AC : msg_draw_rewind_arrow : void : int printerIndex
asm : 80126F78, 0BD678 : msg_draw_choice_pointer : void : msg_print_state* printer
asm : 801274C0, 0BDBC0 : draw_digit				: void : ptr image, int unk "0 or 1", int posX, int posY
asm : 8012769C, 0BDD9C : draw_number			: void : int value, int posX, int posY, bool, int palette, int opacity, int style "0 = default"
asm : 80127B70, 0BE270 : drawbox_message_delegate "appendGfx_message wrapper for draw_box draw delegate calling convention" : void : msg_print_state* printer
asm : 80127BA4, 0BE2A4 : draw_message_window : void : msg_print_state* printer
asm : 80127D90, 0BE490 : appendGfx_message : void : msg_print_state* printer, int posX "relative to base window pos", int posY "relative to base window pos", int additionalOffsetX, int additionalOffsetY, int flag "1 = use alpha | 2 = use menu font | 4 = set scissor to (0,0)-(1276,956)", int alpha
asm : 8012C2E0, 0C29E0 : msg_reset_gfx_state "use after drawing frames" : void : void
asm : 8012C324, 0C2A24 : msg_draw_char : void : msg_print_state* printer, msg_draw_state*, int charIndex, int palette, int posX "upper left corner", int posY "upper left corner"
asm : 8012C9A8, 0C30A8 : msg_draw_prim_rect : void : int colR, int colG, int colB, int colA, int posX, int posY,int sizeX, int sizeY
asm : 8012CA08, 0C3108 : appendGfx_msg_prim_rect : void : int colR, int colG, int colB, int colA, int ulX, int ulY,int lrX, int lrY
asm : 8012CC08, 0C3308 : msg_draw_speech_bubble : void : msg_print_state*, int posX, int posY, int straightWidth, int curveWidth, int height, float scaleX, float scaleY, int opacity
asm : 8012D3DC, 0C3ADC : msg_draw_speech_arrow : void : msg_print_state* printer
asm : 8012DB58, 0C4258 : msg_draw_frame : void : int posX, int posY, int sizeX, int sizeY, int style "5 or 6", int palette, int fading, int bgAlpha "for scrolling BG used with style 6", int frameAlpha
asm : 8012E8E0, 0C4FE0 : msg_get_glyph : void : int font, int variation, int charIndex, int palette, msg_font_glyph_data* out
% <-- end of file

% start of file -->
asm : 8012E9A0, 0C50A0 : draw_ci_image_with_clipping : bool success : ptr raster, int width, int height, int fmt, int bitDepth, ptr palette, int posX, int posY, int clipULx, int clipULy, int clipLRx, int clipLRy, int opacity
asm : 8012EC94, 0C5394 : draw_image_with_clipping : bool success : ptr raster, int width, int height, int fmt, int bitDepth, int posX, int posY, int clipULx, int clipULy, int clipLRx, int clipLRy
% these next three are unused, some of the params are iffy. they are used to draw large images
% to the screen by breaking them into smaller tiles and rendering them as a grid.
asm : 8012F500, 0C5C00 : draw_tiled_image "each tile has size 64x32 texels, which should fill tmem?" : bool success : ptr raster, int imgSizeX, int imgSizeY, int fmt, int depth, int startX, int startY, int endX, int endY, int screenTileSizeX, int screenTileSizeY, float scaleX, float scaleY
asm : 8012FE10, 0C6510 : integer_log : int result "returns greatest power of base <= value" : int value, int base
asm : 8012FE78, 0C6578 : draw_adjustable_tiled_image "not exactly sure how this one works" : bool success : ptr raster, int tileSizeW "NOT total raster size", int tileSizeH, int fmt, int depth, int startX "screen coords", int startY, int endX, int endY, int tileSizeX "screen coord size of each tile", int tileSizeY, float tileScaleX "ratio between texels and screen pixels", float tileScaleY
% <-- end of file
% maybe?
% start of file -->
asm : 801309F0, 0C70F0 : sparkle_script_init : void : item_entity* coinItem, ptr sparkleScript
asm : 80130A04, 0C7104 : sparkle_script_step : bool keepGoing : item_entity* coinItem
asm : 80130ACC, 0C71CC : sparkle_script_update : void : item_entity* coinItem
asm : 80130B0C, 0C720C : draw_coin_sparkles : void : item_entity* item
asm : 80130F58, 0C7658 : get_item_entity : item_entity* : int itemEntityIndex
asm : 80130F70, 0C7670 : item_entity_disable_shadow : void : item_entity*
asm : 80130FAC, 0C76AC : item_entity_enable_shadow : void : item_entity*
asm : 80130FF0, 0C76F0 : clear_item_entity_data		: void : void
asm : 801310CC, 0C77CC : init_item_entity_list	: void : void
asm : 80131128, 0C7828 : item_entity_load "loads textures as needed" : void : item_entity*
asm : 801313F4, 0C7AF4 : make_item_entity		: int itemEntityIndex : int itemID, float x, float y, float z, #itemSpawnMode, int pickupDelay "frames before available for pickup", int "facing angle sign? usually -1", var pickupVar
asm : 80131A94, 0C8194 : make_item_entity_nodelay	: int itemEntityIndex : int itemID, float x, float y, float z, #itemSpawnMode, var pickupVar
asm : 80131AC8, 0C81C8 : make_item_entity_delayed	: int itemEntityIndex : int itemID, float x, float y, float z, #itemSpawnMode, int pickupDelay "frames before available for pickup", var pickupVar
asm : 80131B00, 0C8200 : init_got_item				: int itemEntityIndex : int iconID, int, int messageFlags "0 = item, 10 = \"1 coin\", 20 = \"3 star pieces\", ..."
asm : 80131DD4, 0C84D4 : item_entity_update : void : item_entity*
asm : 80131EEC, 0C85EC : update_item_entities : void : void
asm : 801321A4, 0C88A4 : appendGfx_item_entity : void : item_entity* item
asm : 80132C80, 0C9380 : draw_item_entities				: void : void
asm : 80132D94 : draw_item_entities_UI "bad name? controls the item blinking when about to vanish" : void : void
asm : 80132E54, 0C9554 : render_item_entities : void : void
asm : 80133930, 0CA030 : remove_item_entity_by_reference	: void : item_entity* item
asm : 801339FC, 0CA0FC : remove_item_entity_by_index		: void : int itemEntityIndex

asm : 80133B0C, 0CA20C : test_item_player_collision : bool colliding : item_entity* item
asm : 80133FC8, 0CA6C8 : test_item_entity_position : int result "1 = is within radius of point, 0 = is not, -1 = can't pickup item at this time" : float x, float y, float z, float radius

asm : 80134148, 0CA848 : set_item_entity_flags		: void : int itemEntityIndex, int flags
asm : 80134188, 0CA888 : clear_item_entity_flags	: void : int itemEntityIndex, int flags

asm : 801341E8, 0CA8E8 : is_picking_up_item "true when 'you got X' popup is displayed" : bool : void
asm : 8013420C, 0CA90C : set_item_entity_position	: void : int itemEntityIndex, float x, float y, float z
asm : 80134250, 0CA950 : update_item_entity_collectable	"coins, star points, etc" : void : item_entity* item % also handles pickup logic
asm : 80135658, 0CBD58 : update_item_entity_static "items sitting in the world" : void : item_entity* item % changes type to temp on pickup
asm : 801356DC, 0CBDDC : update_item_entity_temp "temporary items" : void : item_entity* item % also handles pickup and 'you got X!' logic

asm : 80136A80, 0CD180 : render_screen_overlay : void : int, float zoomAmount, screen_overlay*

asm : 80137D88, 0CE488 : set_screen_overlay_params_front : void : int type, float amount "255 = fully zoomed in"
asm : 80137DA4, 0CE4A4 : set_screen_overlay_params_back  : void : int type, float amount "255 = fully zoomed in"
asm : 80137DC0, 0CE4C0 : get_screen_overlay_params  : void : int index "0 = upper, 1 = lower", {out} int* type, {out} float* amount "255 = fully zoomed in"
asm : 80137E10, 0CE510 : set_screen_overlay_color : void : int index "0 = upper, 1 = lower", byte R, byte G, byte B
asm : 80137E4C, 0CE54C : set_screen_overlay_center : void : int index "0 = upper, 1 = lower", int posIndex "0 or 1, purpose unclear", int screenPosX, int screenPosY
asm : 80137EC0, 0CE5C0 : set_screen_overlay_center_worldpos : void : int index "0 = upper, 1 = lower", int posIndex "0 or 1, purpose unclear", int posX, int posY, int posZ
asm : 801380D4, 0CE7D4 : set_screen_overlay_alpha : void : int index "0 = upper, 1 = lower", float opacity "255 = solid"

asm : 80138108, 0CE808 : clear_screen_overlays : void : void
asm : 801381A0, 0CE8A0 : render_screen_overlay_frontUI : void : void
asm : 80138220, 0CE920 : render_screen_overlay_backUI : void : void
asm : 801382A0, 0CE9A0 : set_map_transition_effect : void : int transitionType
asm : 801382AC, 0CE9AC : update_exit_map_screen_overlay : bool done : int* progress
asm : 801385D4, 0CECD4 : update_enter_map_screen_overlay : bool done : int* progress

asm : 8013F350, 0D5A50 : load_hud_element						: void : hud_element*, int* pos
asm : 8013F704, 0D5E04 : draw_rect_hud_element					: void : hud_element*, int texSizeX, int texSizeY, int drawSizeX,int drawSizeY, int offsetX, int offsetY, bool clamp "1 = clamp, 0 = repeat", bool dropShadow
asm : 80141100, 0D7800 : clear_hud_element_cache : void : void
asm : 80141300, 0D7A00 : init_hud_element_list			: void : void
asm : 801414A4, 0D7BA4 : create_hud_element				: int index : hud_script*
asm : 80141610, 0D7D10 : update_hud_elements			: void : void
asm : 80141704, 0D7E04 : hud_element_update				: void : hud_element* icon
asm : 80142210, 0D8910 : render_hud_elements_backUI		: void : void
asm : 8014271C, 0D8E1C : render_hud_elements_frontUI	: void : void
asm : 80142BFC, 0D92FC : render_hud_element				: void : hud_element* icon
asm : 801436B4, 0D9DB4 : render_hud_elements_world		: void : void

asm : 80144298, 0DA998 : draw_hud_element				: void : int index, int clipMode
asm : 801447A8, 0DAEA8 : draw_hud_element_clipped "use viewport/window clipping" : void : int iconIndex % call _draw_icon with mode 0
asm : 801447C4, 0DAEC4 : draw_hud_element_1				: void : int index
asm : 801447E0, 0DAEC4 : draw_hud_element_2				: void : int index
asm : 801447FC, 0DAEFC : set_hud_element_script			: void : int index, ptr iconScript
asm : 801448B0, 0DAFB0 : get_hud_element_script			: ptr : int index
asm : 801448D4, 0DAFD4 : get_hud_element				: hud_element* : int index
asm : 801448F4, 0DAFF4 : free_hud_element				: void : int index
asm : 80144984, 0DB084 : set_hud_element_render_pos		: void : int index, int posX, int posY
asm : 801449AC, 0DB0AC : get_hud_element_render_pos		: void : int index, int* posX, int* posY
asm : 801449DC, 0DB0DC : set_hud_element_render_depth	: void : int index, int posZ
asm : 80144A00, 0DB100 : set_hud_element_flags			: void : int index, int flagbits
asm : 80144A2C, 0DB12C : clear_hud_element_flags		: void : int index, int flagbits
asm : 80144A5C, 0DB15C : ALT_clear_hud_element_cache	: void : void
asm : 80144C20, 0DB320 : set_hud_element_scale			: void : int index, float scale
asm : 80144DF4, 0DB4F4 : set_hud_element_size			: void : int index, #iconSize

asm : 80144EB0, 0DB5B0 : set_hud_element_alpha			: void : int index, int opacity "0 (inivislbe) - 255 (opaque)"
asm : 80144EFC, 0DB5FC : set_hud_element_tint			: void : int index, int R, int G, int B

asm : 80144F28, 0DB628 : create_hud_element_transform_A		: void : int index
asm : 80144FD8, 0DB6D8 : create_hud_element_transform_B		: void : int index
asm : 80145070, 0DB770 : create_hud_element_transform_C		: void : int index

asm : 80145108, 0DB808 : free_hud_element_transform			: void : int index
asm : 80145184, 0DB884 : set_hud_element_transform_pos		: void : int index, float x, float y, float z
asm : 801451D4, 0DB8D4 : set_hud_element_transform_scale	: void : int index, float sx, float sy, float sz
asm : 80145224, 0DB924 : set_hud_element_transform_rotation	: void : int index, float rx, float ry, float rz
asm : 80145274, 0DB974 : set_hud_element_transform_rotation_pivot	: void : int index, int dx, int dy
asm : 801452B4, 0DB9B4 : copy_world_hud_element_ref_to_battle : void : int worldIndex, int battleIndex
asm : 801452E8, 0DB9E8 : set_hud_element_nonworld_cache : void : ptr base, int size
%<-- split -->
asm : 80145320, 0DBA20 : clear_saved_variables		: void : void	% clears all GameFlags/GameBytes/AreaFlags/AreaBytes
asm : 80145390, 0DBA90 : clear_area_flags			: void : void
asm : 801453E0, 0DBAE0 : clear_global_flag			: bool oldValue : int index "also accepts var reference"
asm : 80145450, 0DBB50 : set_global_flag			: bool oldValue : int index "also accepts var reference"
asm : 801454BC, 0DBBBC : get_global_flag			: bool value : int index "also accepts var reference"
asm : 80145520, 0DBC20 : set_global_byte			: int oldValue : int index, int value
asm : 80145538, 0DBC38 : get_global_byte			: int value : int index
asm : 8014554C, 0DBC4C : clear_area_flag			: bool oldValue : int index
asm : 801455A0, 0DBCA0 : set_area_flag				: bool oldValue : int index
asm : 801455F0, 0DBCF0 : get_area_flag				: bool value : int index
asm : 80145638, 0DBD38 : set_area_byte				: int oldValue : int index, int value
asm : 80145650, 0DBD50 : get_area_byte				: int value : int index
% <-- end of file

% start of file -->
asm : 80145670, 0DBD70 : default_trigger_delegate : void : int*
asm : 80145680, 0DBD80 : clear_trigger_data		: void : void
asm : 80145728, 0DBE28 : init_trigger_list		: void : void
asm : 8014576C, 0DBE6C : create_trigger			: void : int*
asm : 80145860, 0DBF60 : update_triggers		: void : void
asm : 80145BF4, 0DC2F4 : delete_trigger			: void : trigger*
asm : 80145C6C, 0DC36C : is_trigger_bound		: bool : trigger* trigger, bytecode* script
asm : 80145CD0, 0DC3D0 : get_trigger_by_id		: trigger* : int triggerID
asm : 80145CE8, 0DC3E8 : should_collider_allow_interact : bool "only true if colliderID is bound to an interact trigger (press A) and player can use it" : int colliderID
% <-- end of file

% start of file -->
asm : 80145D70, 0DC470 : load_map_bg			: void : char* assetName
asm : 80145DF8, 0DC4F8 : reset_background_settings : void : void
asm : 80145E28, 0DC528 : read_background_size	: void : ptr backgroundAsset
asm : 80145E70, 0DC570 : set_background_size	: void : int startX, int startY, int sizeX, int sizeY
asm : 80145E98, 0DC598 : blend_background_channel : int blended : int A "0-31", int B, int alpha
asm : 80145EC0, 0DC5C0 : appendGfx_background_texture : void : void
asm : 8014720C, 0DD90C : enable_background_wave : void : void
asm : 8014721C, 0DD91C : disable_background_wave : void : void
% <-- end of file

% 80147264 : UpdateMusicPlayers	: ??? : ???	% ?? no idea what this actually is
asm : 80147230, 0DD930 : reset_ambient_sounds : void : void

asm : 80147264, 0DD964 : update_ambient_sounds : void : void
asm : 80147368, 0DDA68 : play_ambient_sounds		: int scriptStatus : int soundID, int "flags?"
% <-- end of file

% start of file -->
asm : 801473F0, 0DDAF0 : clear_windows : void : void
asm : 80147414, 0DDB14 : update_windows : void : void
asm : 80147474, 0DDB74 : basic_window_update : void : int windowIndex, int* flags, float* posX, float* posY, float* posZ, ...
	float* scaleX, float* scaleY, float* rotX, float* rotY, float* rotZ, int* tintColor, int* alpha
asm : 80147574, 0DDC74 : basic_hidden_window_update : void : int windowIndex, int* flags, float* posX, float* posY, float* posZ, ...
	float* scaleX, float* scaleY, float* rotX, float* rotY, float* rotZ, int* tintColor, int* alpha
asm : 80147650, 0DDD50 : main_menu_window_update : void : int windowIndex, int* flags, float* posX, float* posY, float* posZ, ...
	float* scaleX, float* scaleY, float* rotX, float* rotY, float* rotZ, int* tintColor, int* alpha
asm : 80147698, 0DDD98 : render_windows : void : int* windowIDs, int parentID, int parentFlags, int basePosX, int basePosY, int opacity, int darkening, matrix4f* mtx
asm : 80147AC4, 0DE1C4 : render_window_root : void : void
asm : 80147CC8, 0DE3C8 : set_window_properties : void : int windowIndex, short posX, short posY, short width, short height, byte "window->unk_02", code fpDrawContents, int "sets window->unk_18", byte "parentID"
asm : 80147D70, 0DE470 : update_window_hierarchy : void : int windowIndex, int parent
asm : 80147E48, 0DE548 : replace_window_update "set pending update function for a given window, ignoring the current delegate value (if any)" : void : int windowID, int ??? "sets window->unk_02", code fpUpdateWindow
asm : 80147E7C, 0DE57C : set_window_update "set pending update function for a given window only if it differs from current one" : void : int windowID, code fpUpdateWindow
asm : 80147EC4, 0DE5C4 : set_windows_visible : void : int windowSet "enum ID ranges: 0 = [0,3F] | 1 = [8,9] | 2 = [16,2B] | 3 = [2C,3F]"
asm : 80147F30, 0DE630 : setup_pause_menu_tab : void : pause_tab_window_bp* bpArray, int arraySize
% <-- end of file

% start of file -->
asm : 80148040, 0DE740 : clear_sprite_shading_data : void : void
asm : 801480F0, 0DE7F0 : init_sprite_shading_data : void : void
asm : 80148154, 0DE854 : sprite_shading_set_light_source : void : int lightIndex, int flags, float x, float y, float z, int R, int G, int B, float falloff, int unk_14
asm : 801481C4, 0DE8C4 : render_shaded_sprite : void : ...
	matrix4f* mtx, int tileULS, int tileULT, int tileSizeS, int tileSizeT, int alpha, int someOtherModeLBits
asm : 801489B8, 0DF0B8 : appendGfx_shaded_sprite : void : ...
	matrix4f* mtx, int tileULS, int tileULT, int tileSizeS, int tileSizeT, int alpha, ...
	float shadowDirX, float shadowDirY,float shadowDirZ, ...
	int shadowCol_R, int shadowCol_G, int shadowCol_B, ...
	int highlight_R, int highlight_G, int highlight_B, ...
	int ambientPower, int someOtherModeLBits

% start of file -->
asm : 80149250, 0DF950 : sfx_compute_spatialized_sound_params_2 : void : float posX, float posY, float posZ, short* volume, short* pan, uint sourceFlags
asm : 80149600, 0DFD00 : sfx_reset_door_sounds : void : void
asm : 80149618, 0DFD18 : sfx_clear_sounds : void : void
asm : 80149670, 0DFD70 : sfx_clear_env_sounds : void : bool clear
asm : 80149734, 0DFE34 : sfx_update_looping_sound_params : void : void
% asm : 801497FC : set 80159AD4
% asm : 80149828 : get 80159AD4
asm : 80149838, 0DFF38 : sfx_stop_env_sounds : void : void
asm : 801498C4, 0DFFC4 : sfx_get_env_sound_instance : snd_env_sound* : int soundID
asm : 80149908, 0E0008 : sfx_play_sound_looping : void : int soundID, int volume, int pan, int pitchShift
asm : 80149974, 0E0074 : sfx_register_looping_sound_at_position : void : int soundID, uint sourceFlags, float posX, float posY, float posZ
asm : 801499EC, 0E00EC : sfx_adjust_env_sound_pos : void : int loopingSoundID, int sourceFlags, float posX, float posY, float posZ
% asm : 80149A6C : sfx_stop_env_sound ? : void : int soundID, bool reset or kill?
asm : 80149AB8, 0E01B8 : sfx_play_sound_with_params : void : int soundID, byte volume, byte pan, short pitchShift
asm : 80149BE4, 0E02E4 : sfx_adjust_env_sound_params : void : int loopingSoundID, byte volume, byte pan, short pitchShift
asm : 80149C6C, 0E036C : sfx_stop_sound				: void : int soundID
asm : 80149CB4, 0E03B4 : sfx_play_sound				: void : int soundID
asm : 80149CD8, 0E03D8 : sfx_play_sound_at_player	: void : int soundID, int sourceFlags
asm : 80149D08, 0E0408 : sfx_play_sound_at_npc		: void : int soundID, int sourceFlags, #npcID
asm : 80149D5C, 0E045C : sfx_play_sound_at_position : void : int soundID, int sourceFlags, float posX, float posY, float posZ
asm : 80149E04, 0E0504 : sfx_get_spatialized_sound_params : void : float posX, float posY, float posZ, short* volume, short* pan, uint sourceFlags
asm : 80149F58, 0E0658 : sfx_compute_spatialized_sound_params_0 : void : float posX, float posY, float posZ, short* volume, short* pan
asm : 8014A1B4, 0E08B4 : sfx_compute_spatialized_sound_params_1 : void : float posX, float posY, float posZ, short* volume, short* pan
% <-- end of file

% start of file -->
asm : 8014A430, 0E0B30 : bgm_get_map_default_variation "based on map, only applies for songIDs listed in the int[6] at 8014f720: 3, 4, B, 42, 4E, and 82 " : int variation : int songID
asm : 8014A498, 0E0B98 : bgm_reset_sequence_players : void : void
asm : 8014A52C, 0E0C2C : bgm_reset_volume : void : void
asm : 8014A548, 0E0C48 : bgm_update_music_settings : void : void
asm : 8014A7E0, 0E0EE0 : _bgm_set_song : void : int musicPlayer, #songID, int variation, int unk, int volume
asm : 8014A918, 0E1018 : bgm_set_song : void : int musicPlayer, #songID, int variation, int fadeTime, int volume
% asm : 8014a964 : ??? : bool "always 1" : int musicPlayer, int songID, int variation, int fadeInTime, int, int
asm : 8014AC08, 0E1308 : bgm_init_music_players : void : void
asm : 8014AC5C, 0E135C : bgm_quiet_max_volume "sets maxVolume = 4" : void : void
asm : 8014AC70, 0E1370 : bgm_reset_max_volume "sets maxVolume = 8" : void : void
asm : 8014AC84, 0E1384 : bgm_set_target_volume : void : short targetVolume "8 is default"
asm : 8014AC94, 0E1394 : bgm_update_volume : void : void
% asm : 8014AD40 : ??? : bool : void
asm : 8014ADA4, 0E14A4 : bgm_pop_song : void : void
asm : 8014ADF8, 0E14F8 : bgm_push_song "change song, but save previous (no stack involved, only saves most recent)" : void : int songID, int variation

asm : 8014AE6C, 0E156C : bgm_pop_battle_song : void : void
asm : 8014AEF8, 0E15F8 : bgm_push_battle_song : void : void
asm : 8014AF8C, 0E168C : bgm_set_battle_song : void : int songID, int variation
% asm : 8014AFA0 : STUB_??? : void : void
% <-- end of file
%}
% end at 801512B0

/%
	Overlay Memory:
	80200000 - 802C3000
%/

/%
RAM: 802C3000 - 802DA480
ROM:    E79B0 -    FEE30
%/
%{
% start of file -->
asm : 802C3000, 0E79B0 : sort_scripts 			: void : void
asm : 802C3148, 0E7AF8 : find_script_labels		: void : script_instance* script
asm : 802C31DC, 0E7B8C : clear_script_list		: void : void
asm : 802C32EC, 0E7C9C : init_script_list		: void : void
asm : 802C3390, 0E7D40 : suspend_frozen_scripts "according to current time freeze mode" : void : void
asm : 802C33E0, 0E7D90 : start_script			: script_instance* script : bytecode* script, int priority, int flags
asm : 802C35D0, 0E7F80 : start_script_in_group	: script_instance* script : bytecode* script, int priority, int flags, int group
asm : 802C37C8, 0E8178 : start_child_script		: script_instance* script : script_instance* parent, bytecode* script, int flags
asm : 802C3D04, 0E86B4 : restart_script			: script_instance* script : script_instance* script
asm : 802C3D74, 0E8724 : update_scripts			: void : void
asm : 802C3F3C, 0E88EC : kill_script			: void : script_instance* script
asm : 802C40AC, 0E8A5C : kill_script_by_ID		: void : int ID
asm : 802C4114, 0E8AC4 : kill_all_scripts		: void : void
asm : 802C4164, 0E8B14 : does_script_exist		: bool : int ID
asm : 802C41A4, 0E8B54 : does_script_exist_by_ref "unused" : bool : script_instance* script
asm : 802C41D8, 0E8B88 : set_script_priority	: void : script_instance* script, int priority
asm : 802C41E0, 0E8B90 : set_script_timescale	: void : script_instance* script, float timescale
asm : 802C4200, 0E8BB0 : set_global_timespace	: void : float timescale
asm : 802C420C, 0E8BBC : get_global_timespace	: float timescale : void
asm : 802C4218, 0E8BC8 : set_script_group		: void : script_instance* script, int groupFlags
% asm : 802C4220 : bind_trigger? : trigger* : bytecode* script, int flags, int triggerFlagIndex?, int triggerVar0, int triggerVar1, int priority, int scriptArg3
% asm : 802C42A8 : bind_trigger_1? : trigger * : bytecode *script, int flags, int triggerFlagIndex?, int triggerVar0, int triggerVar1, int priority
asm : 802C42D8, 0E8C88 : suspend_group_script "recursive for child/parents in matching group" : void : script_instance* script, int groupFlags
asm : 802C437C, 0E8D2C : resume_group_script "recursive for child/parents in matching group" : void : script_instance* script, int groupFlags
asm : 802C4420, 0E8DD0 : suspend_all_script "recursive for child/parents of script" : void : int scriptIndex
asm : 802C448C, 0E8E3C : resume_all_script "recursive for child/parents of script" : void : int scriptIndex
asm : 802C44F8, 0E8EA8 : suspend_group_script_index "recursive for child/parents in matching group" : void : int scriptIndex, int groupFlags
asm : 802C4570, 0E8F20 : resume_group_script_index "recursive for child/parents in matching group" : void : int scriptIndex, int groupFlags
asm : 802C45E8, 0E8F98 : suspend_all_group "affects all scripts in group" : void : int groupFlags
asm : 802C4648, 0E8FF8 : resume_all_group "affects all scripts in group" : void : int groupFlags
asm : 802C46A8, 0E9058 : suspend_group_others "suspend all other scripts matching group" : void : script_instance* script, int groupFlags
asm : 802C471C, 0E90CC : resume_group_others "suspend all other scripts matching group" : void : script_instance* script, int groupFlags
asm : 802C4790, 0E9140 : get_script_by_index	: script_instance* script : int scriptIndex "index into script list"
asm : 802C47A8, 0E9158 : get_script_by_id		: script_instance* script : int scriptID "unique ID"
asm : 802C47E8, 0E9198 : set_script_flags		: void : script_instance* script, int flags
asm : 802C4880, 0E9230 : clear_script_flags		: void : script_instance* script, int flags
% <-- end of file

% start of file -->
asm : 802C4920, 0E92D0 : fixed_var_to_float			: float : var fixed
asm : 802C496C, 0E931C : float_to_fixed_var			: var fixed : float
asm : 802C4998, 0E9348 : si_handle_return				: int : script_instance* script
asm : 802C49B8, 0E9368 : si_handle_label				: int : script_instance* script
asm : 802C49C0, 0E9370 : si_handle_goto					: int : script_instance* script
asm : 802C4A00, 0E93B0 : si_handle_loop					: int : script_instance* script
asm : 802C4A48, 0E93F8 : si_handle_end_loop				: int : script_instance* script
asm : 802C4B0C, 0E94BC : si_handle_break_loop			: int : script_instance* script
asm : 802C4B5C, 0E950C : si_handle_wait					: int : script_instance* script
asm : 802C4BB8, 0E9568 : si_handle_wait_seconds "just 30.0f * i + 0.5f" : int : script_instance* script
asm : 802C4C40, 0E95F0 : si_handle_if_equal				: int : script_instance* script
asm : 802C4CA0, 0E9650 : si_handle_if_not_equal			: int : script_instance* script
asm : 802C4D00, 0E96B0 : si_handle_if_less				: int : script_instance* script
asm : 802C4D64, 0E9714 : si_handle_if_greater			: int : script_instance* script
asm : 802C4DC8, 0E9778 : si_handle_if_less_equal		: int : script_instance* script
asm : 802C4E2C, 0E97DC : si_handle_if_greater_equal		: int : script_instance* script
asm : 802C4E90, 0E9840 : si_handle_if_AND				: int : script_instance* script % b is treated as a constant, doesnt go through GetVariable
asm : 802C4EE8, 0E9898 : si_handle_if_not_AND			: int : script_instance* script
asm : 802C4F40, 0E98F0 : si_handle_else					: int : script_instance* script
asm : 802C4F6C, 0E991C : si_handle_end_if				: int : script_instance* script
asm : 802C4F74, 0E9924 : si_handle_switch				: int : script_instance* script
asm : 802C4FE4, 0E9994 : si_handle_switch_const			: int : script_instance* script
asm : 802C5030, 0E99E0 : si_handle_case_equal			: int : script_instance* script
asm : 802C50BC, 0E9A6C : si_handle_case_not_equal		: int : script_instance* script
asm : 802C5148, 0E9AF8 : si_handle_case_less			: int : script_instance* script
asm : 802C51D8, 0E9B88 : si_handle_case_less_equal		: int : script_instance* script
asm : 802C5268, 0E9C18 : si_handle_case_greater			: int : script_instance* script
asm : 802C52F8, 0E9CA8 : si_handle_case_greater_equal	: int : script_instance* script
asm : 802C5388, 0E9D38 : si_handle_case_range			: int : script_instance* script
asm : 802C5444, 0E9DF4 : si_handle_case_default			: int : script_instance* script
asm : 802C549C, 0E9E4C : si_handle_case_AND				: int : script_instance* script
asm : 802C5518, 0E9EC8 : si_handle_case_equal_OR		: int : script_instance* script
asm : 802C55B8, 0E9F68 : si_handle_case_equal_AND		: int : script_instance* script
asm : 802C565C, 0EA00C : si_handle_end_case_group		: int : script_instance* script
asm : 802C56D4, 0EA084 : si_handle_break_case			: int : script_instance* script
asm : 802C5718, 0EA0C8 : si_handle_end_switch			: int : script_instance* script
asm : 802C5744, 0EA0F4 : si_handle_set_var				: int : script_instance* script
asm : 802C5790, 0EA140 : si_handle_set_const			: int : script_instance* script
asm : 802C57B8, 0EA168 : si_handle_set_float			: int : script_instance* script
asm : 802C5804, 0EA1B4 : si_handle_add					: int : script_instance* script
asm : 802C5868, 0EA218 : si_handle_subtract				: int : script_instance* script
asm : 802C58CC, 0EA27C : si_handle_multiply				: int : script_instance* script
asm : 802C5934, 0EA2E4 : si_handle_divide				: int : script_instance* script
asm : 802C59BC, 0EA36C : si_handle_mod					: int : script_instance* script
asm : 802C5A84, 0EA434 : si_handle_addF					: int : script_instance* script
asm : 802C5AEC, 0EA49C : si_handle_subtractF			: int : script_instance* script
asm : 802C5B54, 0EA504 : si_handle_multiplyF			: int : script_instance* script
asm : 802C5BC0, 0EA570 : si_handle_divideF				: int : script_instance* script
asm : 802C5C28, 0EA5D8 : si_handle_set_int_buffer_ptr	: int : script_instance* script
asm : 802C5C5C, 0EA60C : si_handle_set_float_buffer_ptr	: int : script_instance* script
asm : 802C5C90, 0EA640 : si_handle_get_1_word			: int : script_instance* script
asm : 802C5CC4, 0EA674 : si_handle_get_2_word			: int : script_instance* script
asm : 802C5D2C, 0EA6DC : si_handle_get_3_word			: int : script_instance* script
asm : 802C5DB4, 0EA764 : si_handle_get_4_word			: int : script_instance* script
asm : 802C5E5C, 0EA80C : si_handle_get_Nth_word			: int : script_instance* script
asm : 802C5EB4, 0EA864 : si_handle_get_1_float			: int : script_instance* script
asm : 802C5F0C, 0EA8BC : si_handle_get_2_float			: int : script_instance* script
asm : 802C5F9C, 0EA94C : si_handle_get_3_float			: int : script_instance* script
asm : 802C605C, 0EAA0C : si_handle_get_4_float			: int : script_instance* script
asm : 802C614C, 0EAAFC : si_handle_get_Nth_float		: int : script_instance* script
asm : 802C61AC, 0EAB5C : si_handle_set_array			: int : script_instance* script
asm : 802C61E0, 0EAB90 : si_handle_set_flag_array		: int : script_instance* script
asm : 802C6214, 0EABC4 : si_handle_allocate_array		: int : script_instance* script
asm : 802C6270, 0EAC20 : si_handle_AND					: int : script_instance* script
asm : 802C62D4, 0EAC84 : si_handle_AND_const			: int : script_instance* script
asm : 802C632C, 0EACDC : si_handle_OR					: int : script_instance* script
asm : 802C6390, 0EAD40 : si_handle_OR_const				: int : script_instance* script
asm : 802C63E8, 0EAD98 : si_handle_call					: int : script_instance* script
asm : 802C646C, 0EAE1C : si_handle_exec1				: int : script_instance* script % creates a script, sharing the same group and priority, and sets owner to the caller script. variables and flags are copied from caller to callee. variables and flags are copied, array and flagArray pointers are shared!
asm : 802C6524, 0EAED4 : si_handle_exec2				: int : script_instance* script % creates a script, sharing the same group and priority, and sets owner to the caller script. variables and flags are copied from caller to callee.
asm : 802C65FC, 0EAFAC : si_handle_exec_wait			: int : script_instance* script % creates a 'child' script, sharing the same group and priority, and sets owner to the caller script's owner. blocks the caller. variables and flags are copied from caller to callee.
asm : 802C6640, 0EAFF0 : si_handle_jump					: int : script_instance* script
asm : 802C667C, 0EB02C : _bound_script_trigger_handler	: bool : trigger*
asm : 802C6714, 0EB0C4 : si_handle_bind					: int : script_instance* script
api : 802C6824, 0EB1D4 : DeleteTrigger					: void : int triggerIndex
asm : 802C6850, 0EB200 : si_handle_unbind				: int : script_instance* script
asm : 802C6870, 0EB220 : si_handle_kill					: int : script_instance* script
asm : 802C689C, 0EB24C : si_handle_set_priority			: int : script_instance* script
asm : 802C68D8, 0EB288 : si_handle_set_timescale		: int : script_instance* script
asm : 802C6914, 0EB2C4 : si_handle_set_group			: int : script_instance* script
asm : 802C6950, 0EB300 : si_handle_suspend_all			: int : script_instance* script
asm : 802C697C, 0EB32C : si_handle_resume_all			: int : script_instance* script
asm : 802C69A8, 0EB358 : si_handle_suspend_others		: int : script_instance* script
asm : 802C69E4, 0EB394 : si_handle_resume_others		: int : script_instance* script
asm : 802C6A20, 0EB3D0 : si_handle_suspend				: int : script_instance* script
asm : 802C6A4C, 0EB3FC : si_handle_resume				: int : script_instance* script
asm : 802C6A78, 0EB428 : si_handle_does_script_exist	: int : script_instance* script
asm : 802C6B54, 0EB504 : si_handle_bind_lock			: int : script_instance* script
asm : 802C6C78, 0EB628 : si_handle_thread				: int : script_instance* script
asm : 802C6D4C, 0EB6FC : si_handle_end_thread			: int : script_instance* script
asm : 802C6D6C, 0EB71C : si_handle_child_thread			: int : script_instance* script
asm : 802C6DF4, 0EB7A4 : si_handle_end_child_thread		: int : script_instance* script
asm : 802C6E1C, 0EB7CC : si_handle_print_debug_var		: int : script_instance* script
asm : 802C7404, 0EBDB4 : si_execute_next_command		: int : script_instance* script
% 802C7A54, 0EC404 : si_handle_end -- not really a function, case for si_execute_next_command
asm : 802C7ABC, 0EC46C : get_variable					: int value : script_instance* script, var source
asm : 802C7DA8, 0EC758 : get_variable_index				: int index : script_instance* script, var source
asm : 802C7F20, 0EC8D0 : get_variable_index_alt			: int index : script_instance* script, var % identical to previous function, unused, purpose unknown.
asm : 802C8098, 0ECA48 : set_variable					: int newValue : script_instance* script, var dest, int value "fixed values will be converted, others will not be"
asm : 802C842C, 0ECDDC : get_float_variable 			: float value : script_instance* script, var source
asm : 802C8640, 0ECFF0 : set_float_variable 			: float newValue : script_instance* script, var dest, float value 
asm : 802C8890, 0ED240 : si_find_label					: int : script_instance* script
asm : 802C88FC, 0ED2AC : si_skip_if						: int : script_instance* script
asm : 802C8978, 0ED328 : si_skip_else					: int : script_instance* script
asm : 802C89E4, 0ED394 : si_goto_end_case				: int : script_instance* script
asm : 802C8A60, 0ED410 : si_goto_next_case				: int : script_instance* script
asm : 802C8AE4, 0ED494 : si_goto_end_loop				: int : script_instance* script
% <-- split? -->
api : 802C8B60, 0ED510 : TranslateModel   : void : modelID, float dX, float dY, float dZ
api : 802C8C64, 0ED614 : RotateModel      : void : modelID, float angle, float rX, float rY, float rZ
api : 802C8D88, 0ED738 : ScaleModel       : void : modelID, float sX, float sY, float sZ
api : 802C8EE4, 0ED894 : InvalidateModelTransform : void : modelID "disable cat on next transform, does NOT set transform to identity or disable it"
api : 802C8E8C, 0ED83C : GetModelIndex    : void : modelID, {out} var index
api : 802C8F28, 0ED8D8 : CloneModel       : void : modelID, int newModelID
api : 802C8F80, 0ED930 : GetModelCenter   : Var[0] int posX, Var[1] int posX, Var[2] int posX : modelID
api : 802C9000, 0ED9B0 : SetTexPanner "sets a model's pannerID and sets the texture pan flag" : void : modelID, int panID
api : 802C907C, 0EDA2C : SetCustomGfxEnabled   : void : modelID, bool
api : 802C90FC, 0EDAAC : SetModelCustomGfx : void : modelID, int customGfxIndex "-1 for no change", int fogType "-1 for no change"
api : 802C91A4, 0EDB54 : SetModelTexVariant : void : modelID, int
api : 802C9208, 0EDBB8 : EnableTexPanning : void : modelID, bool "0 = disabled, 1 = enabled"
api : 802C9288, 0EDC38 : EnableModel      : void : modelID, bool "0 = disabled, 1 = enabled"
api : 802C9308, 0EDCB8 : SetGroupEnabled  : void : modelID, int mode "0 = disabled, 1 = enabled, 2 = all others disabled, 3 = all others enabled"
api : 802C9364, 0EDD14 : SetTexPanOffset  : void : int panID, int tile "0 = main | 1 = aux", int offsetU, int offsetV
api : 802C9428, 0EDDD8 : SetCustomGfx : void : int index, $DisplayList, $DisplayList
api : 802C94A0, 0EDE50 : SetCustomGfxBuilders : void : int index, $Function, $Function
api : 802C9518, 0EDEC8 : SetModelFlags	: void : modelID, int bits, bool "1 set | 0 clear"
asm : 802C95A0, 0EDF50 : apply_transform_to_children "find all children and call function on them" : void : code apiTransformFunc, script_instance* script
api : 802C971C, 0EE0CC : MakeTransformGroup : void : modelID
api : 802C9748, 0EE0F8 : SetTransformGroupEnabled : void : modelID, bool
api : 802C97B4, 0EE164 : TranslateGroup   : void : modelID, float dX, float dY, float dZ
api : 802C98D8, 0EE288 : RotateGroup      : void : modelID, float angle, float rX, float rY, float rZ
api : 802C9A1C, 0EE3CC : ScaleGroup       : void : modelID, float sX, float sY, float sZ
api : 802C9B40, 0EE4F0 : GetTransformGroup : void : modelID, {out} var groupID "-1 if none"
api : 802C9B98, 0EE548 : EnableGroup      : void : modelID, bool enable
api : 802C9C70, 0EE620 : MakeLocalVertexCopy : void : int copyIndex, modelID, bool "0 = clear, 1 = get"
% <-- split? -->
asm : 802C9CE8, 0EE698 : modify_collider_family_flags "set flags for collider + siblings + children" : void : colliderID, int flags, int mode "0 = set bits, 1 = clear bits, 2 = replace, 3 = replace lowest 16 bits"
api : 802C9DCC, 0EE77C : ModifyColliderFlags	: void : int mode "0 = set bits, 1 = clear bits, 2 = replace, 3 = replace lowest 16 bits", colliderID, int flags
api : 802C9ED8, 0EE888 : ResetFromLava : void : $LavaResetList
asm : 802C9FD4, 0EE984 : get_lava_reset_pos : void : {out} float* x, {out} float* y, {out} float* z
api : 802CA0AC, 0EEA5C : GetColliderCenter		: Var[0] int posX, Var[1] int posY, Var[2] int posZ : colliderID
api : 802CA114, 0EEAC4 : ParentColliderToModel "associates a model with a collider and applies the model's transformation" : void :  colliderID, modelID
api : 802CA188, 0EEB38 : UpdateColliderTransform "applies transformation from parent model" : void : colliderID
asm : 802CA1B8, 0EEB68 : set_zone_enabled "operates recursively" : void : int zoneID, bool enabled
api : 802CA254, 0EEC04 : SetZoneEnabled "operates recursively" : void : zoneID, bool enabled
asm : 802CA304, 0EECB4 : goto_map				: void : script_instance* script, int mode
api : 802CA400, 0EEDB0 : GotoMap				: void : $ASCII mapName {print}, int entryID
api : 802CA420, 0EEDD0 : GotoMapSpecial			: void : $ASCII mapName {print}, int entryID, int transitionType "fade to white/black, star wipe, mario head cutout, curtain close, etc"
api : 802CA440, 0EEDF0 : GotoMapByID			: void : int areaID, int mapID, int	entryID
api : 802CA460, 0EEE10 : GetEntryID				: void : {out} var outValue	{outType=entryID} % returns the entrance ID that the player used to enter the current map
api : 802CA490, 0EEE40 : GetMapID				: void : int outValue	% used by the forever forest maps "mim_*" to load current ID to a game byte
api : 802CA4C0, 0EEE70 : GetLoadType			: void : {out} var outType {outType=int} "0 = loaded from another map | 1 = loaded from main menu" % used for spawning the player at save points
api : 802CA4F4, 0EEEA4 : SetRenderMode			: void : modelID model, int mode
api : 802CA558, 0EEF08 : PlaySoundAtModel		: void : modelID, #soundID, ??? "always zero?"
api : 802CA614, 0EEFC4 : PlaySoundAtCollider	: void : colliderID, #soundID, ??? "always zero?"
% <-- end of file

% start of file -->
% CAMERA FUNCTIONS
api : 802CA6C0, 0EF070 : SetCamEnabled    : void : #camID, bool enabled
api : 802CA774, 0EF124 : SetCamFlag80     : void : #camID, bool enabled
api : 802CA828, 0EF1D8 : SetCamPerspective : void : #camID, int type "almost always = 3, NOT the same camera type from zones", int vfov, int nearClip, int farClip
% 802CA988	#camID, out, out, out, out
api : 802CAB18, 0EF4C8 : SetCamViewport   : void : #camID, int startX, int startY, int width, int height
% 802CABE8  8    
api : 802CAD98, 0EF748 : SetCamBGColor    : void : #camID, int R "0-255", int G "0-255", int B "0-255" % this is almost always black "0,0,0". only ice palace is different.

api : 802CAF2C, 0EF8DC : SetCamTarget "set the target position" : void : #camID, float posX, float posY, float posZ
% 802CB008  9     
api : 802CB2A8, 0EFC58 : ShakeCam		: void : #camID, int mode "0 = constant up&down | 1 = angular | 2 = decaying up&down", int duration, int magnitude
asm : 802CB56C, 0EFF1C : exec_ShakeCam1 : void : #camID, int mode "0 = constant up&down | 1 = angular | 2 = decaying up&down", int duration
asm : 802CB5C8, 0EFF78 : exec_ShakeCamX : void : #camID, int mode "0 = constant up&down | 1 = angular | 2 = decaying up&down", int duration, int magnitude
api : 802CB680, 0F0030 : SetCamLeadPlayer : void : #camID, bool enabled
%
api : 802CB79C, 0F014C : PanToTarget "pans the camera with a cosine easing function at the ends" : void : #camID, float easingPhase, int targetType "1 = target | 0 = player"
api : 802CB860, 0F0210 : UseSettingsFrom "use control settings from the zone below a given sampling point" : void : #camID, float posX, float posY, float posZ
api : 802CB9F8, 0F03A8 : LoadSettings : void : #camID, $CamSettings
api : 802CBAB4, 0F0464 : SetCamType : void : #camID, int controlType, bool
api : 802CBB48, 0F04F8 : SetCamPitch : void : #camID, float boomPitch, float viewPitch
api : 802CBBE4, 0F0594 : SetCamDistance : void : #camID, float boomLength
api : 802CBC58, 0F0608 : SetCamPosA : void : #camID, float x, float y
api : 802CBCF4, 0F06A4 : SetCamPosB : void : #camID, float x, float y
api : 802CBD90, 0F0740 : SetCamPosC : void : #camID, float x, float y
api : 802CBE2C, 0F07DC : SetPanTarget : void : #camID, float x, float y, float z
api : 802CBEF0, 0F08A0 : SetCamSpeed : void : #camID, float speed
api : 802CBF64, 0F0914 : GetCamType : void : #camID, {out} var type, {out} var "unkBool"
api : 802CBFF4, 0F09A4 : GetCamPitch : void : #camID, {out} fvar boomPitch, {out} fvar viewPitch
api : 802CC084, 0F0A34 : GetCamDistance   : void : #camID, {out} fvar boomLength
api : 802CC0F4, 0F0AA4 : GetCamPosA       : void : #camID, {out} fvar x, {out} fvar z
api : 802CC184, 0F0B34 : GetCamPosB       : void : #camID, {out} fvar x, {out} fvar z
api : 802CC214, 0F0BC4 : GetCamPosC       : void : #camID, {out} fvar x, {out} fvar z
api : 802CC2A4, 0F0C54 : GetCamPosition   : void : #camID, {out} fvar x, {out} fvar y, {out} fvar z
api : 802CC354, 0F0D04 : WaitForCam "checks if the camera has completed its assigned motion yet" : void : #camID, float endInterpValue "almost always .FLOAT[1.0]"
api : 802CC3EC, 0F0D9C : SetCamProperties : void : #camID, float moveSpeed, float x, float y, float z, float boomLength, float boomPitch, float viewPitch
api : 802CC660, 0F1010 : AdjustCam "targets the player and adjusts camera settings" : void : #camID, float moveSpeed, float offsetX, float boomLength, float boomPitch, float viewPitch
api : 802CC8C8, 0F1278 : ResetCam "copies settings from the player's zone and pans to the player at a given speed" : void : #camID, float moveSpeed

% start of file -->
% These functions are responsible for complex model animations in maps like dgb_01 and kmr_11:
% model_animators are used to apply transformations to a tree of animator_nodes tied to models
% These model_animators are assigned to animated_model_sets.
asm : 802CCAC0, 0F1470 : update_animated_models : void : void
asm : 802CCB18, 0F14C8 : render_animated_models : void : void
api : 802CCCB0, 0F1660 : InitAnimatedModels : void : void
api : 802CCCEC, 0F169C : LoadAnimatedModel : void : int animModelIndex, $AnimatedModelTree
api : 802CCDAC, 0F175C : LoadAnimatedMesh : void : int animModelIndex, $AnimatedModelTree
api : 802CCE6C, 0F181C : PlayModelAnimation "plays model animation, forcing restart if same as current one" : void : int animModelIndex, $ModelAnimation
api : 802CCEDC, 0F188C : PlayModelAnimationStartingFrom "plays model animation from a given time, forcing restart if same as current one" : void : int animModelIndex, $ModelAnimation, int startTime
api : 802CCF6C, 0F191C : ChangeModelAnimation "plays model animation only if it differs from current one" : void : int, $ModelAnimation
api : 802CCFE4, 0F1994 : SetAnimatedModelRootPosition : void : int animModelIndex, float x, float y, float z
api : 802CD090, 0F1A40 : GetAnimatedModelRootPosition : void : int animModelIndex, {out} fvar posX, {out} fvar posY, {out} fvar posZ
api : 802CD12C, 0F1ADC : AddAnimatedModelRootPosition : void : int animModelIndex, float Dx, float Dy, float Dz
api : 802CD1F0, 0F1BA0 : SetAnimatedModelRootRotation : void : int animModelIndex, float Rx, float Ry, float Rz
api : 802CD29C, 0F1C4C : SetAnimatedModelRootScale : void : int animModelIndex, float Sx, float Sy, float Sz
api : 802CD348, 0F1CF8 : SetAnimatedModelRenderMode : void : int animModelIndex, #renderMode
api : 802CD3C0, 0F1D70 : DeleteAnimatedModel : void : int animModelIndex
api : 802CD418, 0F1DC8 : SetAnimatorFlags : void : int animModelIndex, {raw} int bits, int mode "0 = clear | 1 = set"
asm : 802CD4B4, 0F1E64 : reset_model_animators : void : void
asm : 802CD57C, 0F1F2C : init_model_animators : void : void
api : 802CD5C0, 0F1F70 : GetAnimatedNodePosition	"world position (node translation with node transform applied)" : void : int animatorIndex, int nodeIndex, {out} int posX, {out} int posY, {out} int posZ
api : 802CD6E0, 0F2090 : GetAnimatedNodeRotation	: void : int animatorIndex, int nodeIndex, {out} int rotX, {out} int rotY, {out} int rotZ
% next two are used in General Guy fight to align General Guy actor with placeholder model in the Toy Tank model:
api : 802CD7D8, 0F2188 : GetAnimatedPositionByTreeIndex	"world position (node translation with node transform applied)" : void : int animatorIndex, int treeIndex, {out} int posX, {out} int posY, {out} int posZ
api : 802CD8F8, 0F22A8 : GetAnimatedRotationByTreeIndex	: void : int animatorIndex, int treeIndex, {out} int rotX, {out} int rotY, {out} int rotZ
api : 802CD9F0, 0F23A0 : SetAnimatedNodeFlags	: void : int animatorIndex, int nodeID, {raw} int bits, int mode "0 = clear | 1 = set"
% <-- split -->
asm : 802CDAC0, 0F2470 : resolve_npc : npc* : script_instance* script, int ownerID
asm : 802CDB0C, 0F24BC : set_npc_animation	: void : npc*, animID
api : 802CDBA4, 0F2554 : CreateNpc  "used in battle scripts" : void : #npcID, int unknown "unused?"
api : 802CDC1C, 0F25CC : DeleteNpc 			: void : #npcID
api : 802CDC58, 0F2608 : GetNpcPointer 		: void : #npcID, {out} var npc
api : 802CDCB0, 0F2660 : SetNpcPos        	: void : #npcID, int x, int y, int z
api : 802CDDB0, 0F2760 : SetNpcRotation "center of rotation is at base of sprite" : void : #npcID, float rX, float rY, float rZ
% api : 802CDE68 sets npc[50]
api : 802CDED4, 0F2884 : SetNpcScale		: void : #npcID, float sX, float sY, float sZ
api : 802CDF8C, 0F293C : SetNpcCollisionSize : void : #npcID, int height, int radius
api : 802CE01C, 0F29CC : SetNpcSpeed		: void : #npcID, float speed
api : 802CE088, 0F2A38 : SetNpcJumpscale  	: void : #npcID, float jumpScale
api : 802CE0F4, 0F2AA4 : SetNpcAnimation 	: void : #npcID, int animation
api : 802CE160, 0F2B10 : GetNpcAnimation	: void : #npcID, {out} var animation
api : 802CE1C0, 0F2B70 : SetNpcAnimationSpeed : void : #npcID, float animationSpeed "1.0 = default"
api : 802CE22C, 0F2BDC : NpcMoveTo			: void : #npcID, int goalX, int goalZ, int time "frames; 0 = use NpcSpeed"
asm : 802CE434, 0F2DE4 : _npc_jump_to		: int scriptStatus : script_instance*, int initialCall, int snapYaw
api : 802CE6C4, 0F3074 : NpcJump0 "snaps yaw to move direction" : void : #npcID, int goalX, int goalY, int goalZ, int duration
api : 802CE6E0, 0F3090 : NpcJump1 "does not change yaw" : void : #npcID, int goalX, int goalY, int goalZ, int duration
api : 802CE6FC, 0F30AC : NpcFlyTo			: Var[3] float posX, Var[4] float posY, Var[5] float posZ, Var[6] int duration : #npcID, int goalX, int goalY, int goalZ, int duration, int arcHeight "offset height over fly length by a sinusoidal arc, use 0 for none, can be negative", #easing "same as for lerps"
api : 802CEA10, 0F33C0 : GetNpcYaw			: void : #npcID, {out} var yaw
api : 802CEA84, 0F3434 : SetNpcYaw			: void : #npcID, int angle
api : 802CEB04, 0F34B4 : InterpNpcYaw "turns gradually over some number of frames. however, turn animation will often be abrupt." : void : #npcID, int goalAngle, int time "frames"
api : 802CECC8, 0F3678 : NpcFacePlayer      : void : #npcID, int duration "0 = instant"
api : 802CEE80, 0F3830 : NpcFaceNpc			: void : #npcID, #npcID "cannot be player", int duration "0 = instant"
api : 802CF060, 0F3A10 : SetNpcFlagBits		: void : #npcID, int flags, bool mode "1 = set | 0 = clear"
api : 802CF0F4, 0F3AA4 : GetNpcPos			: void : #npcID, {out} var posX, {out} var posY, {out} var posZ
% api : 802CF1B4 sets npc[80]
api : 802CF208, 0F3BB8 : SetNpcSprite : void :  #npcID, animID
api : 802CF268, 0F3C18 : EnableNpcShadow      : void : #npcID, bool enabled
api : 802CF2EC, 0F3C9C : EnableNpcBlur        : void : #npcID, bool enabled
api : 802CF370, 0F3D20 : ClearPartnerMoveHistory : void : #npcID
% api : 802CF3BC : NpcSetHomePosToCurrent

api : 802CF438, 0F3DE8 : GetPartnerPos	: void : {out} var posX, {out} var posY, {out} var posZ 
api : 802CF4E8, 0F3E98 : DisablePartnerAI : void : int         % ??? -- partner will no longer try to follow mario, still has physics though
api : 802CF52C, 0F3EDC : EnablePartnerAI  : void : void       % enables follow player AI

api : 802CF5B8, 0F3F68 : BringPartnerOut	: void : #partnerID % brings out temporary extra partner, Npc:Partner will refer to this temporary partner until they are put away
api : 802CF988, 0F4338 : PutPartnerAway		: void : void % puts away a temporary partner

api : 802CFC74, 0F4624 : GetCurrentPartnerID : void : {out} var partnerID {outType=#partnerID}

api : 802CFCA0, 0F4650 : PartnerCanUseAbility : void :  {out} var canUse {outType=bool}
api : 802CFCE8, 0F4698 : PartnerIsFlying : void : {out} var isFlying {outType=bool}

api : 802CFE80, 0F4830 : SetNpcPaletteSwapMode : void : #npcID, int paletteSwapMode "0-4 inclusive"
api : 802CFEEC, 0F489C : SetNpcPaletteSwapLower : void : #npcID, int palIndexA, int palIndexB, int timeHoldA, int timeAB
api : 802CFFC0, 0F4970 : SetNpcPaletteSwapping : void : #npcID, int palIndexA, int palIndexB, int timeHoldA, int timeAB, int timeHoldB, int timeBA, int palIndexC, int palIndexD

api : 802D0118, 0F4AC8 : SetNpcDecoration	: void : #npcID, int index "0 or 1", #npcDecoration
api : 802D01AC, 0F4B5C : PlaySoundAtNpc		: void : #npcID, #soundID, ???
% api : 802D0244 : ??? : void : #npcID, int value --> npc[AA]
% <-- end of file

% start of file -->
% formerly SayMessage0
api : 802D02B0, 0F4C60 : SpeakToPlayer : Var[D] animID savedAnim1, Var[E] animID savedAnim2, Var[F] int yaw ...
	: #npcID, animID talkAnim, animID idleAnim, int messageFlags, {print} stringID ...
	: #npcID, animID talkAnim, animID idleAnim, int messageFlags, int screenPosOffsetX, int screenPosOffsetY, {print} stringID
% formerly SayMessage1
api : 802D02CC, 0F4C7C : EndSpeech		: Var[D] animID savedAnim1, Var[E] animID savedAnim2, Var[F] int yaw ...
	: #npcID, animID talkAnim, animID idleAnim, int messageFlags ...
	: #npcID, animID talkAnim, animID idleAnim, int messageFlags, int screenPosOffsetX, int screenPosOffsetY
% formerly SayMessage2 -- pair with strings starting with [NEXT] rather than [BEGIN:XX]
api : 802D02E8, 0F4C98 : ContinueSpeech	: Var[D] animID savedAnim1, Var[E] animID savedAnim2, Var[F] int yaw ...
	: #npcID, animID talkAnim, animID idleAnim, int flags, {print} stringID ...
	: #npcID, animID talkAnim, animID idleAnim, int messageFlags, int screenPosOffsetX, int screenPosOffsetY, {print} stringID
% formerly SayMessage3
api : 802D0304, 0F4CB4 : SpeakToNpc		: Var[D] animID savedAnim1, Var[E] animID savedAnim2, Var[F] int yaw ...
	: #npcID, animID talkAnim, animID idleAnim, int flags, #npcID, {print} stringID ...
	: #npcID, animID talkAnim, animID idleAnim, int flags, #npcID, int screenPosOffsetX, int screenPosOffsetY, {print} stringID
asm : 802D0320, 0F4CD0 : _show_message "reads args from script context" : void : script_instance*, bool initialCall, int mode "from SayMessageX api functions"
api : 802D0894, 0F5244 : ShowMessageAtScreenPos "used by signs and NPCs that cannot be seen, speech bubble doesn't connect to anything" : Var[0] int ??? : {print} stringID, int screenPosX, int screenPosY
api : 802D095C, 0F530C : ShowMessageAtWorldPos : void : {print} stringID, int posX, int posY, int posZ
api : 802D0A98, 0F5448 : CloseMessage "force the current message box to close" : Var[0] int ??? : void
api : 802D0AFC, 0F54AC : SwitchMessage "change the string used for the current message box" : Var[0] int ??? : {print} stringID
api : 802D0B6C, 0F551C : ShowChoice "display a choice message and wait for selection" : Var[0] int selectedIndex : {print} stringID options
api : 802D0BF8, 0F55A8 : CloseChoice			: void : void
api : 802D0C20, 0F55D0 : CancelMessage "close current message box? uses different flag than CloseMessage" : void : void
api : 802D0C48, 0F55F8 : CancelMessageAndBlock "close current message box? uses different flag than CloseMessage" : void : void
api : 802D0C70, 0F5620 : SetMessageImages		: void : int messageImageList
% api : 802D0C94
api : 802D0CEC, 0F569C : SetMessageString		: void : stringID "or pointer to string", int messageVarIndex "0-3"
api : 802D0D44, 0F56F4 : SetMessageValue		: void : int value, int messageVarIndex "0-3"
% <-- end of file

% start of file -->
api : 802D0DA0, 0F5750 : HidePlayerShadow		: void : bool hideShadow "1 = hide | 0 = reveal"
api : 802D0DE4, 0F5794 : DisablePlayerPhysics "disables gravity, animation state machine changes, camera controller updates, but NOT partner AI" : void : bool disable "1 = disable | 0 = enable"
api : 802D0E28, 0F57D8 : DisablePlayerInput  	: void : bool disable "1 = disable | 0 = enable"
api : 802D0EF0, 0F58A0 : SetPlayerPos        	: void : int X, int Y, int Z
api : 802D0FB0, 0F5960 : SetPlayerCollisionSize : void : int height, int radius
api : 802D1024, 0F59D4 : SetPlayerSpeed      	: void : float speed
api : 802D1054, 0F5A04 : SetPlayerJumpscale		: void : float jumpScale
api : 802D1084, 0F5A34 : SetPlayerAnimation  	: void : #playerAnim
api : 802D10D8, 0F5A88 : SetPlayerActionState	: void : #actionState
api : 802D1104, 0F5AB4 : SetPlayerAnimationSpeed : void : float animationSpeed "1.0 = default"
api : 802D1134, 0F5AE4 : PlayerMoveTo			: void : int goalX, int goalZ, int time "frames -- use 0 to compute via move speed + distance"
asm : 802D14E0, 0F5E90 : player_jump			: bool : script_instance* script, int initialCall, int mode
api : 802D18E8, 0F6298 : PlayerJump				: void : int goalX, int goalY, int goalZ, int arcHeight
api : 802D1904, 0F62B4 : PlayerJump1			: void : int goalX, int goalY, int goalZ, int arcHeight
api : 802D1920, 0F62D0 : PlayerJump2			: void : int goalX, int goalY, int goalZ, int arcHeight
api : 802D193C, 0F62EC : InterpPlayerYaw		: void : int targetAngle, int time "frames"
api : 802D1B04, 0F64B4 : PlayerFaceNpc "set player yaw to face npc" : void : #npcID facingTarget, int "1 allows looking back and forth between targets, 0 = fixed?"
api : 802D1D28, 0F66D8 : GetPlayerTargetYaw		: void : {out} var yaw
api : 802D1D60, 0F6710 : SetPlayerFlagBits		: void : int bits, bool mode "1 = set | 0 = clear"
api : 802D1DD0, 0F6780 : GetPlayerActionState	: void : {out} var state {outType=#actionState}
api : 802D1DFC, 0F67AC : GetPlayerPos			: void : {out} var posX, {out} var posY, {out} var posZ
api : 802D1E94, 0F6844 : GetPlayerAnimation		: void : {out} var animation {outType=#playerAnim}
api : 802D1EC0, 0F6870 : FullyRestoreHPandFP	: void : void
api : 802D1EE0, 0F6890 : FullyRestoreSP			: void : void
api : 802D1EFC, 0F68AC : EnablePartner			: void : int partner "note: partnerID - 1"
api : 802D1F38, 0F68E8 : DisablePartner			: void : #partnerID
api : 802D1F70, 0F6920 : UseEntryHeading : Var[1] float goalPosX, Var[2] float goalPosY, Var[3] float goalPosZ, Var[5] float offsetStep "tangent from room entry offset" : int moveDist, int time "num frames"
%asm : 802D2148
api : 802D216C, 0F6B1C : UseExitHeading : Var[1] float goalPosX, Var[2] float goalPosY, Var[3] float goalPosZ : int moveDist, entryID "exit angle = opposite of entry angle"

api : 802D244C, 0F6DFC : WaitForPlayerTouchingFloor : void : void

api : 802D249C, 0F6E4C : IsPlayerOnValidFloor : void : {out} var value {outType=bool}
api : 802D24F4, 0F6EA4 : WaitForPlayerMoveToComplete : void : void
api : 802D2508, 0F6EB8 : WaitForPlayerInputEnabled : void : void

api : 802D2AA8, 0F7458 : DisablePulseStone "controls flag that make pulse stone appear on sbk maps" : void : bool disabled
api : 802D2B0C, 0F74BC : GetCurrentPartner : void : {out} var value
% two functions controlling flags 4 and 8
api : 802D2B88, 0F7538 : Disable8bitMario : void : bool disabled "0 = pixel mario | 1 = paper mario"
api : 802D2CD8, 0F7688 : PlaySoundAtPlayer : void : #soundID, int "always zero?"
% split?
asm : 802D2D30, 0F76E0 : virtual_entity_appendGfx_quad : void : int r, int g, int b, int alpha, int ulX, int ulY, int lrX, int lrY
asm : 802D2ED4, 0F7884 : virtual_entity_render_quad : void : int r, int g, int b, int a, int posX, int posY, int sizeX, int sizeY
asm : 802D2F34, 0F78E4 : virtual_entity_move_polar : void : virtual_entity*, float dist, float yaw "degrees"
asm : 802D2FCC, 0F797C : virtual_entity_list_update : void : void
asm : 802D3028, 0F79D8 : virtual_entity_list_render_world : void : void
asm : 802D31E0, 0F7B90 : virtual_entity_list_render_UI : void : void
api : 802D3398, 0F7D48 : InitVirtualEntityList : void : void
api : 802D33D4, 0F7D84 : CreateVirtualEntityAt : void : int index, $EntityModelScript
api : 802D3474, 0F7E24 : CreateVirtualEntity : void : {out} var index, $EntityModelScript
api : 802D354C, 0F7EFC : CreateVirtualEntity_ALT : void : {out} var index, $EntityModelScript
api : 802D3624, 0F7FD4 : DeleteVirtualEntity : void : int index
api : 802D3674, 0F8024 : SetVirtualEntityRenderCommands : void : int index, $EntityModelScript
api : 802D36E0, 0F8090 : SetVirtualEntityPosition : void : int index, float posX, float posY, float posZ
api : 802D378C, 0F813C : GetVirtualEntityPosition : void : int index, {out} var posX, {out} var posY, {out} var posZ
api : 802D3840, 0F81F0 : SetVirtualEntityRotation : void : int index, float rotX, float rotY, float rotZ
api : 802D38EC, 0F829C : SetVirtualEntityScale : void : int index, float sx, float sy, float sz
api : 802D3998, 0F8348 : SetVirtualEntityMoveSpeed : void : void : int index, float speed
api : 802D39FC, 0F83AC : SetVirtualEntityJumpGravity : void : void : int index, float gravity
api : 802D3A60, 0F8410 : VirtualEntityMoveTo : void : void : int index, int goalX, int goalY, int goalZ, int time "0 = compute from move speed"
api : 802D3C58, 0F8608 : VirtualEntityJumpTo : void : void : int index, int goalX, int goalY, int goalZ, int time "0 = compute from jump gravity arc"
api : 802D3EB8, 0F8868 : VirtualEntityLandJump "Keep moving along jump angle and velocity, completing when y = 0." : void : void : int index
api : 802D3F74, 0F8924 : SetVirtualEntityFlags : void : int index, {raw} int bits
api : 802D3FC8, 0F8978 : SetVirtualEntityFlagBits : void : int index, {raw} int bits, int mode "0 = clear, 1 = set"
api : 802D4050, 0F8A00 : SetVirtualEntityRenderMode : void : * "int index, int type -- selects render mode, ... additional args depend on type, but are never used?"
asm : 802D4164, 0F8B14 : virtual_entity_get_by_index : virtual_entity* : int index
asm : 802D417C, 0F8B2C : virtual_entity_create_at_index : virtual_entity* : int index, $EntityModelScript
asm : 802D420C, 0F8BBC : virtual_entity_create : int index : $EntityModelScript
asm : 802D42AC, 0F8C5C : ALT_virtual_entity_create : virtual_entity* : $EntityModelScript
asm : 802D4364, 0F8D14 : virtual_entity_set_pos : void : int index, int posX, int posY, int posZ
asm : 802D43AC, 0F8D5C : virtual_entity_set_scale : void : int index, int sx, int sy, int sz
asm : 802D43D0, 0F8D80 : virtual_entity_set_rotation : void : int index, int rotX, int rotY, int rotZ
asm : 802D43F4, 0F8DA4 : virtual_entity_delete_by_index : void : int index
asm : 802D4434, 0F8DE4 : virtual_entity_delete_by_ref : void : int index
asm : 802D4488, 0F8E38 : clear_virtual_entity_list : void : void
asm : 802D4560, 0F8F10 : init_virtual_entity_list : void : void
% <-- end of file

% start of file -->
api : 802D45B0, 0F8F60 : MakeLerp "uses Vars B-F" : void : int start, int end, int duration "frames", #easing
api : 802D462C, 0F8FDC : UpdateLerp "uses Vars B-F" : Var[0] int currentValue, Var[1] bool done : void
api : 802D46B0, 0F9060 : RandInt : void : int max, {out} var value
api : 802D4708, 0F90B8 : GetAngleBetweenNPCs : void :#npcID, #npcID, {out} var angle
api : 802D47B4, 0F9164 : GetAngleToNPC : void : #npcID, {out} var angle "from player toward NPC"
api : 802D4830, 0F91E0 : GetAngleToPlayer : void : #npcID, {out} var angle "from NPC toward player"
api : 802D48AC, 0F925C : AwaitPlayerApproach "pauses the script until the player comes within a certain radius from point X,Z" : void : int X, int Z, int radius
api : 802D4964, 0F9314 : IsPlayerWithin "checks whether the player is within a certain radius of point X,Z" : void : int X, int Z, int radius, {out} var bIsWithin
api : 802D4A5C, 0F940C : AwaitPlayerLeave "pauses the script until the player moves beyond a certain radius from point X,Z" : void : int X, int Z, int radius
api : 802D4B14, 0F94C4 : AddVectorPolar "offsets a point X,Z by a vector given by length and angle" : void : {out} fvar X, {out} fvar Z, float radius, float angle

asm : 802D4DAC, 0F975C : load_path_data : void : int num, float* normalizedLengths, float** staticVectors, float** outVectors
asm : 802D5270, 0F9C20 : get_path_position : void : float alpha, script_instance* script, float* outPos, int numVectors, float* normalizedLengths, float** staticVectors, float** vectors
api : 802D5430, 0F9DE0 : LoadPath : Var[F] int pathObjectHandler "expected by GetNextPathPos" : int time, {len=#2} $VectorList, int numVectors, #easing
api : 802D5524, 0F9ED4 : GetNextPathPos : Var[0] int done, Var[1] float posX, Var[2] float posY, Var[3] float posZ, Var[F] int pathObjectHanlder "created by LoadPath, must be maintained between calls" : none % no args

api : 802D5770, 0FA120 : GetDist2D : void : {out} fvar dist, float X1, float Y1, float X2, float Y2
api : 802D5830, 0FA1E0 : SetTimeFreezeMode : void : int timeFreezeMode
api : 802D585C, 0FA20C : ModifyGlobalOverrideFlags "modify flags at 8009A650" : void : int mode, int bits
/%
    These two functions assume arg0 is a variable that holds another variable.'
    For example, consider the result of "Set  *Var[0]  *StoryProgress"
    We can use these functions to get/set *StoryProgress through *Var[0].
%/
api : 802D58E0, 0FA290 : SetValueByRef "sets the variable stored at src to the value at dest" : void : {out} var dest, var src % 
% X = GetVar(src), Y = GetVar(dest), SetVar(X, Y) -- *dest = *src
api : 802D593C, 0FA2EC : GetValueByRef "gets the value held by the variable in src and copies it to dest" : void : var src, {out} var dest
% val = GetVar(GetVar(src)), SetVar(dest, val) -- *dest = **src
api : 802D5998, 0FA348 : EnableStatusMenu "multiple calls stack and must be undone individually" : void : bool enabled	"1 = enable | 0 = disable"
api : 802D59DC, 0FA38C : ShowStatusMenu	: void : bool "1 = force it to show | 0 = force it to hide"
api : 802D5A28, 0FA3D8 : SetGameMode : void : int gameMode
api : 802D5A58, 0FA408 : ClampAngleInt : void : int "clamps to range 0-360"
api : 802D5AB4, 0FA464 : ClampAngleFloat : void : float "clamps to range 0-360"
% <-- end of file


api : 802D5CE0, 0FA690 : FadeOutMusic     	: void : int musicPlayer, int fadeTime "max 10000"
api : 802D5D4C, 0FA6FC : SetMusicTrack 		: void : int musicPlayer, #songID, int variation, int volume
api : 802D5DF4, 0FA7A4 : FadeInMusic      	: void : int musicPlayer, #songID, int variation, int fadeTime, ???, ???
%802D5EE0
%802D5F28
api : 802D5FD8, 0FA988 : PopSong : void : void
api : 802D5FF8, 0FA9A8 : PushSong : void : int songID, int variation
% dont use these 'BattleSong' functions, the encounter system handles this within the engine
api : 802D6050, 0FAA00 : PopBattleSong {unused} {hidden} : void : void
api : 802D6070, 0FAA20 : PushBattleSong {unused} {hidden} : void : void
api : 802D6090, 0FAA40 : SetBattleSong {unused} {hidden} : void : int songID, int variation
api : 802D60E8, 0FAA98 : ClearAmbientSounds	: void : int fadeTime "typical value is 250"
api : 802D611C, 0FAACC : PlayAmbientSounds	: void : #ambientSFX
api : 802D6150, 0FAB00 : PlaySound        	: void : int soundID
api : 802D617C, 0FAB2C : PlaySoundWithVolume : void : int soundID, int volume
api : 802D61DC, 0FAB8C : PlaySoundAt      	: void : int soundID, ???, int X, int Y, int Z
api : 802D62B8, 0FAC68 : StopSound			: void : int soundID
api : 802D6314, 0FACC4 : UseDoorSounds    	: void : #doorSFX
api : 802D6340, 0FACF0 : UseAdvancedDoorSounds    	: void : #doorSFX
api : 802D636C, 0FAD1C : PlaySoundAtF		: void : int soundID, ???, float X, float Y, float Z

api : 802D6420, 0FADD0 : ShowKeyChoicePopup : Var[0] int choiceStatus, Var[1] int selectedKeyItemSlot : void
api : 802D663C, 0FAFEC : ShowConsumableChoicePopup : Var[0] int choiceStatus, Var[1] int selectedKeyItemSlot : void
api : 802D6858, 0FB208 : RemoveKeyItemAt "removes key item at index" : void : int keyItemSlot
api : 802D688C, 0FB23C : RemoveItemAt     	: void : int itemSlot
api : 802D68C8, 0FB278 : AddKeyItem       	: void : #itemID
api : 802D6954, 0FB304 : CloseChoicePopup : void : void
api : 802D699C, 0FB34C : HasKeyItem       	: void : #itemID, {out} var bHasItem "boolean"
api : 802D6A14, 0FB3C4 : FindKeyItem      	: void : #itemID, {out} var keyItemSlot "FFFF if not found"
api : 802D6A98, 0FB448 : AddItem          	: void : #itemID, {out} var itemSlot "FFFF if none were available"
api : 802D6AF0, 0FB4A0 : ClearVariable "pointless" : void : {out} var "will be set to zero"
api : 802D6B18, 0FB4C8 : FindItem         	: void : #itemID, {out} var itemSlot "FFFF if not found"
api : 802D6B9C, 0FB54C : RemoveItem       	: void : #itemID, {out} var itemSlot "FFFF if none were removed"
api : 802D6C4C, 0FB5FC : CountFortessKeys	: void : {out} var num
api : 802D6C94, 0FB644 : RemoveFortressKeys	: void : int num
api : 802D6CC0, 0FB670 : MakeItemEntity : Var[0] int itemEntityIndex : #itemID, int spawnX, int spawnY, int spawnZ, #itemSpawnMode, var pickupFlag "GameFlag, 0 is valid for none"
% This is almost identical to MakeItemEntity, but this is used for items that drop from trees.
% The only difference between these functions is that MakeItemEntity uses GetVariableIndex on the saved flag value, while DropItem uses GetVariable
api : 802D6DC0, 0FB770 : DropItemEntity : Var[0] int itemEntityIndex : #itemID, int spawnX, int spawnY, int spawnZ, #itemSpawnMode, var pickupFlag "GameFlag, 0 is valid for none"
% Same as DropItemEntity, except it also sets item flag 0x4000
api : 802D6EC0, 0FB870 : DropItemEntityB : Var[0] int itemEntityIndex : #itemID, int spawnX, int spawnY, int spawnZ, #itemSpawnMode, var pickupFlag "GameFlag, 0 is valid for none"
api : 802D6FCC, 0FB97C : RemoveItemEntity : void : int itemEntityIndex
api : 802D6FF8, 0FB9A8 : AddBadge         : void : #itemID, {out} var addedBadgeSlot
api : 802D7050, 0FBA00 : RemoveBadge "unequips and removes badge from inventory" : void : #itemID
api : 802D70D0, 0FBA80 : SetItemPos     : void : int itemEntityIndex, int X, int Y, int Z
api : 802D7194, 0FBB44 : SetItemFlags 	: void : int itemEntityIndex, int flags, int mode
api : 802D721C, 0FBBCC : SetItemAlpha 	: void : int itemEntityIndex, int alpha

api : 802D7278, 0FBC28 : AddCoin		: Var[0] int numCoins : int deltaCoins "can be negative"
api : 802D72B4, 0FBC64 : AddStarPoints	: Var[0] int numStarPoints : int deltaStarPoints "can be negative"
api : 802D72F0, 0FBCA0 : AddStarPieces  : Var[0] int numStarPieces : int deltaStarPieces "can be negative"
api : 802D732C, 0FBCDC : GetItemPower   : void : #itemID, int bonusHP, int bonusFP
api : 802D73A4, 0FBD54 : ShowGotItem    : void : #itemID, bool, int messageBoxFlags "0 = item, 10 = \"1 coin\", 20 = \"3 star pieces\", ..."

api : 802D78A0, 0FC250 : ShowEmote        : void : #npcID, #emote, int, ???, ???, ???, ???, ???, ???     % args : #npcID, emoteType, angle "degrees ccw from 12:00", ???, flag?, ?, ?, ?
api : 802D7AE4, 0FC494 : RemoveEffect     : void : effect_instance*

api : 802D8028, 0FC9D8 : ShowSleepBubble  : void : #npcID, int ???, float ???, int ??? "X?", float ??? "Y?", float ??? "Z?", float ??? "scale?", float pitch "0 = up, >0 = left", {out} var effectPtr {outType=effect_instance*}

% 802D7CF8 can be used to darken the screen "ie, Rafael raven scene in jan_23"

% 802D8248 "nargs = 2"

api : 802D829C, 0FCC4C : PlayEffect "huge switch table for playing special effects" : Var[F] effect_instance* effect : varargs

% start of file -->
% SPRITE SHADING
api : 802D9700, 0FE0B0 : SetSpriteShading     : void :  int preset "sets the shading effect on character sprites -- but not items -- in dark areas"
api : 802D9A3C, 0FE3EC : EnableSpriteShading  : void :  bool "0 = no shading | 1 = shading"
% DEMO INPUT
api : 802D9A90, 0FE440 : GetDemoState		: void : {out} var state "0 ordinary gameplay | 1 manually issuing commands in demo | 2 demo map transition?"
api : 802D9AC0, 0FE470 : DemoPressButton	: void : #buttons
api : 802D9AF8, 0FE4A8 : DemoReleaseButton	: void : #buttons
api : 802D9B34, 0FE4E4 : DemoSetButtons		: void : #buttons
api : 802D9B64, 0FE514 : DemoJoystickRadial	: void : int radius "0-255", int angle "degrees cw, 0 is straight up"
api : 802D9C10, 0FE5C0 : DemoJoystickXY		: void : int leftRight "signed byte", int upDown "signed byte"
% <-- end of file

scr : 802D9CB0, 0FE660 : ShakeCam1	: void : Var[0] #camID cam, Var[1] int mode, Var[2] int duration
scr : 802D9CE8, 0FE698 : ShakeCamX	: void : Var[0] #camID cam, Var[1] int mode, Var[2] int duration, Var[3] int magnitude
%} 802DA480

% start of file? -->
asm : 802DBD40, 0FEE30 : spr_init_quad_cache : void : void
asm : 802DBD8C, 0FEE7C : spr_get_cached_quad : vertex[4]* : int* quadIndex 
asm : 802DBDBC, 0FEEAC : spr_make_quad_for_size : void : vertex[4]* quad, int width, int height
asm : 802DBE78, 0FEF68 : spr_get_quad_for_size : vertex[4]* : int* quadIndex "pass in last-known size, also functions as an out var", int width, int height
asm : 802DBFC0, 0FF0B0 : spr_clear_quad_cache : void : void
asm : 802DC8F4, 0FF9E4 : spr_appendGfx_component	: void : spr_raster_cache_entry* raster, float dX, float dY, float dZ, float rotX, float rotY, float rotZ, float scaleX, float scaleY, float scaleZ, int opacity, ptr palette, matrix4f* mtx
asm : 802DCD00, 0FFDF0 : spr_transform_point		: void : int rotX, int rotY, int rotZ, float inX, float inY, float inZ, float* outX, float* outY, float* outZ
asm : 802DC008, 0FF0F8 : spr_appendGfx_component_flat : void : ptr vertices, ptr raster, ptr palette ,int width, int height, int "unused?", matrix4f* mtx, int alpha
asm : 802DCEDC, 0FFFCC : spr_draw_component 		: void : int flags, sprite_component* comp, short* compOffset, spr_raster_cache_entry** rasterList, ptr paletteList, float zscale, matrix4f* mtx
asm : 802DD0DC, 1001CC : spr_sign_extend_12bit		: int : int value
asm : 802DD0FC, 1001EC : spr_sign_extend_16bit		: int : int value
asm : 802DD11C, 10020C : spr_component_update_commands	: void : sprite_component* comp, static_sprite_component* compData
asm : 802DD634, 100724 : spr_component_update_finish : void : sprite_component* comp, sprite_component** compList, spr_raster_cache_entry* rasterCacheEntry, int overridePalette
asm : 802DD6DC, 1007CC : spr_component_update : int "value from arg0" : int, sprite_component** compList, static_sprite_animation* animation, spr_raster_cache_entry* rasterCache, int palette
asm : 802DD7B0, 1008A0 : spr_init_component_anim_state	: void : sprite_component* comp, static_sprite_component* anim
asm : 802DD820, 100910 : spr_init_anim_state			: void : sprite_component** compList, short** cmdList
asm : 802DD88C, 10097C : spr_set_anim_timescale			: void : float timescale
asm : 802DD89C, 10098C : spr_load_player_sprite : void : int spriteIndex
asm : 802DD8F8, 1009E8 : spr_init_sprites : void : int playerSpriteSet "???"
asm : 802DDA60, 100B50 : spr_render_init : void : void
asm : 802DDA8C, 100B7C : spr_update_player_sprite	: void : int unkFlags, int animID, float timescale
asm : 802DDC40, 100D30 : spr_draw_player_sprite		: bool success : int unkFlags, int yaw, int, short** paletteList, matrix4f* mtx

asm : 802DE044, 101134 : spr_get_player_raster_info : void : spr_raster_info* outInfo, int playerSpriteID, int rasterIndex
asm : 802DE0C0, 1011B0 : spr_get_player_palettes : short** paletteList : int spriteIndex
asm : 802DE0EC, 1011DC : spr_load_npc_sprite : int instanceID : int animID "set MSB for tail allocation (ie, 80XXYYZZ)", ptr extraAnimsList
asm : 802DE2AC, 10139C : spr_update_sprite			: void : int spriteInstanceID, int animID, float timescale
asm : 802DE3D8, 1014C8 : spr_draw_npc_sprite		: bool success : int spriteInstanceID, int yaw, int, short** paletteList, matrix4f* mtx

asm : 802DE5E8, 1016D8 : spr_free_sprite : int instanceID "(0 if deleted)" : int spriteInstanceID

asm : 802DE9D8, 101AC8 : spr_get_npc_raster_info : void : spr_raster_info* outInfo, int npcSpriteID, int rasterIndex
asm : 802DEA40, 101B30 : spr_get_npc_palettes : ptr paletteList : int npcSpriteID
asm : 802DEA6C, 101B5C : spr_get_npc_color_variations : int numVariations : int npcSpriteID
% <-- split -->
asm : 802DEAA0, 101B90 : spr_swizzle_anim_offsets		: void : int unused "always 0", int memOffset "always 0", sprite_anim_data* data "expected to be followed by the data"
asm : 802DEB0C, 101BFC : spr_load_sprite : ptr spriteData : int spriteIndex, bool bPlayerSprite, bool bTailAlloc
asm : 802DED60, 101E50 : spr_init_player_raster_cache : void : int cacheSize, int maxRasterSize
asm : 802DEEA0, 101F90 : spr_get_player_raster : ptr raster : int rasterIndex "for the selected sprite", int spriteIndex "as in spriteID"
asm : 802DEFB4, 1020A4 : spr_update_player_raster_cache : void : void
asm : 802DF00C, 1020FC : spr_load_npc_extra_anims : void : ptr spriteData, ptr extraAnimsList
asm : 802DF2D8, 1023C8 : spr_allocate_components "The component data returned is a list of component pointers, followed by an array of components, all allocated on the heap." : ptr componentData : int numComponents
% <-- end of file

% start of file -->
%{ COMMON ENTITY
asm : 802E0D90, 102610 : entity_Shadow_init : void : shadow*
% split?
asm : 802E0DB0, 102630 : entity_can_collide_with_jumping_player "awkward" : bool : entity*
% split?
asm : 802E0DE0, 102660 : entity_SaveBlock_setupGfx : void : int entityIndex
asm : 802E10F4, 102974 : entity_SaveBlock_idle : void : entity*
asm : 802E114C, 1029CC : entity_SaveBlock_pause_game : void : entity*
asm : 802E117C, 1029FC : entity_SaveBlock_resume_game : void : entity*
asm : 802E11A0, 102A20 : entity_SaveBlock_save_data : void : void
asm : 802E1204, 102A84 : entity_SaveBlock_show_tutorial_message : void : entity*
asm : 802E1270, 102AF0 : entity_SaveBlock_wait_for_close_tutorial : void : entity*
asm : 802E1298, 102B18 : entity_SaveBlock_show_choice_message : void : entity*
asm : 802E12F8, 102B78 : entity_SaveBlock_show_result_message : void : entity*
asm : 802E1328, 102BA8 : entity_SaveBlock_wait_for_close_result : void : entity*
asm : 802E1350, 102BD0 : entity_SaveBlock_wait_for_close_choice : void : entity*
asm : 802E13B8, 102C38 : entity_SaveBlock_init : void : entity*
% <-- split -->
asm : 802E1400, 102C80 : entity_GreenStompSwitch_idle : void : entity*
asm : 802E1460, 102CE0 : entity_GreenStompSwitch_retract : void : entity*
asm : 802E14D8, 102D58 : entity_GreenStompSwitch_extend : void : entity*
asm : 802E153C, 102DBC : entity_switch_fall_down : void : entity*
asm : 802E1614, 102E94 : entity_HugeBlueSwitch_idle : void : entity*
asm : 802E1660, 102EE0 : entity_small_switch_idle : void : entity*
asm : 802E1740, 102FC0 : entity_RedSwitch_wait_and_reset : void : entity*
asm : 802E176C, 102FEC : entity_base_switch_anim_init : void : entity*
asm : 802E17A8, 103028 : entity_RedSwitch_animate_scale : void : entity*
asm : 802E1EA8, 103728 : entity_base_switch_start_bound_script : void : entity*
asm : 802E1EDC, 10375C : entity_base_switch_animate_scale : void : entity*
asm : 802E234C, 103BCC : entity_base_switch_init : void : entity*
asm : 802E2380, 103C00 : entity_BlueSwitch_init : void : entity*
asm : 802E2408, 103C88 : entity_HugeBlueSwitch_init : void : entity*
% split?
asm : 802E2450, 103CD0 : entity_BrickBlock_idle : void : entity*
asm : 802E246C, 103CEC : entity_shattering_init_pieces : void : entity*
asm : 802E263C, 103EBC : entity_shattering_idle : void : int entityIndex
asm : 802E2BA4, 104424 : entity_shattering_setupGfx : void : int entityIndex
% <-- split -->
asm : 802E2EB0, 104730 : entity_shattering_block_init : void : entity*
asm : 802E2FD0, 104850 : entity_breakable_block_create_shattering_entity : void : entity*
% <-- split -->
asm : 802E30C0, 104940 : entity_base_block_setupGfx : void : int entityIndex
asm : 802E31B0, 104A30 : entity_base_block_play_vanish_effect : void : void
asm : 802E31EC, 104A6C : entity_block_hit_init_scale : void : entity*
asm : 802E328C, 104B0C : entity_block_hit_animate_scale : void : entity*
asm : 802E3370, 104BF0 : entity_base_block_update_slow_sinking "unknown when this is used; triggered when entity flag 00200000 is set" : void : entity*
asm : 802E3650, 104ED0 : entity_base_block_idle : void : entity*
asm : 802E36E4, 104F64 : entity_base_block_init : void : entity*
asm : 802E3714, 104F94 : entity_inactive_block_hit_init : void : entity*
asm : 802E3728, 104FA8 : entity_inactive_block_hit_anim : void : entity*
asm : 802E37E4, 105064 : entity_inactive_block_recoil_anim "half amplitude of prev function" : void : entity*
asm : 802E3898, 105118 : entity_MulticoinBlock_init : void : entity*
asm : 802E38D8, 105158 : entity_MulticoinBlock_spawn_coin : void : entity*
asm : 802E3A00, 105280 : entity_MulticoinBlock_update_timer : void : entity*
asm : 802E3A48, 1052C8 : entity_MulticoinBlock_idle : void : entity*
asm : 802E3B08, 105388 : entity_MulticoinBlock_check_if_inactive : void : entity*
asm : 802E3BA4, 105424 : entity_block_handle_collision : void : entity*
% split?
asm : 802E3E00, 105680 : entity_init_Hammer1Block_normal : void : entity*
asm : 802E3E30, 1056B0 : entity_init_HammerBlock_small : void : entity*
% <-- split -->
asm : 802E3E80, 105700 : entity_ItemBlock_idle : void : entity*
asm : 802E3E9C, 10571C : entity_HiddenItemBlock_idle : void : entity*
asm : 802E3EE0, 105760 : entity_HitItemBlock_appear : void : entity*
asm : 802E3F0C, 10578C : entity_ItemBlock_spawn_item : void : entity*
asm : 802E4040, 1058C0 : entity_TriggerBlock_start_bound_script_2 "???" : void : entity*
asm : 802E405C, 1058DC : entity_TriggerBlock_play_vanish_effect : void : entity*
asm : 802E40A0, 105920 : entity_HitItemBlock_play_anim : void : entity*
asm : 802E4108, 105988 : entity_HitItemBlock_show_inactive : void : entity*
asm : 802E4154, 1059D4 : entity_ItemBlock_check_if_inactive : void : entity*
asm : 802E421C, 105A9C : entity_ItemBlock_replace_with_inactive : void : entity*
asm : 802E4484, 105D04 : entity_HitItemBlock_hide : void : entity*
asm : 802E44CC, 105D4C : entity_TriggerBlock_start_bound_script : void : entity*
asm : 802E44F8, 105D78 : entity_TriggerBlock_disable_player_input : void : entity*
asm : 802E4540, 105DC0 : entity_TriggerBlock_enable_player_input : void : entity*
asm : 802E455C, 105DDC : entity_ItemBlock_setupGfx : void : int entityIndex
asm : 802E464C, 105ECC : entity_ItemBlock_init : void : entity*
asm : 802E4694, 105F14 : entity_HiddenItemBlock_init : void : entity*
asm : 802E46BC, 105F3C : entity_ItemlessBlock_init : void : entity*
% <-- split -->
asm : 802E4710, 105F90 : entity_HeartBlockContent_get_previous_yaw : float : entity_data_HeartBlockContent* data, int lagTime "how many frames back"
asm : 802E4730, 105FB0 : entity_HeartBlockContent__setupGfx : void : int entityIndex, int 
asm : 802E4AEC, 10636C : entity_HeartBlockContent_setupGfx : void : int entityIndex
asm : 802E4B10, 106390 : entity_HeartBlockContent_set_initial_pos : void : entity*
asm : 802E4B60, 1063E0 : entity_HeartBlockContent__reset : void : entity*
asm : 802E4C10, 106490 : entity_HeartBlockContent_anim_idle : void : entity*, int wait "will not reappear until this is 0"
asm : 802E4E04, 106684 : entity_HeartBlockContent__anim_heal : void : entity*
asm : 802E5308, 106B88 : entity_HeartBlock_idle : void : entity*
asm : 802E5324, 106BA4 : entity_HeartBlockContent_anim_beating : void : entity*
asm : 802E540C, 106C8C : entity_HeartBlockContent_init : void : entity*
asm : 802E5428, 106CA8 : entity_HeartBlockContent_reset : void : entity*
asm : 802E545C, 106CDC : entity_HeartBlockContent_idle : void : entity*
asm : 802E548C, 106D0C : entity_HeartBlockContent_anim_heal : void : entity*
asm : 802E54A8, 106D28 : entity_HeartBlock_change_render_script : void : entity*
asm : 802E54CC, 106D4C : entity_HeartBlock_show_tutorial_message : void : entity*
asm : 802E555C, 106DDC : entity_HeartBlock_wait_for_close_tutorial : void : entity*
asm : 802E55A8, 106E28 : entity_HeartBlock_create_child_entity : void : entity*, $EntityBP
asm : 802E5648, 106EC8 : entity_HeartBlock_init : void : entity*
% <-- split -->
asm : 802E5670, 106EF0 : entity_SuperBlockContent_get_previous_yaw : float : entity_data_SuperBlockContent* data, int lagTime "how many frames back"
asm : 802E5690, 106F10 : entity_upgrade_block_hide_content : void : int entityIndex
asm : 802E56D0, 106F50 : entity_upgrade_block_idle : void : entity*
asm : 802E56EC, 106F6C : entity_upgrade_block_check_if_inactive : void : entity*
asm : 802E578C, 10700C : entity_upgrade_block_init : void : entity*
asm : 802E57E4, 107064 : entity_SuperBlock_init : void : entity*
asm : 802E5800, 107080 : entity_UltraBlock_init : void : entity*
asm : 802E581C, 10709C : entity_SuperBlock_HitEffect_attach_to_parent : void : entity*
asm : 802E586C, 1070EC : entity_SuperBlock_HitEffect_setupGfx: void : int entityIndex
asm : 802E5E50, 1076D0 : entity_SuperBlock_HitEffect_idle : void : entity*
asm : 802E5F50, 1077D0 : entity_init_SuperBlock_HitEffect1 : void : entity*
asm : 802E5F7C, 1077FC : entity_init_SuperBlock_HitEffect2 : void : entity*
% <-- split -->
asm : 802E5FB0, 107830 : entity_ScriptSpring_idle : void : entity*
asm : 802E6064, 1078E4 : entity_SimpleSpring_idle : void : entity*
asm : 802E6118, 107998 : entity_SimpleSpring_set_jump_params : void : entity*
asm : 802E6178, 1079F8 : entity_SimpleSpring_enable_player_input : void : entity*
asm : 802E6194, 107A14 : entity_ScriptSpring_init "does nothing" : void : entity*
asm : 802E619C, 107A1C : entity_SimpleSpring_init : void : entity*
% <-- split -->
asm : 802E61B0, 107A30 : entity_HiddenPanel_setupGfx : void : int entityIndex
asm : 802E6338, 107BB8 : entity_HiddenPanel_set_ispy_notification : void : entity*
asm : 802E6390, 107C10 : entity_HiddenPanel_hide : void : entity*
asm : 802E63A8, 107C28 : entity_HiddenPanel_idle : void : entity*
asm : 802E6574, 107DF4 : entity_HiddenPanel_flip_over : void : entity*
asm : 802E6B6C, 1083EC : entity_HiddenPanel_is_item_on_top "is this panel's item currently on top of it?" : bool : entity*
asm : 802E6C24, 1084A4 : entity_HiddenPanel_init : void : entity*
% <-- split -->
asm : 802E6E20, 1086A0 : entity_Chest_adjust_camera "special cases for areas 2/B/12" : void : void
asm : 802E6E90, 108710 : entity_Chest_reset_camera "special case for area B" : void : void
asm : 802E6ED8, 108758 : entity_Chest_setupGfx : void : int entityIndex
asm : 802E7034, 1088B4 : entity_Chest_check_opened : void : entity*
asm : 802E70B0, 108930 : entity_Chest_idle : void : entity*
asm : 802E71F8, 108A78 : entity_Chest_begin_opening : void : entity* 
asm : 802E7230, 108AB0 : entity_Chest_open : void : entity*
asm : 802E742C, 108CAC : entity_Chest_close : void : entity*
asm : 802E75C0, 108E40 : entity_GiantChest_hide_effect : void : entity*
asm : 802E75E4, 108E64 : entity_GiantChest_open : void : entity*
asm : 802E7AE4, 109364 : entity_GiantChest_give_equipment : void : entity*
asm : 802E7C70, 1094F0 : entity_Chest_start_bound_script : void : entity*
asm : 802E7C8C, 10950C : entity_Chest_enable_player_input : void : entity*
asm : 802E7CB8, 109538 : entity_GiantChest_await_got_item : void : entity*
asm : 802E7D28, 1095A8 : entity_Chest_clear_item_id : void : entity*
asm : 802E7D38, 1095B8 : entity_Chest_readargs : void : entity*
asm : 802E7D54, 1095D4 : entity_GiantChest_init : void : entity*
asm : 802E7D84, 109604 : entity_Chest_init : void : entity*
% <-- split -->
asm : 802E7DE0, 109660 : entity_WoodenCrate_init_fragments : void : entity*, gfx** fragmentDisplayLists, matrix4s** fragmentMatrices
asm : 802E7F40, 1097C0 : entity_WoodenCrate_init : void : entity*
asm : 802E7F6C, 1097EC : entity_WoodenCrate_reset_fragments : void : entity*
asm : 802E7FA0, 109820 : entity_WoodenCrate_update_fragments : void : entity*
asm : 802E854C, 109DCC : entity_WoodenCrate_setupGfx : void : int entityIndex
asm : 802E8858, 10A0D8 : entity_WoodenCrate_idle : void : entity*
asm : 802E88EC, 10A16C : entity_WoodenCrate_shatter : void : entity*
% <-- split -->
asm : 802E89B0, 10A230 : entity_BlueWarpPipe_check_if_active : void : entity*
asm : 802E89F8, 10A278 : entity_BlueWarpPipe_rise_up : void : entity*
asm : 802E8A58, 10A2D8 : entity_BlueWarpPipe_wait_for_player_to_get_off : void : entity*
asm : 802E8ADC, 10A35C : entity_BlueWarpPipe_idle : void : entity*
asm : 802E8BC0, 10A440 : entity_BlueWarpPipe_set_player_move_to_center : void : entity*
asm : 802E8C94, 10A514 : entity_BlueWarpPipe_wait_player_move_to_center : void : entity*
asm : 802E8CCC, 10A54C : entity_BlueWarpPipe_enter_pipe_init : void : entity*
asm : 802E8D74, 10A5F4 : entity_BlueWarpPipe_enter_pipe_update : void : entity*
asm : 802E8E10, 10A690 : entity_BlueWarpPipe_start_bound_script : void : entity*
asm : 802E8E4C, 10A6CC : entity_BlueWarpPipe_setupGfx : void : int entityIndex
asm : 802E8F94, 10A814 : entity_init_BlueWarpPipe : void : entity*
% <-- split -->
asm : 802E9050, 10A8D0 : entity_Signpost_idle : void : entity*
% <-- end of file
%}
