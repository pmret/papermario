#ifndef _ENUMS_H_
#define _ENUMS_H_

#include "ultra64.h"
#include "types.h"

enum StoryProgress {
    STORY_INTRO                                 = -128,
    STORY_CH0_WAKE_UP                           = -127,
    STORY_CH0_MET_INNKEEPER                     = -126,
    STORY_UNUSED_FFFFFF83                       = -125,
    STORY_CH0_MET_GOOMPA                        = -124,
    STORY_CH0_GATE_CRUSHED                      = -123,
    STORY_CH0_FELL_OFF_CLIFF                    = -122,
    STORY_CH0_GOOMPA_JOINED_PARTY               = -121,
    STORY_CH0_LOOKING_FOR_HAMMER                = -120,
    STORY_CH0_FOUND_HAMMER                      = -119,
    STORY_CH0_DEFEATED_JR_TROOPA                = -118,
    STORY_CH0_LEFT_THE_PLAYGROUND               = -117,
    STORY_UNUSED_FFFFFF8C                       = -116,
    STORY_CH0_GOOMBARIO_JOINED_PARTY            = -115,
    STORY_CH0_SMASHED_GATE_BLOCK                = -114,
    STORY_CH0_DEFEATED_GOOMBA_BROS              = -113,
    STORY_CH0_DEFEATED_GOOMBA_KING              = -112,
    STORY_CH0_FOUND_GATEHOUSE_SWITCH            = -111,
    STORY_CH0_HIT_GATEHOUSE_SWITCH              = -110,
    STORY_CH0_OPENED_BRIDGE_TO_TOAD_TOWN        = -109,
    STORY_CH0_KAMMY_RETURNED_TO_BOWSER          = -108,
    STORY_CH0_ARRIVED_AT_TOAD_TOWN              = -107,
    STORY_CH0_MET_STAR_SPIRITS                  = -106,
    STORY_CH0_BEGAN_PEACH_MISSION               = -105,
    STORY_CH0_TWINK_GAVE_LUCKY_STAR             = -104,
    STORY_CH0_RETURNED_TO_TOAD_TOWN             = -103,
    STORY_CH1_SPOKE_WITH_MERLIN                 = -102,
    STORY_CH1_TOLD_MERLIN_ABOUT_DARK_TOADS      = -101,
    STORY_CH1_MERLIN_REVEALED_KOOPA_BROS        = -100,
    STORY_CH1_KNOCKED_SWITCH_FROM_TREE          = -99,
    STORY_CH1_MADE_FIRST_BRIDGE                 = -98,
    STORY_CH1_ARRIVED_AT_KOOPA_VILLAGE          = -97,
    STORY_CH1_PROMISED_TO_HELP_KOOPER           = -96,
    STORY_CH1_FUZZY_THIEF_LEFT_TOWN             = -95,
    STORY_CH1_FUZZY_THIEF_RAN_AWAY              = -94,
    STORY_CH1_FUZZY_THIEF_HID_IN_TREE           = -93,
    STORY_CH1_KOOPER_JOINED_PARTY               = -92,
    STORY_CH1_MADE_SECOND_BRIDGE                = -91,
    STORY_CH1_ARRIVED_AT_KOOPA_FORTRESS         = -90,
    STORY_CH1_SPOTTED_BY_KOOPA_BROS             = -89,
    STORY_CH1_KOOPA_BROS_HID_KEY                = -88,
    STORY_CH1_DEFEATED_BASEMENT_GUARD           = -87,
    STORY_CH1_LOWERED_FIRST_STAIRS              = -86,
    STORY_CH1_KOOPA_BROS_SET_TRAP               = -85,
    STORY_CH1_MARIO_ACTIVATED_TRAP              = -84,
    STORY_CH1_BOMBETTE_JOINED_PARTY             = -83,
    STORY_CH1_DEFEATED_DUNGEON_GUARDS           = -82,
    STORY_CH1_LOWERED_SECOND_STAIRS             = -81,
    STORY_CH1_RAISED_SUBMERGED_STAIRS           = -80,
    STORY_CH1_KOOPA_BROS_FIRING_BLASTERS        = -79,
    STORY_CH1_DEFEATED_KOOPA_BROS               = -78,
    STORY_CH1_STAR_SPIRIT_RESCUED               = -77,
    STORY_CH1_BEGAN_PEACH_MISSION               = -76,
    STORY_CH1_STAR_SPRIT_DEPARTED               = -75,
    STORY_CH1_DEFEATED_JR_TROOPA                = -74,
    STORY_CH1_RETURNED_TO_TOAD_TOWN             = -73,
    STORY_CH2_ARRIVED_AT_MT_RUGGED              = -72,
    STORY_CH2_SPOKE_WITH_PARAKARRY              = -71,
    STORY_CH2_PARAKARRY_JOINED_PARTY            = -70,
    STORY_CH2_ARRIVED_AT_DRY_DRY_DESERT         = -69,
    STORY_CH2_ARRIVED_AT_DRY_DRY_OUTPOST        = -68,
    STORY_CH2_SHADY_MOUSE_LEFT_SHOP             = -67,
    STORY_CH2_SPOKE_WITH_SHEEK                  = -66,
    STORY_CH2_SHADY_MOUSE_ENTERED_SHOP          = -65,
    STORY_CH2_BOUGHT_SECRET_ITEMS               = -64,
    STORY_CH2_GOT_PULSE_STONE                   = -63,
    STORY_CH2_UNCOVERED_DRY_DRY_RUINS           = -62,
    STORY_CH2_DRAINED_FIRST_SAND_ROOM           = -61,
    STORY_CH2_DRAINED_SECOND_SAND_ROOM          = -60,
    STORY_CH2_GOT_SUPER_HAMMER                  = -59,
    STORY_CH2_DRAINED_THIRD_SAND_ROOM           = -58,
    STORY_CH2_SOLVED_ARTIFACT_PUZZLE            = -57,
    STORY_CH2_DEFEATED_TUTANKOOPA               = -56,
    STORY_CH2_STAR_SPIRIT_RESCUED               = -55,
    STORY_CH2_BEGAN_PEACH_MISSION               = -54,
    STORY_CH2_STAR_SPRIT_DEPARTED               = -53,
    STORY_UNUSED_FFFFFFCC                       = -52,
    STORY_CH3_SAW_BOO_ENTER_FOREST              = -51,
    STORY_CH3_INVITED_TO_BOOS_MANSION           = -50,
    STORY_CH3_ALLOWED_INTO_FOREVER_FOREST       = -49,
    STORY_CH3_ARRIVED_AT_BOOS_MANSION           = -48,
    STORY_CH3_OPENED_BOOS_MANSION_GATE          = -47,
    STORY_CH3_ENTERED_BOOS_MANSION              = -46,
    STORY_CH3_TRIGGERED_DOOR_JUMP_SCARE         = -45,
    STORY_CH3_GOT_RECORD                        = -44,
    STORY_CH3_PLAYED_THE_RECORD                 = -43,
    STORY_CH3_GOT_WEIGHT                        = -42,
    STORY_CH3_WEIGHED_DOWN_CHANDELIER           = -41,
    STORY_CH3_GOT_SUPER_BOOTS                   = -40,
    STORY_CH3_HIT_HUGE_BLUE_SWITCH              = -39,
    STORY_CH3_GOT_BOO_PORTRAIT                  = -38,
    STORY_CH3_RESTORED_BOO_PORTRAIT             = -37,
    STORY_CH3_BOW_JOINED_PARTY                  = -36,
    STORY_CH3_UNLOCKED_GUSTY_GULCH              = -35,
    STORY_CH3_ARRIVED_AT_GHOST_TOWN             = -34,
    STORY_CH3_SAW_TUBBA_EAT_BOO                 = -33,
    STORY_CH3_ARRIVED_AT_TUBBAS_MANOR           = -32,
    STORY_UNUSED_FFFFFFE1                       = -31,
    STORY_CH3_TUBBA_BEGAN_NAPPING               = -30,
    STORY_CH3_TUBBA_WOKE_UP                     = -29,
    STORY_CH3_TUBBA_SMASHED_THE_BRIDGES         = -28,
    STORY_CH3_TUBBA_CHASED_MARIO_IN_HALL        = -27,
    STORY_CH3_TUBBA_CHASED_MARIO_IN_FOYER       = -26,
    STORY_CH3_ESCAPED_TUBBAS_MANOR              = -25,
    STORY_CH3_UNLOCKED_WINDY_MILL               = -24,
    STORY_CH3_WENT_DOWN_THE_WELL                = -23,
    STORY_CH3_HEART_FLED_FIRST_TUNNEL           = -22,
    STORY_UNUSED_FFFFFFEB                       = -21,
    STORY_UNUSED_FFFFFFEC                       = -20,
    STORY_CH3_HEART_FLED_SECOND_TUNNEL          = -19,
    STORY_CH3_HEART_ESCAPED_WELL                = -18,
    STORY_CH3_HEART_ESCAPED_WINDY_MILL          = -17,
    STORY_CH3_DEFEATED_TUBBA_BLUBBA             = -16,
    STORY_CH3_STAR_SPIRIT_RESCUED               = -15,
    STORY_CH3_BEGAN_PEACH_MISSION               = -14,
    STORY_CH3_STAR_SPRIT_DEPARTED               = -13,
    STORY_CH4_FRYING_PAN_STOLEN                 = -12,
    STORY_CH4_MET_WITH_TWINK                    = -11,
    STORY_CH4_FOUND_HIDDEN_DOOR                 = -10,
    STORY_CH4_ENTERED_THE_TOY_BOX               = -9,
    STORY_CH4_GOT_STOREROOM_KEY                 = -8,
    STORY_CH4_RETURNED_STOREROOM_KEY            = -7,
    STORY_CH4_GOT_TOY_TRAIN                     = -6,
    STORY_CH4_RETURNED_TOY_TRAIN                = -5,
    STORY_CH4_GOT_FRYING_PAN                    = -4,
    STORY_CH4_GOT_TAYCE_TS_CAKE                 = -3,
    STORY_CH4_GAVE_CAKE_TO_GOURMET_GUY          = -2,
    STORY_CH4_PULLED_SWITCH_SWITCH              = -1,
    STORY_CH4_SOLVED_COLOR_PUZZLE               = 0,
    STORY_CH4_DEFEATED_LANTERN_GHOST            = 1,
    STORY_CH4_WATT_JOINED_PARTY                 = 2,
    STORY_CH4_OPENED_GENERAL_GUY_ROOM           = 3,
    STORY_CH4_DEFEATED_GENERAL_GUY              = 4,
    STORY_CH4_STAR_SPIRIT_RESCUED               = 5,
    STORY_CH4_BEGAN_PEACH_MISSION               = 6,
    STORY_CH4_STAR_SPRIT_DEPARTED               = 7,
    STORY_CH5_WHALE_MOUTH_OPEN                  = 8,
    STORY_CH5_ENTERED_WHALE                     = 9,
    STORY_CH5_DEFEATED_FUZZIPEDE                = 10,
    STORY_CH5_REACHED_LAVA_LAVA_ISLAND          = 11,
    STORY_CH5_KOLORADO_ESCAPED_FUZZIES          = 12,
    STORY_CH5_KOLORADO_ESCAPED_SPEAR_GUYS       = 13,
    STORY_CH5_YOSHI_CHILDREN_ARE_MISSING        = 14,
    STORY_CH5_SUSHIE_JOINED_PARTY               = 15,
    STORY_CH5_ALL_YOSHI_CHILDREN_RESCUED        = 16,
    STORY_CH5_GOT_JADE_RAVEN                    = 17,
    STORY_CH5_MOVED_RAVEN_STATUE                = 18,
    STORY_CH5_DEFEATED_PIRANHAS_MINIBOSS        = 19,
    STORY_CH5_REACHED_RAFAELS_TREE              = 20,
    STORY_CH5_RAFAEL_LEFT_NEST                  = 21,
    STORY_CH5_RAFAEL_MOVED_ROOT                 = 22,
    STORY_CH5_RAFAEL_WAITING_FOR_MARIO          = 23,
    STORY_CH5_ZIP_LINE_READY                    = 24,
    STORY_CH5_ENTERED_MT_LAVA_LAVA              = 25,
    STORY_CH5_KOLORADO_FELL_IN_LAVA             = 26,
    STORY_CH5_LAVA_STREAM_BLOCKED               = 27,
    STORY_CH5_GOT_ULTRA_HAMMER                  = 28,
    STORY_CH5_SMASHED_ULTRA_BLOCK               = 29,
    STORY_CH5_KOLORADO_FELL_IN_PIT              = 30,
    STORY_CH5_KOLORADO_AT_DEAD_END              = 31,
    STORY_CH5_HIDDEN_PASSAGE_OPEN               = 32,
    STORY_CH5_KOLORADO_RAN_AHEAD                = 33,
    STORY_CH5_KOLORADO_IN_TREASURE_ROOM         = 34,
    STORY_CH5_DEFEATED_LAVA_PIRANHA             = 35,
    STORY_CH5_MT_LAVA_LAVA_ERUPTING             = 36,
    STORY_CH5_OPENED_ESCAPE_ROUTE               = 37,
    STORY_CH5_BEGAN_PEACH_MISSION               = 38,
    STORY_CH5_STAR_SPRIT_DEPARTED               = 39,
    STORY_CH5_TRADED_VASE_FOR_SEED              = 40,
    STORY_CH5_RETURNED_TO_TOAD_TOWN             = 41,
    STORY_CH6_FLOWER_GATE_OPEN                  = 42,
    STORY_CH6_ARRIVED_AT_FLOWER_FIELDS          = 43,
    STORY_CH6_ASKED_TO_DEFEAT_MONTY_MOLES       = 44,
    STORY_CH6_GOT_MAGICAL_BEAN                  = 45,
    STORY_CH6_GOT_FERTILE_SOIL                  = 46,
    STORY_CH6_GOT_CRYSTAL_BERRY                 = 47,
    STORY_CH6_GOT_WATER_STONE                   = 48,
    STORY_CH6_FILLED_SPRING_WITH_WATER          = 49,
    STORY_CH6_SPOKE_WITH_THE_SUN                = 50,
    STORY_CH6_LAKILESTER_JOINED_PARTY           = 51,
    STORY_CH6_DEFEATED_PUFF_PUFF_GUARDS         = 52,
    STORY_CH6_DESTROYED_PUFF_PUFF_MACHINE       = 53,
    STORY_CH6_WISTERWOOD_GAVE_HINT              = 54,
    STORY_CH6_GREW_MAGIC_BEANSTALK              = 55,
    STORY_CH6_DEFEATED_HUFF_N_PUFF              = 56,
    STORY_CH6_STAR_SPIRIT_RESCUED               = 57,
    STORY_CH6_BEGAN_PEACH_MISSION               = 58,
    STORY_CH6_STAR_SPRIT_DEPARTED               = 59,
    STORY_CH6_RETURNED_TO_TOAD_TOWN             = 60,
    STORY_CH7_INVITED_TO_STARBORN_VALLEY        = 61,
    STORY_CH7_ARRIVED_AT_SHIVER_CITY            = 62,
    STORY_CH7_MAYOR_MURDER_MYSTERY              = 63,
    STORY_CH7_SHATTERED_FROZEN_POND             = 64,
    STORY_CH7_SPOKE_WITH_HERRINGWAY             = 65,
    STORY_CH7_HERRINGWAY_AT_MAYORS_HOUSE        = 66,
    STORY_CH7_MAYOR_MURDER_SOLVED               = 67,
    STORY_CH7_DEFEATED_JR_TROOPA                = 68,
    STORY_CH7_DEFEATED_MONSTAR                  = 69,
    STORY_CH7_ARRIVED_AT_STARBORN_VALLEY        = 70,
    STORY_CH7_MERLE_APOLOGIZED                  = 71,
    STORY_CH7_GOT_SNOWMAN_SCARF                 = 72,
    STORY_CH7_GOT_SNOWMAN_BUCKET                = 73,
    STORY_CH7_UNLOCKED_SHIVER_MOUNTAIN          = 74,
    STORY_CH7_DEFEATED_FIRST_DUPLIGHOST         = 75,
    STORY_CH7_GOT_STAR_STONE                    = 76,
    STORY_CH7_RAISED_FROZEN_STAIRS              = 77,
    STORY_CH7_ARRIVED_AT_CRYSTAL_PALACE         = 78,
    STORY_CH7_DEFEATED_MIRROR_DUPLIGHOSTS       = 79,
    STORY_CH7_DEFEATED_BOMBETTE_DUPLIGHOSTS     = 80,
    STORY_CH7_DEFEATED_CLUBBAS                  = 81,
    STORY_CH7_DEFEATED_KOOPER_DUPLIGHOSTS       = 82,
    STORY_CH7_EXTENDED_PALACE_BRIDGE            = 83,
    STORY_CH7_FOUND_HIDDEN_ROOM_UNDER_STATUE    = 84,
    STORY_CH7_SOLVED_ALBINO_DINO_PUZZLE         = 85,
    STORY_CH7_DEFEATED_CRYSTAL_KING             = 86,
    STORY_CH7_STAR_SPIRIT_RESCUED               = 87,
    STORY_CH7_BEGAN_PEACH_MISSION               = 88,
    STORY_CH7_STAR_SPRIT_DEPARTED               = 89,
    STORY_CH8_OPENED_PATH_TO_STAR_WAY           = 90,
    STORY_CH8_REACHED_STAR_HAVEN                = 91,
    STORY_CH8_STAR_SHIP_ACTIVATED               = 92,
    STORY_UNUSED_0000005D                       = 93,
    STORY_CH8_REACHED_BOWSERS_CASTLE            = 94,
    STORY_CH8_REACHED_PEACHS_CASTLE             = 95,
    STORY_EPILOGUE                              = 96,
    STORY_61                                    = 97,
};

enum EncounterTriggers {
    ENCOUNTER_TRIGGER_NONE                            = 1,
    ENCOUNTER_TRIGGER_JUMP                            = 2,
    ENCOUNTER_TRIGGER_SPIN                            = 3,
    ENCOUNTER_TRIGGER_HAMMER                          = 4,
    ENCOUNTER_TRIGGER_CONVERSATION                    = 5,
    ENCOUNTER_TRIGGER_PARTNER                         = 6,
};

enum SoundOutputMode {
    SOUND_OUT_MONO                                    = 0,
    SOUND_OUT_STEREO                                  = 1,
};

enum SongIDs {
    SONG_TOAD_TOWN                  = 0x00000000,
    //SONG_GOOMBA_VILLAGE_COPY      = 0x00000001,
    SONG_NORMAL_BATTLE              = 0x00000002,
    SONG_SPECIAL_BATTLE             = 0x00000003,
    SONG_JR_TROOPA_BATTLE           = 0x00000004,
    SONG_FINAL_BOWSER_BATTLE        = 0x00000005,
    //SONG_GOOMBA_VILLAGE_COPY      = 0x00000006,
    SONG_GOOMBA_KING_BATTLE         = 0x00000007,
    SONG_KOOPA_BROS_BATTLE          = 0x00000008,
    SONG_FAKE_BOWSER_BATTLE         = 0x00000009,
    SONG_TUTANKOOPA_BATTLE          = 0x0000000A,
    SONG_TUBBA_BLUBBA_BATTLE        = 0x0000000B,
    SONG_GENERAL_GUY_BATTLE         = 0x0000000C,
    SONG_LAVA_PIRANHA_BATTLE        = 0x0000000D,
    SONG_HUFF_N_PUFF_BATTLE         = 0x0000000E,
    SONG_CRYSTAL_KING_BATTLE        = 0x0000000F,
    SONG_GOOMBA_VILLAGE             = 0x00000010,
    SONG_PLEASANT_PATH              = 0x00000011,
    SONG_FUZZY_ATTACK               = 0x00000012,
    SONG_KOOPA_VILLAGE              = 0x00000013,
    SONG_KOOPA_FORTRESS             = 0x00000014,
    SONG_DRY_DRY_OUTPOST            = 0x00000015,
    SONG_MT_RUGGED                  = 0x00000016,
    SONG_DRY_DRY_DESERT             = 0x00000017,
    SONG_DRY_DRY_RUINS              = 0x00000018,
    SONG_RUINS_BASEMENT             = 0x00000019,
    SONG_FOREVER_FOREST             = 0x0000001A,
    SONG_BOOS_MANSION               = 0x0000001B,
    SONG_CHEERFUL_BOOS_MANSION      = 0x0000001C,
    SONG_GUSTY_GULCH                = 0x0000001D,
    SONG_TUBBAS_MANOR               = 0x0000001E,
    SONG_TUBBA_ESCAPE               = 0x0000001F,
    SONG_SHY_GUY_TOYBOX             = 0x00000020,
    SONG_TOYBOX_TRAIN               = 0x00000021,
    SONG_CREEPY_TOYBOX              = 0x00000022,
    //SONG_GOOMBA_VILLAGE_COPY      = 0x00000023,
    SONG_JADE_JUNGLE                = 0x00000024,
    SONG_DEEP_JUNGLE                = 0x00000025,
    SONG_YOSHIS_VILLAGE             = 0x00000026,
    SONG_YOSHIS_PANIC               = 0x00000027,
    SONG_RAPHAEL_RAVEN              = 0x00000028,
    SONG_MT_LAVALAVA                = 0x00000029,
    SONG_VOLCANO_ESCAPE             = 0x0000002A,
    SONG_STAR_WAY_OPENS             = 0x0000002B,
    SONG_MASTER_BATTLE              = 0x0000002C,
    SONG_RADIO_ISLAND_SOUNDS        = 0x0000002D,
    SONG_RADIO_HOT_HITS             = 0x0000002E,
    SONG_RADIO_GOLDEN_OLDIES        = 0x0000002F,
    SONG_FLOWER_FIELDS_CLOUDY       = 0x00000030,
    SONG_FLOWER_FIELDS_SUNNY        = 0x00000031,
    SONG_CLOUDY_CLIMB               = 0x00000032,
    SONG_PUFF_PUFF_MACHINE          = 0x00000033,
    SONG_SUN_TOWER_CLOUDY           = 0x00000034,
    SONG_SUN_TOWER_SUNNY            = 0x00000035,
    //SONG_GOOMBA_VILLAGE_COPY      = 0x00000036,
    SONG_CRYSTAL_PALACE             = 0x00000037,
    SONG_SHIVER_CITY                = 0x00000038,
    SONG_PENGUIN_MYSTERY            = 0x00000039,
    SONG_SHIVER_SNOWFIELD           = 0x0000003A,
    SONG_SHIVER_MOUNTAIN            = 0x0000003B,
    SONG_STARBORN_VALLEY            = 0x0000003C,
    SONG_MERLAR_THEME               = 0x0000003D,
    SONG_MAIL_CALL                  = 0x0000003E,
    SONG_PEACHS_CASTLE_PARTY        = 0x0000003F,
    SONG_CHAPTER_END                = 0x00000040,
    SONG_CHAPTER_START              = 0x00000041,
    SONG_ITEM_UPGRADE               = 0x00000042,
    //SONG_GOOMBA_VILLAGE_COPY      = 0x00000043,
    SONG_PHONOGRAPH_MUSIC           = 0x00000044,
    SONG_TUTANKOOPA_THEME           = 0x00000045,
    SONG_KAMMY_KOOPA_THEME          = 0x00000046,
    SONG_JR_TROOPA_THEME            = 0x00000047,
    SONG_BULLET_BILL_ASSAULT        = 0x00000048,
    SONG_MONTY_MOLE_ASSAULT         = 0x00000049,
    SONG_SHY_GUY_INVASION           = 0x0000004A,
    SONG_TOAD_TOWN_TUNNELS          = 0x0000004B,
    SONG_WHALE_THEME                = 0x0000004C,
    SONG_FOREVER_FOREST_WARNING     = 0x0000004D,
    SONG_YOSHI_KIDS_FOUND           = 0x0000004E,
    SONG_UNUSED_FANFARE             = 0x0000004F,
    SONG_GOOMBA_KING_THEME          = 0x00000050,
    SONG_KOOPA_BROS_INTERLUDE       = 0x00000051,
    SONG_KOOPA_BROS_THEME           = 0x00000052,
    SONG_TUTANKOOPA_WARNING         = 0x00000053,
    SONG_TUTANKOOPA_REVEALED        = 0x00000054,
    SONG_TUBBA_BLUBBA_THEME         = 0x00000055,
    SONG_GENERAL_GUY_THEME          = 0x00000056,
    SONG_LAVA_PIRANHA_THEME         = 0x00000057,
    SONG_HUFF_N_PUFF_THEME          = 0x00000058,
    SONG_CRYSTAL_KING_THEME         = 0x00000059,
    SONG_BLOOPER_THEME              = 0x0000005A,
    SONG_MINIBOSS_BATTLE            = 0x0000005B,
    SONG_MONSTAR_THEME              = 0x0000005C,
    SONG_CLUB64                     = 0x0000005D,
    SONG_UNUSED_OPENING             = 0x0000005E,
    SONG_BOWSERS_CASTLE_FALLS       = 0x0000005F,
    SONG_STAR_HAVEN                 = 0x00000060,
    SONG_SHOOTING_STAR_SUMMIT       = 0x00000061,
    SONG_STARSHIP_THEME             = 0x00000062,
    SONG_STAR_SANCTUARY             = 0x00000063,
    SONG_BOWSERS_CASTLE             = 0x00000064,
    SONG_BOWSERS_CASTLE_CAVES       = 0x00000065,
    SONG_BOWSER_THEME               = 0x00000066,
    SONG_BOWSER_BATTLE              = 0x00000067,
    SONG_PEACH_WISHES               = 0x00000068,
    SONG_FILE_SELECT                = 0x00000069,
    SONG_MAIN_THEME                 = 0x0000006A,
    SONG_BOWSER_ATTACKS             = 0x0000006B,
    SONG_MARIO_FALLS                = 0x0000006C,
    SONG_PEACH_APPEARS              = 0x0000006D,
    SONG_THE_END                    = 0x0000006E,
    SONG_RECOVERED_STAR_ROD         = 0x0000006F,
    SONG_TWINK_THEME                = 0x00000070,
    SONG_STIRRING_CAKE              = 0x00000071,
    SONG_GOURMET_GUY_FREAKOUT       = 0x00000072,
    SONG_PRISONER_PEACH_THEME       = 0x00000073,
    SONG_PEACH_MISSION              = 0x00000074,
    SONG_PEACH_SNEAKING             = 0x00000075,
    SONG_PEACH_CAUGHT               = 0x00000076,
    SONG_PEACH_QUIZ_INTRO           = 0x00000077,
    SONG_STAR_SPIRIT_THEME          = 0x00000078,
    SONG_PENGUIN_WHODUNIT           = 0x00000079,
    SONG_PENGUIN_WAKES_UP           = 0x0000007A,
    SONG_MAGIC_BEANSTALK            = 0x0000007B,
    SONG_MERLEE_SPELL               = 0x0000007C,
    SONG_LAKILESTER_THEME           = 0x0000007D,
    SONG_GOOMBA_BROS_RETREAT        = 0x0000007E,
    SONG_SUNSHINE_RETURNS           = 0x0000007F,
    SONG_RIDING_THE_RAILS           = 0x00000080,
    SONG_RIDING_THE_WHALE           = 0x00000081,
    SONG_NEW_PARTNER                = 0x00000082,
    SONG_DRY_DRY_RUINS_APPEAR       = 0x00000083,
    SONG_CANDY_CANES                = 0x00000084,
    SONG_PLAYROOM                   = 0x00000085,
    SONG_MOUSTAFA_THEME             = 0x00000086,
    SONG_GAME_OVER                  = 0x00000087,
    SONG_TAKING_REST                = 0x00000088,
    SONG_FLOWER_NPC_THEME           = 0x00000089,
    SONG_FLOWER_GATE_APPEARS        = 0x0000008A,
    SONG_BATTLE_END                 = 0x0000008B,
    SONG_POP_DIVA_SONG              = 0x0000008C,
    SONG_BOO_MINIGAME               = 0x0000008D,
    SONG_LEVEL_UP                   = 0x0000008E,
    //SONG_GOOMBA_VILLAGE_COPY      = 0x0000008F,
    SONG_PARADE_DAY                 = 0x00000090,
    SONG_PARADE_NIGHT               = 0x00000091,
    //SONG_GOOMBA_VILLAGE_COPY      = 0x00000092,
    //SONG_GOOMBA_VILLAGE_COPY      = 0x00000093,
    SONG_MARIO_BROS_HOUSE           = 0x00000094,
    SONG_INTRO_STORY                = 0x00000095,
    SONG_NEW_PARTNER_JP             = 0x00000096,
};

enum Abilities {
    ABILITY_DODGE_MASTER            = 0x00000000,
    ABILITY_UNUSED                  = 0x00000001,
    ABILITY_SPIKE_SHIELD            = 0x00000002,
    ABILITY_FIRST_ATTACK            = 0x00000003,
    ABILITY_HP_PLUS                 = 0x00000004,
    ABILITY_DOUBLE_DIP              = 0x00000005,
    ABILITY_MYSTERY_SCROLL          = 0x00000006,
    ABILITY_FIRE_SHIELD             = 0x00000007,
    ABILITY_PRETTY_LUCKY            = 0x00000008,
    ABILITY_HP_DRAIN                = 0x00000009,
    ABILITY_ALL_OR_NOTHING          = 0x0000000A,
    ABILITY_SLOW_GO                 = 0x0000000B,
    ABILITY_FP_PLUS                 = 0x0000000C,
    ABILITY_ICE_POWER               = 0x0000000D,
    ABILITY_FEELING_FINE            = 0x0000000E,
    ABILITY_ATTACK_FX               = 0x0000000F,
    ABILITY_MONEY_MONEY             = 0x00000010,
    ABILITY_CHILL_OUT               = 0x00000011,
    ABILITY_HAPPY_HEART             = 0x00000012,
    ABILITY_ZAP_TAP                 = 0x00000013,
    ABILITY_MEGA_RUSH               = 0x00000014,
    ABILITY_BERSERKER               = 0x00000015,
    ABILITY_RIGHT_ON                = 0x00000016,
    ABILITY_RUNAWAY_PAY             = 0x00000017,
    ABILITY_FLOWER_SAVER            = 0x00000018,
    ABILITY_PAY_OFF                 = 0x00000019,
    ABILITY_QUICK_CHANGE            = 0x0000001A,
    ABILITY_DEFEND_PLUS             = 0x0000001B,
    ABILITY_POWER_PLUS              = 0x0000001C,
    ABILITY_REFUND                  = 0x0000001D,
    ABILITY_POWER_RUSH              = 0x0000001E,
    ABILITY_CRAZY_HEART             = 0x0000001F,
    ABILITY_LAST_STAND              = 0x00000020,
    ABILITY_CLOSE_CALL              = 0x00000021,
    ABILITY_P_UP_D_DOWN             = 0x00000022,
    ABILITY_LUCKY_DAY               = 0x00000023,
    ABILITY_MEGA_HP_DRAIN           = 0x00000024,
    ABILITY_P_DOWN_D_UP             = 0x00000025,
    ABILITY_FLOWER_FANATIC          = 0x00000026,
    ABILITY_SPEEDY_SPIN             = 0x00000027,
    ABILITY_SPIN_ATTACK             = 0x00000028,
    ABILITY_I_SPY                   = 0x00000029,
    ABILITY_BUMP_ATTACK             = 0x0000002A,
    ABILITY_HEART_FINDER            = 0x0000002B,
    ABILITY_FLOWER_FINDER           = 0x0000002C,
    ABILITY_DIZZY_ATTACK            = 0x0000002D,
    ABILITY_FINAL_GOOMPA            = 0x0000002E,
    ABILITY_FINAL_BOMBOMB           = 0x0000002F,
    ABILITY_DEEP_FOCUS              = 0x00000030,
    ABILITY_SUPER_FOCUS             = 0x00000031,
    ABILITY_KAIDEN                  = 0x00000032,
    ABILITY_DAMAGE_DODGE            = 0x00000033,
    ABILITY_HAPPY_FLOWER            = 0x00000034,
    ABILITY_GROUP_FOCUS             = 0x00000035,
    ABILITY_PEEKABOO                = 0x00000036,
    ABILITY_HEALTHY_HEALTHY         = 0x00000037,
};

enum Emotes {
    EMOTE_EXCLAMATION        = 0,
    EMOTE_SHOCK              = 1,
    EMOTE_QUESTION           = 2,
    EMOTE_FRUSTRATION        = 3,
    EMOTE_ELLIPSIS           = 4,
    EMOTE_INVALID            = 5,
};

enum Easings {
    EASING_LINEAR                   = 0,
    EASING_QUADRATIC_IN             = 1,
    EASING_CUBIC_IN                 = 2,
    EASING_QUARTIC_IN               = 3,
    EASING_QUADRATIC_OUT            = 4,
    EASING_CUBIC_OUT                = 5,
    EASING_QUARTIC_OUT              = 6,
    EASING_COS_SLOW_OVERSHOOT       = 7,
    EASING_COS_FAST_OVERSHOOT       = 8,
    EASING_COS_BOUNCE               = 9,
    EASING_COS_IN_OUT               = 10,
    EASING_SIN_OUT                  = 11,
    EASING_COS_IN                   = 12,
};

enum SoundIDs {
    SOUND_0                         = 0x00000000,
    SOUND_MENU_BADGE_EQUIP          = 0x00000005,
    SOUND_MENU_BADGE_UNEQUIP        = 0x00000006,
    SOUND_MENU_START_TUTORIAL       = 0x00000009,
    SOUND_D                         = 0x0000000D,
    SOUND_E                         = 0x0000000E,
    SOUND_43                        = 0x00000043,
    SOUND_JR_TROOPA_SPLASH          = 0x00000045,
    SOUND_JR_TROOPA_SWIM            = 0x00000046,
    SOUND_BOO_SPOOK                 = 0x00000047,
    SOUND_52                        = 0x00000052,
    SOUND_A2                        = 0x000000A2,
    SOUND_B4                        = 0x000000B4,
    SOUND_BOO_VANISH                = 0x000000C1,
    SOUND_BOO_APPEAR                = 0x000000C3,
    SOUND_MENU_OPEN                 = 0x000000C5,
    SOUND_MENU_CLOSE                = 0x000000C6,
    SOUND_MENU_CHANGE_SELECTION     = 0x000000C7,
    SOUND_MENU_CHANGE_TAB           = 0x000000C8,
    SOUND_MENU_NEXT                 = 0x000000C9,
    SOUND_MENU_BACK                 = 0x000000CA,
    SOUND_CC                        = 0x000000CC,
    SOUND_CD                        = 0x000000CD,
    SOUND_CE                        = 0x000000CE,
    SOUND_D4                        = 0x000000D4,
    SOUND_D5                        = 0x000000D5,
    SOUND_D6                        = 0x000000D6,
    SOUND_DC                        = 0x000000DC,
    SOUND_HIT_PLAYER_NORMAL         = 0x000000E1,
    SOUND_HIT_PLAYER_FIRE           = 0x000000E2,
    SOUND_HIT_PLAYER_ICE            = 0x000000E3,
    SOUND_FROZEN_SHATTER            = 0x000000E7,
    SOUND_HIT_NORMAL                = 0x000000E9,
    SOUND_HIT_FIRE                  = 0x000000EA,
    SOUND_HIT_ICE                   = 0x000000EB,
    SOUND_F1                        = 0x000000F1,
    SOUND_108                       = 0x00000108,
    SOUND_IMMUNE                    = 0x0000010C,
    SOUND_HIT_BONES                 = 0x0000010D,
    SOUND_STEP1                     = 0x00000141,
    SOUND_STEP2                     = 0x00000142,
    SOUND_TORNADO_JUMP              = 0x00000147,
    SOUND_SOFT_LAND                 = 0x00000148,
    SOUND_LAND                      = 0x0000014B,
    SOUND_HIT_BLOCK                 = 0x0000014E,
    SOUND_SEARCH_BUSH               = 0x00000153,
    SOUND_158                       = 0x00000158,
    SOUND_162                       = 0x00000162,
    SOUND_ENTER_PIPE                = 0x00000163,
    SOUND_SMASH_GOOMNUT_TREE        = 0x00000165,
    SOUND_167                       = 0x00000167,
    SOUND_172                       = 0x00000172,
    SOUND_17B                       = 0x0000017B,
    SOUND_194                       = 0x00000194,
    SOUND_1A5                       = 0x000001A5,
    SOUND_1A6                       = 0x000001A6,
    SOUND_1A7                       = 0x000001A7,
    SOUND_BASIC_DOOR_OPEN           = 0x000001C1,
    SOUND_BASIC_DOOR_CLOSE          = 0x000001C2,
    SOUND_METAL_DOOR_OPEN           = 0x000001C3,
    SOUND_METAL_DOOR_CLOSE          = 0x000001C4,
    SOUND_LARGE_DOOR_OPEN           = 0x000001C5,
    SOUND_LARGE_DOOR_CLOSE          = 0x000001C6,
    SOUND_CREAKY_DOOR_OPEN          = 0x000001C7,
    SOUND_CREAKY_DOOR_CLOSE         = 0x000001C8,
    SOUND_METAL_GATE_OPEN           = 0x000001C9,
    SOUND_METAL_GATE_CLOSE          = 0x000001CA,
    SOUND_1CB                       = 0x000001CB,
    SOUND_1CC                       = 0x000001CC,
    SOUND_211                       = 0x00000211,
    SOUND_213                       = 0x00000213,
    SOUND_214                       = 0x00000214,
    SOUND_215                       = 0x00000215,
    SOUND_21C                       = 0x0000021C,
    SOUND_MENU_ERROR                = 0x0000021D,
    SOUND_231                       = 0x00000231,
    SOUND_246                       = 0x00000246,
    SOUND_259                       = 0x00000259,
    SOUND_25A                       = 0x0000025A,
    SOUND_25C                       = 0x0000025C,
    SOUND_25D                       = 0x0000025D,
    SOUND_262                       = 0x00000262,
    SOUND_282                       = 0x00000282,
    SOUND_283                       = 0x00000283,
    SOUND_BOW_SPOOK                 = 0x00000291,
    SOUND_295                       = 0x00000295,
    SOUND_299                       = 0x00000299,
    SOUND_UNUSED_2C1                = 0x000002C1,
    SOUND_SMOKE_BURST               = 0x000002CD,
    SOUND_DAYZEE_SONG               = 0x000002D7,
    SOUND_POWER_UP                  = 0x000002D8,
    SOUND_2F1                       = 0x000002F1,
    SOUND_2F6                       = 0x000002F6,
    SOUND_2F7                       = 0x000002F7,
    SOUND_CLOSE_SHELL               = 0x000002FF,
    SOUND_SHY_GUY_SCREAMS1          = 0x0000030C,
    SOUND_SHY_GUY_SCREAMS2          = 0x0000030D,
    SOUND_SHY_GUY_SCREAMS3          = 0x0000030E,
    SOUND_TOY_TANK_MOVE1            = 0x0000030F,
    SOUND_TOY_TANK_MOVE2            = 0x00000310,
    SOUND_315                       = 0x00000315,
    SOUND_MOLE_SURFACE              = 0x00000321,
    SOUND_MOLE_DIG                  = 0x00000322,
    SOUND_MOLE_POP                  = 0x00000323,
    SOUND_32E                       = 0x0000032E,
    SOUND_359                       = 0x00000359,
    SOUND_361                       = 0x00000361,
    SOUND_362                       = 0x00000362,
    SOUND_363                       = 0x00000363,
    SOUND_364                       = 0x00000364,
    SOUND_365                       = 0x00000365,
    SOUND_366                       = 0x00000366,
    SOUND_367                       = 0x00000367,
    SOUND_368                       = 0x00000368,
    SOUND_369                       = 0x00000369,
    SOUND_372                       = 0x00000372,
    SOUND_375                       = 0x00000375,
    SOUND_376                       = 0x00000376,
    SOUND_377                       = 0x00000377,
    SOUND_379                       = 0x00000379,
    SOUND_HIT_PLAYER_SHOCK          = 0x0000037A,
    SOUND_HIT_SHOCK                 = 0x0000037B,
    SOUND_GENERAL_WHISTLE           = 0x00000395,
    SOUND_OPEN_SHELL                = 0x000003D4,
    SOUND_JUMP_3E2                  = 0x000003E2,
    SOUND_MISS_JUMP                 = 0x000003E3,
    SOUND_DEATH                     = 0x000003E5,
    SOUND_BIG_POWER_UP              = 0x000003E6,
    SOUND_MOLE_THROW                = 0x000003E8,
    SOUND_3F3                       = 0x000003F3,
    SOUND_THROW                     = 0x000003FA,
    SOUND_749                       = 0x00000749,
    SOUND_759                       = 0x00000759,
    SOUND_2003                      = 0x00002003,
    SOUND_2009                      = 0x00002009,
    SOUND_200D                      = 0x0000200D,
    SOUND_BOW_VANISH                = 0x0000200E,
    SOUND_BOW_APPEAR                = 0x0000200F,
    SOUND_2010                      = 0x00002010,
    SOUND_WATT_REPEL_DARKNESS       = 0x00002011,
    SOUND_WATT_RESUME_DARKNESS      = 0x00002012,
    SOUND_CANNON1                   = 0x00002016,
    SOUND_CANNON2                   = 0x00002017,
    SOUND_CANNON3                   = 0x00002018,
    SOUND_202C                      = 0x0000202C,
    SOUND_202D                      = 0x0000202D,
    SOUND_202E                      = 0x0000202E,
    SOUND_202F                      = 0x0000202F,
    SOUND_2030                      = 0x00002030,
    SOUND_INFLICT_SLEEP             = 0x00002031,
    SOUND_INFLICT_STATUS            = 0x00002032, //< Stop, poison, paralyze
    SOUND_2038                      = 0x00002038,
    SOUND_2039                      = 0x00002039,
    SOUND_205B                      = 0x0000205B,
    SOUND_2072                      = 0x00002072,
    SOUND_2073                      = 0x00002073,
    SOUND_BOMB_BLAST                = 0x00002076,
    SOUND_JUMP_2081                 = 0x00002081,
    SOUND_JUMP_8BIT_MARIO           = 0x00002082,
    SOUND_208C                      = 0x0000208C,
    SOUND_208D                      = 0x0000208D,
    SOUND_208E                      = 0x0000208E,
    SOUND_208F                      = 0x0000208F,
    SOUND_2095                      = 0x00002095,
    SOUND_20A3                      = 0x000020A3,
    SOUND_20A4                      = 0x000020A4,
    SOUND_SPELL_CAST1               = 0x000020D4,
    SOUND_SPELL_CAST2               = 0x000020D5,
    SOUND_SPELL_CAST3               = 0x000020D6,
    SOUND_SPELL_CAST4               = 0x000020D7,
    SOUND_SPELL_CAST5               = 0x000020D8,
    SOUND_20F6                      = 0x000020F6,
    SOUND_2101                      = 0x00002101,
    SOUND_2102                      = 0x00002102,
    SOUND_2103                      = 0x00002103,
    SOUND_2104                      = 0x00002104,
    SOUND_2105                      = 0x00002105,
    SOUND_2106                      = 0x00002106,
    SOUND_2107                      = 0x00002107,
    SOUND_2111                      = 0x00002111,
    SOUND_2112                      = 0x00002112,
    SOUND_2113                      = 0x00002113,
    SOUND_2114                      = 0x00002114,
    SOUND_2115                      = 0x00002115,
    SOUND_2116                      = 0x00002116,
    SOUND_2117                      = 0x00002117,
    SOUND_2118                      = 0x00002118,
    SOUND_2119                      = 0x00002119,
    SOUND_211A                      = 0x0000211A,
};

enum Cams {
    CAM_DEFAULT      = 0,
    CAM_BATTLE       = 1,
    CAM_TATTLE       = 2,
    CAM_CAM3         = 3,
};

enum CamShakeModes {
    CAM_SHAKE_CONSTANT_VERTICAL     = 0,
    CAM_SHAKE_ANGULAR_HORIZONTAL    = 1,
    CAM_SHAKE_DECAYING_VERTICAL     = 2
};

// for use with func_8024E748
enum AuxCameraParams {
    AUX_CAM_PARAM_1             = 1,
    AUX_CAM_BOOM_LENGTH         = 2,
    AUX_CAM_PARAM_3             = 3,
    AUX_CAM_BOOM_PITCH          = 4,
    AUX_CAM_BOOM_YAW            = 5,
    AUX_CAM_BOOM_ZOFFSET        = 6,
    AUX_CAM_PARAM_7             = 7,
    AUX_CAM_ZOOM_PERCENT        = 8
};

#define LOOKUP_ITEM(itemID) gItemTable[itemID & ~0xF0000]
enum ItemIDs {
    ITEM_NONE                         = 0x00000000,
    ITEM_JUMP                         = 0x00000001,
    ITEM_SPIN_JUMP                    = 0x00000002,
    ITEM_TORNADO_JUMP                 = 0x00000003,
    ITEM_HAMMER                       = 0x00000004,
    ITEM_SUPER_HAMMER                 = 0x00000005,
    ITEM_ULTRA_HAMMER                 = 0x00000006,
    ITEM_LUCKY_STAR                   = 0x00000007,
    ITEM_MAP                          = 0x00000008,
    ITEM_BIG_MAP                      = 0x00000009,
    ITEM_FIRST_DEGREE_CARD            = 0x0000000A,
    ITEM_SECOND_DEGREE_CARD           = 0x0000000B,
    ITEM_THIRD_DEGREE_CARD            = 0x0000000C,
    ITEM_FOURTH_DEGREE_CARD           = 0x0000000D,
    ITEM_DIPLOMA                      = 0x0000000E,
    ITEM_ULTRA_STONE                  = 0x0000000F,
    ITEM_KOOPA_FORTRESS_KEY           = 0x00000010,
    ITEM_RUINS_KEY                    = 0x00000011,
    ITEM_PULSE_STONE                  = 0x00000012,
    ITEM_TUBBA_CASTLE_KEY             = 0x00000013,
    ITEM_CRYSTAL_PALACE_KEY           = 0x00000014,
    ITEM_LUNAR_STONE                  = 0x00000015,
    ITEM_PYRAMID_STONE                = 0x00000016,
    ITEM_DIAMOND_STONE                = 0x00000017,
    ITEM_GOLDEN_VASE                  = 0x00000018,
    ITEM_KOOPER_SHELL                 = 0x00000019,
    ITEM_BOWSER_CASTLE_KEY            = 0x0000001A,
    ITEM_FOREST_PASS                  = 0x0000001B,
    ITEM_BOO_WEIGHT                   = 0x0000001C,
    ITEM_BOO_PORTRAIT                 = 0x0000001D,
    ITEM_CRYSTAL_BERRY                = 0x0000001E,
    ITEM_MYSTICAL_KEY                 = 0x0000001F,
    ITEM_STOREROOM_KEY                = 0x00000020,
    ITEM_TOY_TRAIN                    = 0x00000021,
    ITEM_BOO_RECORD                   = 0x00000022,
    ITEM_FRYING_PAN                   = 0x00000023,
    ITEM_DICTIONARY                   = 0x00000024,
    ITEM_MYSTERY_NOTE                 = 0x00000025,
    ITEM_SUSPICIOUS_NOTE              = 0x00000026,
    ITEM_CRYSTAL_BALL                 = 0x00000027,
    ITEM_SCREWDRIVER                  = 0x00000028,
    ITEM_COOKBOOK                     = 0x00000029,
    ITEM_JADE_RAVEN                   = 0x0000002A,
    ITEM_MAGICAL_SEED1                = 0x0000002B,
    ITEM_MAGICAL_SEED2                = 0x0000002C,
    ITEM_MAGICAL_SEED3                = 0x0000002D,
    ITEM_MAGICAL_SEED4                = 0x0000002E,
    ITEM_TOAD_DOLL                    = 0x0000002F,
    ITEM_CALCULATOR                   = 0x00000030,
    ITEM_SNOWMAN_BUCKET               = 0x00000031,
    ITEM_SNOWMAN_SCARF                = 0x00000032,
    ITEM_RED_KEY                      = 0x00000033,
    ITEM_BLUE_KEY                     = 0x00000034,
    ITEM_UNUSED_LETTER01              = 0x00000035,
    ITEM_LETTER01                     = 0x00000036,
    ITEM_LETTER02                     = 0x00000037,
    ITEM_LETTER03                     = 0x00000038,
    ITEM_LETTER04                     = 0x00000039,
    ITEM_LETTER05                     = 0x0000003A,
    ITEM_LETTER06                     = 0x0000003B,
    ITEM_LETTER07                     = 0x0000003C,
    ITEM_LETTER08                     = 0x0000003D,
    ITEM_LETTER09                     = 0x0000003E,
    ITEM_UNUSED_LETTER02              = 0x0000003F,
    ITEM_LETTER10                     = 0x00000040,
    ITEM_LETTER11                     = 0x00000041,
    ITEM_UNUSED_LETTER03              = 0x00000042,
    ITEM_UNUSED_LETTER04              = 0x00000043,
    ITEM_UNUSED_LETTER05              = 0x00000044,
    ITEM_LETTER12                     = 0x00000045,
    ITEM_LETTER13                     = 0x00000046,
    ITEM_LETTER14                     = 0x00000047,
    ITEM_LETTER15                     = 0x00000048,
    ITEM_LETTER16                     = 0x00000049,
    ITEM_LETTER17                     = 0x0000004A,
    ITEM_LETTER18                     = 0x0000004B,
    ITEM_LETTER19                     = 0x0000004C,
    ITEM_UNUSED_LETTER06              = 0x0000004D,
    ITEM_LETTER20                     = 0x0000004E,
    ITEM_LETTER21                     = 0x0000004F,
    ITEM_LETTER22                     = 0x00000050,
    ITEM_LETTER23                     = 0x00000051,
    ITEM_LETTER24                     = 0x00000052,
    ITEM_ARTIFACT                     = 0x00000053,
    ITEM_LETTER25                     = 0x00000054,
    ITEM_UNUSED_LETTER07              = 0x00000055,
    ITEM_DOLLY                        = 0x00000056,
    ITEM_WATER_STONE                  = 0x00000057,
    ITEM_MAGICAL_BEAN                 = 0x00000058,
    ITEM_FERTILE_SOIL                 = 0x00000059,
    ITEM_MIRACLE_WATER                = 0x0000005A,
    ITEM_VOLCANO_VASE                 = 0x0000005B,
    ITEM_KOOT_THE_TAPE                = 0x0000005C,
    ITEM_BAKING_SUGAR                 = 0x0000005D,
    ITEM_BAKING_SALT                  = 0x0000005E,
    ITEM_BAKING_EGG                   = 0x0000005F,
    ITEM_BAKING_CREAM                 = 0x00000060,
    ITEM_BAKING_STRAWBERRY            = 0x00000061,
    ITEM_BAKING_BUTTER                = 0x00000062,
    ITEM_BAKING_CLEANSER              = 0x00000063,
    ITEM_BAKING_WATER                 = 0x00000064,
    ITEM_BAKING_FLOUR                 = 0x00000065,
    ITEM_BAKING_MILK                  = 0x00000066,
    ITEM_LYRICS                       = 0x00000067,
    ITEM_MELODY                       = 0x00000068,
    ITEM_MAILBAG                      = 0x00000069,
    ITEM_PEACH_KEY1                   = 0x0000006A,
    ITEM_ODD_KEY                      = 0x0000006B,
    ITEM_STAR_STONE                   = 0x0000006C,
    ITEM_SNEAKY_PARASOL               = 0x0000006D,
    ITEM_KOOT_KOOPA_LEGENDS           = 0x0000006E,
    ITEM_KOOT_MERLUVLEE_AUTOGRAPH     = 0x0000006F,
    ITEM_KOOT_EMPTY_WALLET            = 0x00000070,
    ITEM_KOOT_LUIGI_AUTOGRAPH         = 0x00000071,
    ITEM_KOOT_SHELL                   = 0x00000072,
    ITEM_KOOT_OLD_PHOTO               = 0x00000073,
    ITEM_KOOT_GLASSES                 = 0x00000074,
    ITEM_KOOT_ALT_PHOTO               = 0x00000075,
    ITEM_KOOT_PACKAGE                 = 0x00000076,
    ITEM_KOOT_RED_JAR                 = 0x00000077,
    ITEM_PEACH_KEY2                   = 0x00000078,
    ITEM_WAREHOUSE_KEY                = 0x00000079,
    ITEM_PRISON_KEY1                  = 0x0000007A,
    ITEM_SILVER_CREDIT                = 0x0000007B,
    ITEM_GOLD_CREDIT                  = 0x0000007C,
    ITEM_PRISON_KEY2                  = 0x0000007D,
    ITEM_PRISON_KEY3                  = 0x0000007E,
    ITEM_PRISON_KEY4                  = 0x0000007F,
    ITEM_FIRE_FLOWER                  = 0x00000080,
    ITEM_SNOWMAN_DOLL                 = 0x00000081,
    ITEM_THUNDER_RAGE                 = 0x00000082,
    ITEM_SHOOTING_STAR                = 0x00000083,
    ITEM_THUNDER_BOLT                 = 0x00000084,
    ITEM_PEBBLE                       = 0x00000085,
    ITEM_DUSTY_HAMMER                 = 0x00000086,
    ITEM_INSECTICIDE_HERB             = 0x00000087,
    ITEM_STONE_CAP                    = 0x00000088,
    ITEM_TASTY_TONIC                  = 0x00000089,
    ITEM_MUSHROOM                     = 0x0000008A,
    ITEM_VOLT_SHROOM                  = 0x0000008B,
    ITEM_SUPER_SHROOM                 = 0x0000008C,
    ITEM_DRIED_SHROOM                 = 0x0000008D,
    ITEM_ULTRA_SHROOM                 = 0x0000008E,
    ITEM_SLEEPY_SHEEP                 = 0x0000008F,
    ITEM_P_O_W_BLOCK                  = 0x00000090,
    ITEM_HUSTLE_DRINK                 = 0x00000091,
    ITEM_STOP_WATCH                   = 0x00000092,
    ITEM_WHACKAS_BUMP                 = 0x00000093,
    ITEM_APPLE                        = 0x00000094,
    ITEM_LIFE_SHROOM                  = 0x00000095,
    ITEM_MYSTERY                      = 0x00000096,
    ITEM_REPEL_GEL                    = 0x00000097,
    ITEM_FRIGHT_JAR                   = 0x00000098,
    ITEM_PLEASE_COME_BACK             = 0x00000099,
    ITEM_DIZZY_DIAL                   = 0x0000009A,
    ITEM_SUPER_SODA                   = 0x0000009B,
    ITEM_LEMON                        = 0x0000009C,
    ITEM_LIME                         = 0x0000009D,
    ITEM_BLUE_BERRY                   = 0x0000009E,
    ITEM_RED_BERRY                    = 0x0000009F,
    ITEM_YELLOW_BERRY                 = 0x000000A0,
    ITEM_BUBBLE_BERRY                 = 0x000000A1,
    ITEM_JAMMIN_JELLY                 = 0x000000A2,
    ITEM_MAPLE_SYRUP                  = 0x000000A3,
    ITEM_HONEY_SYRUP                  = 0x000000A4,
    ITEM_GOOMNUT                      = 0x000000A5,
    ITEM_KOOPA_LEAF                   = 0x000000A6,
    ITEM_DRIED_PASTA                  = 0x000000A7,
    ITEM_DRIED_FRUIT                  = 0x000000A8,
    ITEM_STRANGE_LEAF                 = 0x000000A9,
    ITEM_CAKE_MIX                     = 0x000000AA,
    ITEM_EGG                          = 0x000000AB,
    ITEM_COCONUT                      = 0x000000AC,
    ITEM_MELON                        = 0x000000AD,
    ITEM_STINKY_HERB                  = 0x000000AE,
    ITEM_ICED_POTATO                  = 0x000000AF,
    ITEM_SPICY_SOUP                   = 0x000000B0,
    ITEM_APPLE_PIE                    = 0x000000B1,
    ITEM_HONEY_ULTRA                  = 0x000000B2,
    ITEM_MAPLE_ULTRA                  = 0x000000B3,
    ITEM_JELLY_ULTRA                  = 0x000000B4,
    ITEM_KOOPASTA                     = 0x000000B5,
    ITEM_FRIED_SHROOM                 = 0x000000B6,
    ITEM_SHROOM_CAKE                  = 0x000000B7,
    ITEM_SHROOM_STEAK                 = 0x000000B8,
    ITEM_HOT_SHROOM                   = 0x000000B9,
    ITEM_SWEET_SHROOM                 = 0x000000BA,
    ITEM_YUMMY_MEAL                   = 0x000000BB,
    ITEM_HEALTHY_JUICE                = 0x000000BC,
    ITEM_BLAND_MEAL                   = 0x000000BD,
    ITEM_DELUXE_FEAST                 = 0x000000BE,
    ITEM_SPECIAL_SHAKE                = 0x000000BF,
    ITEM_BIG_COOKIE                   = 0x000000C0,
    ITEM_CAKE                         = 0x000000C1,
    ITEM_MISTAKE                      = 0x000000C2,
    ITEM_KOOPA_TEA                    = 0x000000C3,
    ITEM_HONEY_SUPER                  = 0x000000C4,
    ITEM_MAPLE_SUPER                  = 0x000000C5,
    ITEM_JELLY_SUPER                  = 0x000000C6,
    ITEM_SPAGHETTI                    = 0x000000C7,
    ITEM_EGG_MISSILE                  = 0x000000C8,
    ITEM_FRIED_EGG                    = 0x000000C9,
    ITEM_HONEY_SHROOM                 = 0x000000CA,
    ITEM_HONEY_CANDY                  = 0x000000CB,
    ITEM_ELECTRO_POP                  = 0x000000CC,
    ITEM_FIRE_POP                     = 0x000000CD,
    ITEM_LIME_CANDY                   = 0x000000CE,
    ITEM_COCO_POP                     = 0x000000CF,
    ITEM_LEMON_CANDY                  = 0x000000D0,
    ITEM_JELLY_POP                    = 0x000000D1,
    ITEM_STRANGE_CAKE                 = 0x000000D2,
    ITEM_KOOKY_COOKIE                 = 0x000000D3,
    ITEM_FROZEN_FRIES                 = 0x000000D4,
    ITEM_POTATO_SALAD                 = 0x000000D5,
    ITEM_NUTTY_CAKE                   = 0x000000D6,
    ITEM_MAPLE_SHROOM                 = 0x000000D7,
    ITEM_BOILED_EGG                   = 0x000000D8,
    ITEM_YOSHI_COOKIE                 = 0x000000D9,
    ITEM_JELLY_SHROOM1                = 0x000000DA,
    ITEM_JELLY_SHROOM2                = 0x000000DB,
    ITEM_JELLY_SHROOM3                = 0x000000DC,
    ITEM_JELLY_SHROOM4                = 0x000000DD,
    ITEM_JELLY_SHROOM5                = 0x000000DE,
    ITEM_JELLY_SHROOM6                = 0x000000DF,
    ITEM_SPIN_SMASH                   = 0x000000E0,
    ITEM_MULTIBOUNCE                  = 0x000000E1,
    ITEM_POWER_PLUS_A                 = 0x000000E2,
    ITEM_DODGE_MASTER                 = 0x000000E3,
    ITEM_POWER_BOUNCE                 = 0x000000E4,
    ITEM_SPIKE_SHIELD                 = 0x000000E5,
    ITEM_FIRST_ATTACK                 = 0x000000E6,
    ITEM_HP_PLUS_A                    = 0x000000E7,
    ITEM_QUAKE_HAMMER                 = 0x000000E8,
    ITEM_DOUBLE_DIP                   = 0x000000E9,
    ITEM_MYSTERY_SCROLL               = 0x000000EA,
    ITEM_SLEEP_STOMP                  = 0x000000EB,
    ITEM_FIRE_SHIELD                  = 0x000000EC,
    ITEM_QUICK_CHANGE                 = 0x000000ED,
    ITEM_D_DOWN_POUND                 = 0x000000EE,
    ITEM_DIZZY_STOMP                  = 0x000000EF,
    ITEM_SMASH_CHARGE0                = 0x000000F0,
    ITEM_PRETTY_LUCKY                 = 0x000000F1,
    ITEM_FEELING_FINE                 = 0x000000F2,
    ITEM_ATTACK_FX_A                  = 0x000000F3,
    ITEM_ALLOR_NOTHING                = 0x000000F4,
    ITEM_HP_DRAIN                     = 0x000000F5,
    ITEM_JUMP_CHARGE0                 = 0x000000F6,
    ITEM_SLOW_GO                      = 0x000000F7,
    ITEM_FP_PLUS_A                    = 0x000000F8,
    ITEM_MEGA_RUSH                    = 0x000000F9,
    ITEM_ICE_POWER                    = 0x000000FA,
    ITEM_DEFEND_PLUS_A                = 0x000000FB,
    ITEM_PAY_OFF                      = 0x000000FC,
    ITEM_MONEY_MONEY                  = 0x000000FD,
    ITEM_CHILL_OUT                    = 0x000000FE,
    ITEM_HAPPY_HEART_A                = 0x000000FF,
    ITEM_ZAP_TAP                      = 0x00000100,
    ITEM_BERSERKER                    = 0x00000101,
    ITEM_RIGHT_ON                     = 0x00000102,
    ITEM_RUNAWAY_PAY                  = 0x00000103,
    ITEM_REFUND                       = 0x00000104,
    ITEM_FLOWER_SAVER_A               = 0x00000105,
    ITEM_TRIPLE_DIP                   = 0x00000106,
    ITEM_HAMMER_THROW                 = 0x00000107,
    ITEM_MEGA_QUAKE                   = 0x00000108,
    ITEM_SMASH_CHARGE                 = 0x00000109,
    ITEM_JUMP_CHARGE                  = 0x0000010A,
    ITEM_S_SMASH_CHG                  = 0x0000010B,
    ITEM_S_JUMP_CHG                   = 0x0000010C,
    ITEM_POWER_RUSH                   = 0x0000010D,
    ITEM_AUTO_JUMP                    = 0x0000010E,
    ITEM_AUTO_SMASH                   = 0x0000010F,
    ITEM_CRAZY_HEART                  = 0x00000110,
    ITEM_LAST_STAND                   = 0x00000111,
    ITEM_CLOSE_CALL                   = 0x00000112,
    ITEM_P_UP_D_DOWN                  = 0x00000113,
    ITEM_LUCKY_DAY                    = 0x00000114,
    ITEM_MEGA_HP_DRAIN                = 0x00000115,
    ITEM_P_DOWN_D_UP                  = 0x00000116,
    ITEM_POWER_QUAKE                  = 0x00000117,
    ITEM_AUTO_MULTIBOUNCE             = 0x00000118,
    ITEM_FLOWER_FANATIC               = 0x00000119,
    ITEM_HEART_FINDER                 = 0x0000011A,
    ITEM_FLOWER_FINDER                = 0x0000011B,
    ITEM_SPIN_ATTACK                  = 0x0000011C,
    ITEM_DIZZY_ATTACK                 = 0x0000011D,
    ITEM_I_SPY                        = 0x0000011E,
    ITEM_SPEEDY_SPIN                  = 0x0000011F,
    ITEM_BUMP_ATTACK                  = 0x00000120,
    ITEM_POWER_JUMP                   = 0x00000121,
    ITEM_SUPER_JUMP                   = 0x00000122,
    ITEM_MEGA_JUMP                    = 0x00000123,
    ITEM_POWER_SMASH1                 = 0x00000124,
    ITEM_SUPER_SMASH                  = 0x00000125,
    ITEM_MEGA_SMASH                   = 0x00000126,
    ITEM_POWER_SMASH2                 = 0x00000127,
    ITEM_POWER_SMASH3                 = 0x00000128,
    ITEM_DEEP_FOCUS1                  = 0x00000129,
    ITEM_SUPER_FOCUS                  = 0x0000012A,
    ITEM_SHRINK_SMASH                 = 0x0000012B,
    ITEM_SHELL_CRACK                  = 0x0000012C,
    ITEM_KAIDEN                       = 0x0000012D,
    ITEM_D_DOWN_JUMP                  = 0x0000012E,
    ITEM_SHRINK_STOMP                 = 0x0000012F,
    ITEM_DAMAGE_DODGE_A               = 0x00000130,
    ITEM_EARTHQUAKE_JUMP              = 0x00000131,
    ITEM_DEEP_FOCUS2                  = 0x00000132,
    ITEM_DEEP_FOCUS3                  = 0x00000133,
    ITEM_HP_PLUS_B                    = 0x00000134,
    ITEM_FP_PLUS_B                    = 0x00000135,
    ITEM_HAPPY_HEART_B                = 0x00000136,
    ITEM_HAPPY_HEART_X                = 0x00000137,
    ITEM_FLOWER_SAVER_B               = 0x00000138,
    ITEM_FLOWER_SAVER_X               = 0x00000139,
    ITEM_DAMAGE_DODGE_B               = 0x0000013A,
    ITEM_DAMAGE_DODGE_X               = 0x0000013B,
    ITEM_POWER_PLUS_B                 = 0x0000013C,
    ITEM_POWER_PLUS_X                 = 0x0000013D,
    ITEM_DEFEND_PLUS_X                = 0x0000013E,
    ITEM_DEFEND_PLUS_Y                = 0x0000013F,
    ITEM_HAPPY_FLOWER_A               = 0x00000140,
    ITEM_HAPPY_FLOWER_B               = 0x00000141,
    ITEM_HAPPY_FLOWER_X               = 0x00000142,
    ITEM_GROUP_FOCUS                  = 0x00000143,
    ITEM_PEEKABOO                     = 0x00000144,
    ITEM_ATTACK_FX_D                  = 0x00000145,
    ITEM_ATTACK_FX_B                  = 0x00000146,
    ITEM_ATTACK_FX_E                  = 0x00000147,
    ITEM_ATTACK_FX_C                  = 0x00000148,
    ITEM_ATTACK_FX_F                  = 0x00000149,
    ITEM_HP_PLUS_C                    = 0x0000014A,
    ITEM_HP_PLUS_X                    = 0x0000014B,
    ITEM_HP_PLUS_Y                    = 0x0000014C,
    ITEM_FP_PLUS_C                    = 0x0000014D,
    ITEM_FP_PLUS_X                    = 0x0000014E,
    ITEM_FP_PLUS_Y                    = 0x0000014F,
    ITEM_HEALTHY_HEALTHY              = 0x00000150,
    ITEM_ATTACK_FX_F2                 = 0x00000151,
    ITEM_ATTACK_FX_F3                 = 0x00000152,
    ITEM_ATTACK_FX_F4                 = 0x00000153,
    ITEM_ATTACK_FX_F5                 = 0x00000154,
    ITEM_PARTNER_ATTACK               = 0x00000155,
    ITEM_HEART                        = 0x00000156,
    ITEM_COIN                         = 0x00000157,
    ITEM_HEART_PIECE                  = 0x00000158,
    ITEM_STAR_POINT                   = 0x00000159,
    ITEM_HEART_POINT                  = 0x0000015A,
    ITEM_FLOWER_POINT                 = 0x0000015B,
    ITEM_STAR_PIECE                   = 0x0000015C,
    ITEM_PRESENT                      = 0x0000015D,
    ITEM_CAKE_DONE                    = 0x0000015E,
    ITEM_CAKE_BARE                    = 0x0000015F,
    ITEM_CAKE_PAN                     = 0x00000160,
    ITEM_CAKE_BATTER                  = 0x00000161,
    ITEM_CAKE_BOWL                    = 0x00000162,
    ITEM_CAKE_MIXED                   = 0x00000163,
    ITEM_CAKE_WITH_ICING              = 0x00000164,
    ITEM_CAKE_WITH_BERRIES            = 0x00000165,
    ITEM_HAMMER1_ICON                 = 0x00000166,
    ITEM_HAMMER2_ICON                 = 0x00000167,
    ITEM_HAMMER3_ICON                 = 0x00000168,
    ITEM_BOOTS1_ICON                  = 0x00000169,
    ITEM_BOOTS2_ICON                  = 0x0000016A,
    ITEM_BOOTS3_ICON                  = 0x0000016B,
    ITEM_ITEMS_ICON                   = 0x0000016C,
};

#define ITEM_FIRST_KEY_ITEM ITEM_LUCKY_STAR
#define ITEM_LAST_KEY_ITEM ITEM_PRISON_KEY4
#define ITEM_FIRST_NORMAL_ITEM ITEM_FIRE_FLOWER
#define ITEM_LAST_NORMAL_ITEM ITEM_JELLY_SHROOM6
#define ITEM_FIRST_BADGE ITEM_SPIN_SMASH
#define ITEM_LAST_BADGE ITEM_ATTACK_FX_F5

// TODO: use NPC_ANIM-like macro for player animations
enum PlayerAnims {
    ANIM_1                          = 0x00000001,
    ANIM_STAND_STILL                = 0x00010000,
    ANIM_CROUCH_STILL               = 0x00010001,
    ANIM_10002                      = 0x00010002,
    ANIM_PANTING                    = 0x00010003,
    ANIM_WALKING                    = 0x00010004,
    ANIM_RUNNING                    = 0x00010005,
    ANIM_BEFORE_JUMP                = 0x00010006,
    ANIM_MIDAIR_STILL               = 0x00010007,
    ANIM_MIDAIR                     = 0x00010008,
    ANIM_10009                      = 0x00010009,
    ANIM_1000A                      = 0x0001000A,
    ANIM_1000B                      = 0x0001000B,
    ANIM_1000C                      = 0x0001000C,
    ANIM_STUNNED_STILL              = 0x0001000E,
    ANIM_DEAD_STILL                 = 0x0001000F,
    ANIM_SPINNING                   = 0x00010011,
    ANIM_FLAILING                   = 0x00010012,
    ANIM_SIT_STILL                  = 0x00010013,
    ANIM_CROUCH                     = 0x00010014,
    ANIM_STONE_STILL                = 0x00010015,
    ANIM_THROW                      = 0x00010016,
    ANIM_FALL_BACK                  = 0x00010017,
    ANIM_FALL_DOWN                  = 0x00010018,
    ANIM_SCARED                     = 0x00010019,
    ANIM_HURT_FOOT                  = 0x0001001A,
    ANIM_RUN_PANIC                  = 0x0001001B,
    ANIM_EAT                        = 0x0001001C,
    ANIM_STICK_OUT_TONGUE           = 0x0001001D,
    ANIM_PLANT                      = 0x0001001E,
    ANIM_GOT_ITEM                   = 0x0001001F,
    ANIM_READY_JUMP                 = 0x00010020,
    ANIM_THINKING                   = 0x00010021,
    ANIM_LOST_BALANCE               = 0x00010022,
    ANIM_SHOCK_STILL                = 0x00010023,
    ANIM_DRINK                      = 0x00010025,
    ANIM_SQUISH                     = 0x00010026,
    ANIM_RUN_THINKING               = 0x00010027,
    ANIM_QUESTION                   = 0x00010028,
    ANIM_NOD_YES                    = 0x00010029,
    ANIM_1002A                      = 0x0001002A,
    ANIM_1002B                      = 0x0001002B,
    ANIM_PRAY                       = 0x0001002C,
    ANIM_CHARRED                    = 0x0001002F,
    ANIM_GET_UP                     = 0x00010030,
    ANIM_DUST_OFF                   = 0x00010031,
    ANIM_THUMBS_UP                  = 0x00010032,
    ANIM_30000                      = 0x00030000,
    ANIM_30004                      = 0x00030004,
    ANIM_30008                      = 0x00030008,
    ANIM_30009                      = 0x00030009,
    ANIM_3000D                      = 0x0003000D,
    ANIM_3000E                      = 0x0003000E,
    ANIM_3000F                      = 0x0003000F,
    ANIM_30010                      = 0x00030010,
    ANIM_30011                      = 0x00030011,
    ANIM_30012                      = 0x00030012,
    ANIM_30014                      = 0x00030014,
    ANIM_30015                      = 0x00030015,
    ANIM_30016                      = 0x00030016,
    ANIM_30017                      = 0x00030017,
    ANIM_30018                      = 0x00030018,
    ANIM_30019                      = 0x00030019,
    ANIM_3001B                      = 0x0003001B,
    ANIM_3001C                      = 0x0003001C,
    ANIM_3001D                      = 0x0003001D,
    ANIM_3001E                      = 0x0003001E,
    ANIM_3001F                      = 0x0003001F,
    ANIM_30020                      = 0x00030020,
    ANIM_6000C                      = 0x0006000C,
    ANIM_80003                      = 0x00080003,
    ANIM_80007                      = 0x00080007,
    ANIM_8000B                      = 0x0008000B,
    ANIM_8000C                      = 0x0008000C,
    ANIM_8000E                      = 0x0008000E,
    ANIM_80017                      = 0x00080017,
    ANIM_8001B                      = 0x0008001B,
    ANIM_8001D                      = 0x0008001D,
    ANIM_8001E                      = 0x0008001E,
    ANIM_C0000                      = 0x000C0000,
    ANIM_C0001                      = 0x000C0001,
    ANIM_C0002                      = 0x000C0002,
    ANIM_C0010                      = 0x000C0010,
    ANIM_D0000                      = 0x000D0000,
};

enum AmbientSounds {
    AMBIENT_SPOOKY             = 0,
    AMBIENT_WIND               = 1,
    AMBIENT_BEACH              = 2,
    AMBIENT_JUNGLE             = 3,
    AMBIENT_UNDER_SEA1         = 4,
    AMBIENT_UNDER_SEA2         = 5,
    AMBIENT_SILENCE            = 6,
    AMBIENT_UNDER_SEA3         = 7,
    AMBIENT_UNDER_SEA4         = 8,
    AMBIENT_EXIT_SEA           = 9,
    AMBIENT_UNDER_SEA5         = 10,
    AMBIENT_UNDER_SEA6         = 11,
    AMBIENT_BIRDS              = 12,
    AMBIENT_SEA                = 13,
    AMBIENT_MUSIC              = 16,
};

enum EncounterOutcomes {
    OUTCOME_PLAYER_WON          = 0,
    OUTCOME_PLAYER_LOST         = 1,
    OUTCOME_PLAYER_FLED         = 2,
    OUTCOME_ENEMY_FLED          = 3,
};

enum DecorationIDs {
    DECORATION_GOLDEN_FLAMES                 = 0x00000001,
    DECORATION_SWEAT                         = 0x00000002,
    DECORATION_SEEING_STARS                  = 0x00000003,
    DECORATION_RED_FLAMES                    = 0x00000004,
    DECORATION_GREY_SMOKE_TRAIL              = 0x00000005,
    DECORATION_FIRE_SMOKE_TRAIL              = 0x00000006,
    DECORATION_WHIRLWIND                     = 0x00000007,
    DECORATION_STEAM_EMITTER                 = 0x00000008,
    DECORATION_RADIAL_STAR_EMITTER           = 0x0000000B,
};

enum HitResults {
    HIT_RESULT_TRIGGERED_EXPLODE           = -1,
    HIT_RESULT_HIT                         = 0,
    HIT_RESULT_QUAKE_IMMUNE                = 2,
    HIT_RESULT_3                           = 3,
    HIT_RESULT_LANDED_ON_SPIKE             = 4,
    HIT_RESULT_LUCKY                       = 5,
    HIT_RESULT_MISS                        = 6,
    HIT_RESULT_HIT_STATIC                  = 7,
    HIT_RESULT_IMMUNE                      = 8,
    HIT_RESULT_10                          = 10,
};

enum Iters {
    ITER_FIRST       = -1,
    ITER_NEXT        = 0,
    ITER_PREV        = 1,
    ITER_LAST        = 10,
};

enum ActorSoundIDs {
    ACTOR_SOUND_WALK                      = 0x00000000,
    ACTOR_SOUND_FLY                       = 0x00000001,
    ACTOR_SOUND_JUMP                      = 0x00000002,
    ACTOR_SOUND_HURT                      = 0x00000003,
    ACTOR_SOUND_WALK_INCREMENT            = 0x00000004,
    ACTOR_SOUND_FLY_INCREMENT             = 0x00000005,
};

enum Phases {
    PHASE_EXECUTE_ACTION            = 0,
    PHASE_FIRST_STRIKE              = 1,
    PHASE_RUN_AWAY_START            = 3,
    PHASE_RUN_AWAY_RESET            = 4,
    PHASE_5                         = 5,
    PHASE_USE_DEFEND                = 6,
    PHASE_RUN_AWAY_FAIL             = 7,
    PHASE_USE_LIFE_SHROOM           = 8,
    PHASE_PLAYER_BEGIN              = 10,
    PHASE_ENEMY_END                 = 11,
    PHASE_ENEMY_BEGIN               = 12,
    PHASE_PLAYER_END                = 13,
    PHASE_MERLEE_ATTACK_BONUS       = 20,
    PHASE_MERLEE_DEFENSE_BONUS      = 21,
    PHASE_MERLEE_EXP_BONUS          = 22,
    PHASE_PLAYER_HAPPY              = 30,
};

enum ActorClasses {
    ACTOR_CLASS_PLAYER      = 0x000,
    ACTOR_CLASS_PARTNER     = 0x100,
    ACTOR_CLASS_ENEMY       = 0x200,
    ACTOR_CLASS_MASK        = 0x700,
};

enum ActorIDs {
    ACTOR_SELF           = 0xFFFFFF81,
    ACTOR_PLAYER         = 0x00000000,
    ACTOR_PARTNER        = 0x00000100,
    ACTOR_ENEMY0         = 0x00000200,
    ACTOR_ENEMY1         = 0x00000201,
    ACTOR_ENEMY2         = 0x00000202,
    ACTOR_ENEMY3         = 0x00000203,
    ACTOR_ENEMY4         = 0x00000204,
    ACTOR_ENEMY5         = 0x00000205,
    ACTOR_ENEMY6         = 0x00000206,
    ACTOR_ENEMY7         = 0x00000207,
    ACTOR_ENEMY8         = 0x00000208,
    ACTOR_ENEMY9         = 0x00000209,
    ACTOR_ENEMY10        = 0x0000020A,
    ACTOR_ENEMY11        = 0x0000020B,
    ACTOR_ENEMY12        = 0x0000020C,
    ACTOR_ENEMY13        = 0x0000020D,
    ACTOR_ENEMY14        = 0x0000020E,
    ACTOR_ENEMY15        = 0x0000020F,
    ACTOR_ENEMY16        = 0x00000210,
    ACTOR_ENEMY17        = 0x00000211,
    ACTOR_ENEMY18        = 0x00000212,
    ACTOR_ENEMY19        = 0x00000213,
    ACTOR_ENEMY20        = 0x00000214,
    ACTOR_ENEMY21        = 0x00000215,
    ACTOR_ENEMY22        = 0x00000216,
    ACTOR_ENEMY23        = 0x00000217,
};

enum Elements {
    ELEMENT_END              = 0x00000000,
    ELEMENT_NORMAL           = 0x00000001,
    ELEMENT_FIRE             = 0x00000002,
    ELEMENT_WATER            = 0x00000003,
    ELEMENT_ICE              = 0x00000004,
    ELEMENT_MYSTERY          = 0x00000005,
    ELEMENT_MAGIC            = 0x00000007,
    ELEMENT_HAMMER           = 0x00000008,
    ELEMENT_JUMP             = 0x00000009,
    ELEMENT_COSMIC           = 0x0000000A,
    ELEMENT_BLAST            = 0x0000000B,
    ELEMENT_SHOCK            = 0x0000000C,
    ELEMENT_QUAKE            = 0x0000000D,
    ELEMENT_THROW            = 0x0000000F,
};

enum Events {
    EVENT_HIT_COMBO                   = 0x00000009,
    EVENT_HIT                         = 0x0000000A,
    EVENT_SPIN_SMASH_HIT              = 0x0000000B,
    EVENT_FALL_TRIGGER                = 0x0000000C,
    EVENT_FLIP_TRIGGER                = 0x0000000D,
    EVENT_BURN_HIT                    = 0x0000000E,
    EVENT_15                          = 0x0000000F,
    EVENT_SPIN_SMASH_LAUNCH_HIT       = 0x00000011,
    EVENT_SHELL_CRACK_HIT             = 0x00000012,
    EVENT_STAR_BEAM                   = 0x00000013,
    EVENT_14                          = 0x00000014,
    EVENT_POWER_BOUNCE_HIT            = 0x00000015,
    EVENT_BLOW_AWAY                   = 0x00000016,
    EVENT_UNKNOWN_TRIGGER             = 0x00000017,
    EVENT_18                          = 0x00000018,
    EVENT_IMMUNE                      = 0x00000019,
    EVENT_BLOCK                       = 0x0000001A,
    EVENT_SPIKE_TAUNT                 = 0x0000001B,
    EVENT_BURN_TAUNT                  = 0x0000001C,
    EVENT_1D                          = 0x0000001D,
    EVENT_AIR_LIFT_FAILED             = 0x0000001F,
    EVENT_DEATH                       = 0x00000020,
    EVENT_SPIN_SMASH_DEATH            = 0x00000021,
    EVENT_EXPLODE_TRIGGER             = 0x00000022,
    EVENT_23                          = 0x00000023,
    EVENT_BURN_DEATH                  = 0x00000024,
    EVENT_SPIN_SMASH_LAUNCH_DEATH     = 0x00000025,
    EVENT_SHOCK_DEATH                 = 0x00000026,
    EVENT_SPIKE_DEATH                 = 0x00000027,
    EVENT_POWER_BOUNCE_DEATH          = 0x00000028,
    EVENT_FIRE_DEATH                  = 0x00000029, // burn death copy?
    EVENT_SPIKE_CONTACT               = 0x0000002A,
    EVENT_BURN_CONTACT                = 0x0000002C,
    EVENT_SHOCK_HIT                   = 0x0000002F,
    EVENT_30                          = 0x00000030,
    EVENT_RECOVER_STATUS              = 0x00000031,
    EVENT_32                          = 0x00000032,
    EVENT_33                          = 0x00000033,
    EVENT_34                          = 0x00000034,
    EVENT_END_FIRST_STRIKE            = 0x00000035,
    EVENT_LUCKY                       = 0x00000037,
    EVENT_BEGIN_FIRST_STRIKE          = 0x00000038,
    EVENT_SCARE_AWAY                  = 0x00000039,
    EVENT_BEGIN_AIR_LIFT              = 0x0000003A,
    EVENT_UP_AND_AWAY                 = 0x0000003D,
    EVENT_SWAP_PARTNER                = 0x0000003F,
    EVENT_LIFE_SHROOM_PROC            = 0x00000040,
    EVENT_REVIVE                      = 0x00000041,
};

enum HitSounds {
    HIT_SOUND_MISS             = 0,
    HIT_SOUND_BONES            = 1,
    HIT_SOUND_NORMAL           = 2,
    HIT_SOUND_FIRE             = 3,
    HIT_SOUND_ICE              = 4,
    HIT_SOUND_SHOCK            = 5,
};

// Player.debuff
// Partner.debuff
enum Statuses {
    STATUS_END                     = 0x00000000,
    STATUS_NORMAL                  = 0x00000001,
    STATUS_DEFAULT                 = 0x00000002,
    STATUS_FEAR                    = 0x00000003,
    STATUS_DIZZY                   = 0x00000004,
    STATUS_PARALYZE                = 0x00000005,
    STATUS_SLEEP                   = 0x00000006,
    STATUS_FROZEN                  = 0x00000007,
    STATUS_STOP                    = 0x00000008,
    STATUS_POISON                  = 0x00000009,
    STATUS_SHRINK                  = 0x0000000A,
    STATUS_STATIC                  = 0x0000000B,
    STATUS_STONE                   = 0x0000000C,
    STATUS_DAZE                    = 0x0000000D,
    STATUS_E                       = 0x0000000E,
    STATUS_KO                      = 0x0000000F,
    STATUS_BERSERK                 = 0x00000010,
    STATUS_11                      = 0x00000011,
    STATUS_TURN_DONE               = 0x00000012,
    STATUS_13                      = 0x00000013,
    STATUS_14                      = 0x00000014,
    STATUS_15                      = 0x00000015,
    STATUS_16                      = 0x00000016,
    STATUS_17                      = 0x00000017,
    STATUS_18                      = 0x00000018,
    STATUS_HUSTLE                  = 0x00000019,
    STATUS_DANGER                  = 0x0000001A,
    STATUS_1B                      = 0x0000001B,
    STATUS_THINKING                = 0x0000001C,
    STATUS_WEARY                   = 0x0000001D,
    STATUS_1E                      = 0x0000001E,
    STATUS_DEFAULT_TURN_MOD        = 0x0000001F,
    STATUS_SLEEP_TURN_MOD          = 0x00000020,
    STATUS_STATIC_TURN_MOD         = 0x00000021,
    STATUS_FROZEN_TURN_MOD         = 0x00000022,
    STATUS_FEAR_TURN_MOD           = 0x00000023,
    STATUS_DIZZY_TURN_MOD          = 0x00000024,
    STATUS_POISON_TURN_MOD         = 0x00000025,
    STATUS_PARALYZE_TURN_MOD       = 0x00000026,
    STATUS_SHRINK_TURN_MOD         = 0x00000027,
    STATUS_STONE_TURN_MOD          = 0x00000028,
    STATUS_STOP_TURN_MOD           = 0x00000029,
};

enum doorSwing {
    DOOR_SWING_IN             = -1,
    DOOR_SWING_OUT            = 1,
};

enum ItemSpawnModes {
    ITEM_SPAWN_MODE_NOTHING                                      = 0x00000000,
    ITEM_SPAWN_MODE_DECORATION                                   = 0x00000001,
    ITEM_SPAWN_MODE_INVISIBLE                                    = 0x00000002,
    ITEM_SPAWN_MODE_TOSS_SPAWN_ALWAYS                            = 0x00000003,
    ITEM_SPAWN_MODE_BATTLE_REWARD                                = 0x00000004,
    ITEM_SPAWN_MODE_TOSS_NEVER_VANISH                            = 0x00000005,
    ITEM_SPAWN_MODE_TOSS                                         = 0x00000006,
    ITEM_SPAWN_MODE_TOSS_SPAWN_ONCE                              = 0x00000007,
    ITEM_SPAWN_MODE_TOSS_SPAWN_ONCE_NEVER_VANISH                 = 0x00000008,
    ITEM_SPAWN_MODE_TOSS_SPAWN_ALWAYS_NEVER_VANISH               = 0x00000009,
    ITEM_SPAWN_MODE_ITEM_BLOCK_ITEM                              = 0x0000000A,
    ITEM_SPAWN_MODE_ITEM_BLOCK_BADGE                             = 0x0000000B,
    ITEM_SPAWN_MODE_FALL_SPAWN_ALWAYS                            = 0x0000000C,
    ITEM_SPAWN_MODE_FALL_NEVER_VANISH                            = 0x0000000D,
    ITEM_SPAWN_MODE_FALL                                         = 0x0000000E,
    ITEM_SPAWN_MODE_FALL_SPAWN_ONCE                              = 0x0000000F,
    ITEM_SPAWN_MODE_FIXED_SPAWN_ALWAYS                           = 0x00000010,
    ITEM_SPAWN_MODE_FIXED_NEVER_VANISH                           = 0x00000011,
    ITEM_SPAWN_MODE_FIXED                                        = 0x00000012,
    ITEM_SPAWN_MODE_FIXED_SPAWN_ALWAYS_NEVER_VANISH              = 0x00000013,
    ITEM_SPAWN_MODE_ITEM_BLOCK_SPAWN_ALWAYS                      = 0x00000014,
    ITEM_SPAWN_MODE_ITEM_BLOCK_COIN                              = 0x00000015,
    ITEM_SPAWN_MODE_TOSS_HIGHER_NEVER_VANISH                     = 0x00000016,
    ITEM_SPAWN_MODE_TOSS_FADE1                                   = 0x00000017,
    ITEM_SPAWN_MODE_TOSS_FADE2                                   = 0x00000018,
    ITEM_SPAWN_MODE_TOSS_FADE3                                   = 0x00000019,
    ITEM_SPAWN_MODE_TOSS_SPAWN_ALWAYS_SMALL                      = 0x0000001A,
    ITEM_SPAWN_MODE_UNKNOWN_1B                                   = 0x0000001B,
};

enum Locations {
    LOCATION_TOAD_TOWN                    = 0x00000001,
    LOCATION_TOAD_TOWN_TUNNELS            = 0x00000002,
    LOCATION_KOOPA_BROS_FORTRESS          = 0x00000007,
    LOCATION_MT_RUGGED                    = 0x00000008,
    LOCATION_DRY_DRY_OUTPOST              = 0x00000009,
    LOCATION_DRY_DRY_DESERT               = 0x0000000A,
    LOCATION_DRY_DRY_RUINS                = 0x0000000B,
    LOCATION_FOREVER_FOREST               = 0x0000000C,
    LOCATION_BOOS_MANSION                 = 0x0000000D,
    LOCATION_TUBBAS_MANOR                 = 0x0000000F,
    LOCATION_SHY_GUYS_TOYBOX              = 0x00000010,
    LOCATION_MT_LAVALAVA                  = 0x00000012,
    LOCATION_CRYSTAL_PALACE               = 0x00000015,
    LOCATION_BOWSERS_CASTLE               = 0x00000016,
    LOCATION_TESTING                      = 0x00000017,
    LOCATION_NONE                         = 0x00000018,
    LOCATION_PEACH_CASTLE_GROUNDS         = 0x00000019,
    LOCATION_PEACHS_CASTLE                = 0x0000001A,
    LOCATION_SHOOTING_STAR_SUMMIT         = 0x0000001B,
    LOCATION_STAR_WAY                     = 0x0000001C,
    LOCATION_STAR_HAVEN                   = 0x0000001D,
    LOCATION_GOOMBA_VILLAGE               = 0x0000001E,
    LOCATION_GOOMBA_ROAD                  = 0x0000001F,
    LOCATION_PLEASANT_PATH                = 0x00000020,
    LOCATION_KOOPA_VILLAGE                = 0x00000021,
    LOCATION_GUSTY_GULCH                  = 0x00000022,
    LOCATION_WINDY_MILL                   = 0x00000023,
    LOCATION_JADE_JUNGLE                  = 0x00000024,
    LOCATION_YOSHIS_VILLAGE               = 0x00000025,
    LOCATION_FLOWER_FIELDS                = 0x00000026,
    LOCATION_CLOUDY_CLIMB                 = 0x00000027,
    LOCATION_SHIVER_CITY                  = 0x00000028,
    LOCATION_SHIVER_SNOWFIELD             = 0x00000029,
    LOCATION_STARBORN_VALLEY              = 0x0000002A,
    LOCATION_SHIVER_MOUNTAIN              = 0x0000002B,
    LOCATION_MARIOS_HOUSE                 = 0x0000002C,
};

enum DoorSounds {
    DOOR_SOUNDS_BASIC               = 0,
    DOOR_SOUNDS_METAL               = 1,
    DOOR_SOUNDS_LARGE               = 2,
    DOOR_SOUNDS_CREAKY              = 3,
    DOOR_SOUNDS_GATE                = 4,
    DOOR_SOUNDS_DOOR                = 5,
    DOOR_SOUNDS_UNUSED              = 6,
};

enum ActionStates {
    ACTION_STATE_IDLE                           = 0x00000000,
    ACTION_STATE_WALK                           = 0x00000001,
    ACTION_STATE_RUN                            = 0x00000002,
    // all states above are considered locomotion states
    ACTION_STATE_JUMP                           = 0x00000003,
    ACTION_STATE_BOUNCE                         = 0x00000004,  ///< Used with Kooper
    ACTION_STATE_HOP                            = 0x00000005,  ///< Released A before apex of jump
    ACTION_STATE_LAUNCH                         = 0x00000006,  ///< Shy Guy Toybox jack-in-the-boxes
    ACTION_STATE_LANDING_ON_SWITCH              = 0x00000007,  ///< Small red/blue ! switches
    ACTION_STATE_FALLING                        = 0x00000008,
    ACTION_STATE_STEP_DOWN                      = 0x00000009,
    ACTION_STATE_LAND                           = 0x0000000A,
    ACTION_STATE_STEP_DOWN_LAND                 = 0x0000000B,
    // Following action states prohibit movement (see set_action_state())
    ACTION_STATE_TALK                           = 0x0000000C,  ///< Reading signs doesn't count
    ACTION_STATE_SPIN_JUMP                      = 0x0000000D,
    ACTION_STATE_GROUND_POUND                   = 0x0000000E,
    ACTION_STATE_ULTRA_JUMP                     = 0x0000000F,
    ACTION_STATE_ULTRA_POUND                    = 0x00000010,
    ACTION_STATE_SLIDING                        = 0x00000011,
    ACTION_STATE_HAMMER                         = 0x00000012,
    ACTION_STATE_13                             = 0x00000013,
    ACTION_STATE_14                             = 0x00000014,
    ACTION_STATE_HIT_FIRE                       = 0x00000015,  ///< Causes Mario to fly up and take damage. Used for fire bars.
    ACTION_STATE_KNOCKBACK                      = 0x00000016,  // some kind of knockback, does no damage
    ACTION_STATE_HIT_LAVA                       = 0x00000017,
    ACTION_STATE_STEP_UP_PEACH                  = 0x00000018,
    ACTION_STATE_USE_SNEAKY_PARASOL             = 0x00000019,
    ACTION_STATE_SPIN                           = 0x0000001A,
    ACTION_STATE_ENEMY_FIRST_STRIKE             = 0x0000001B,
    ACTION_STATE_RAISE_ARMS                     = 0x0000001C,
    ACTION_STATE_USE_SPINNING_FLOWER            = 0x0000001D,
    ACTION_STATE_USE_MUNCHLESIA                 = 0x0000001E,  ///< Set by the jan_09 squishy flower entity; throws the player in the air.
    ACTION_STATE_USE_TWEESTER                   = 0x0000001F,
    ACTION_STATE_BOUNCE_OFF_SWITCH              = 0x00000020,  ///< Small red/blue ! switches
    ACTION_STATE_RIDE                           = 0x00000021,
    ACTION_STATE_STEP_UP                        = 0x00000022,
    ACTION_STATE_23                             = 0x00000023,
    ACTION_STATE_24                             = 0x00000024,
    ACTION_STATE_25                             = 0x00000025,
    ACTION_STATE_USE_SPRING                     = 0x00000026,
};

/* (1 = isPeach, 2 = isTransformed, 4 = hasUmbrella) */
enum PeachStatusFlags {
    PEACH_STATUS_FLAG_IS_PEACH          = 0x01,
    PEACH_STATUS_FLAG_DISGUISED         = 0x02,
    PEACH_STATUS_FLAG_HAS_PARASOL       = 0x04,
    PEACH_STATUS_FLAG_HAS_INGREDIENT    = 0x10
};

enum CookingIngredients {
    PEACH_COOKING_NONE              = 0x00,
    PEACH_COOKING_CREAM             = 0x01,
    PEACH_COOKING_STRAWBERRY        = 0x02,
    PEACH_COOKING_BUTTER            = 0x03,
    PEACH_COOKING_CLEANSER          = 0x04,
    PEACH_COOKING_WATER             = 0x05,
    PEACH_COOKING_MILK              = 0x06,
    PEACH_COOKING_FLOUR             = 0x07,
    PEACH_COOKING_EGG               = 0x08,
    PEACH_COOKING_COMPLETE_CAKE     = 0x09,
    PEACH_COOKING_CAKE_BOWL         = 0x0A,
    PEACH_COOKING_CAKE_MIXED        = 0x0B,
    PEACH_COOKING_CAKE_PAN          = 0x0C,
    PEACH_COOKING_CAKE_BATTER       = 0x0D,
    PEACH_COOKING_CAKE_BARE         = 0x0E,
    PEACH_COOKING_SALT              = 0x0F,
    PEACH_COOKING_SUGAR             = 0x10,
    PEACH_COOKING_CAKE_WITH_ICING   = 0x11,
    PEACH_COOKING_CAKE_WITH_BERRIES = 0x12,
};

// Requires decimals
enum NpcIDs {
    NPC_SELF         = -1,
    NPC_PLAYER       = -2,
    NPC_PARTNER      = -4,
    NPC_BTL_MERLEE   = -10,
};

enum EntityTypes {
    ENTITY_TYPE_SHADOW                  =   0x01,
    ENTITY_TYPE_2                       =   0x02,
    ENTITY_TYPE_PADLOCK                 =   0x03,
    ENTITY_TYPE_PADLOCK_RED_FRAME       =   0x04,
    ENTITY_TYPE_PADLOCK_RED_FACE        =   0x05,
    ENTITY_TYPE_PADLOCK_BLUE_FACE       =   0x06,
    ENTITY_TYPE_BLUE_SWITCH             =   0x07,
    ENTITY_TYPE_RED_SWITCH              =   0x08,
    ENTITY_TYPE_HUGE_BLUE_SWITCH        =   0x09,
    ENTITY_TYPE_GREEN_STOMP_SWITCH      =   0x0A,
    ENTITY_TYPE_MULTI_TRIGGER_BLOCK     =   0x0B,
    ENTITY_TYPE_PUSH_BLOCK              =   0x0C,
    ENTITY_TYPE_BRICK_BLOCK             =   0x0D,
    ENTITY_TYPE_MULTI_COIN_BRICK        =   0x0E,
    ENTITY_TYPE_YELLOW_BLOCK            =   0x0F,
    ENTITY_TYPE_SINGLE_TRIGGER_BLOCK    =   0x10,
    ENTITY_TYPE_HIDDEN_YELLOW_BLOCK     =   0x11,
    ENTITY_TYPE_HIDDEN_RED_BLOCK        =   0x12,
    ENTITY_TYPE_INACTIVE_BLOCK          =   0x13,
    ENTITY_TYPE_RED_BLOCK               =   0x14,
    ENTITY_TYPE_HAMMER1_BLOCK           =   0x15,
    ENTITY_TYPE_HAMMER2_BLOCK           =   0x16,
    ENTITY_TYPE_HAMMER3_BLOCK           =   0x17,
    ENTITY_TYPE_HAMMER1_BLOCK_TINY      =   0x18,
    ENTITY_TYPE_HAMMER2_BLOCK_TINY      =   0x19,
    ENTITY_TYPE_HAMMER3_BLOCK_TINY      =   0x1A,
    ENTITY_TYPE_HEALING_BLOCK           =   0x1B,
    ENTITY_TYPE_HEALING_BLOCK_FRAME     =   0x1F,
    ENTITY_TYPE_SAVE_POINT              =   0x20,
    ENTITY_TYPE_POW_BLOCK               =   0x21,
    ENTITY_TYPE_SUPER_BLOCK             =   0x22,
    ENTITY_TYPE_ULTRA_BLOCK             =   0x23,
    ENTITY_TYPE_WOODEN_CRATE            =   0x24,
    ENTITY_TYPE_BOARDED_FLOOR           =   0x25,
    ENTITY_TYPE_BOMBABLE_ROCK           =   0x26,
    ENTITY_TYPE_BLUE_WARP_PIPE          =   0x2B,
    ENTITY_TYPE_SIMPLE_SPRING           =   0x2E,
    ENTITY_TYPE_SCRIPT_SPRING           =   0x2F,
    ENTITY_TYPE_HIDDEN_PANEL            =   0x30,
    ENTITY_TYPE_STAR_BOX_LAUCHER        =   0x31,
    ENTITY_TYPE_CHEST                   =   0x32,
    ENTITY_TYPE_SIGNPOST                =   0x33,
    ENTITY_TYPE_RED_ARROW_SIGNS         =   0x34,
    ENTITY_TYPE_BELLBELL_PLANT          =   0x35,
    ENTITY_TYPE_TRUMPET_PLANT           =   0x36,
    ENTITY_TYPE_MUNCHLESIA              =   0x37,
    ENTITY_TYPE_CYMBAL_PLANT            =   0x38,
    ENTITY_TYPE_PINK_FLOWER             =   0x39,
    ENTITY_TYPE_SPINNING_FLOWER         =   0x3A,
    ENTITY_TYPE_3B                      =   0x3B,
    ENTITY_TYPE_TWEESTER                =   0x3C,
    ENTITY_TYPE_HEALING_BLOCK_CONTENT   =   0x3F,
    ENTITY_TYPE_SUPER_BLOCK_HIT_EFFECT  =   0x41,
    ENTITY_TYPE_ULTRA_BLOCK_HIT_EFFECT  =   0x42,
    ENTITY_TYPE_RESET_MUNCHLESIA        =   0x43,
    ENTITY_TYPE_MUNCHLESIA_GRAB         =   0x44,
    ENTITY_TYPE_MUNCHLESIA_ENVELOP      =   0x45,
    ENTITY_TYPE_MUNCHLESIA_BEGIN_CHEW   =   0x46,
    ENTITY_TYPE_MUNCHLESIA_CHEWING      =   0x47,
    ENTITY_TYPE_MUNCHLESIA_SPIT_OUT     =   0x48,
    ENTITY_TYPE_MUNCHLESIA_RESET1       =   0x49,
    ENTITY_TYPE_MUNCHLESIA_RESET2       =   0x4A
};

// Entity
enum EntityFlags {
    ENTITY_FLAGS_HIDDEN                                       = 0x00000001,
    ENTITY_FLAGS_DRAW_IF_CLOSE_HIDE_MODE1                     = 0x00000002,
    ENTITY_FLAGS_HAS_DYNAMIC_SHADOW                           = 0x00000004,
    ENTITY_FLAGS_HAS_ANIMATED_MODEL                           = 0x00000008,
    ENTITY_FLAGS_SKIP_UPDATE_TRANSFORM_MATRIX                 = 0x00000010,
    ENTITY_FLAGS_SKIP_UPDATE_INVERSE_ROTATION_MATRIX          = 0x00000020,
    ENTITY_FLAGS_CONTINUOUS_COLLISION                         = 0x00000040,
    ENTITY_FLAGS_80                                           = 0x00000080,
    ENTITY_FLAGS_100                                          = 0x00000100,
    ENTITY_FLAGS_SET_SHADOW_FLAG200                           = 0x00000200,
    ENTITY_FLAGS_400                                          = 0x00000400,
    ENTITY_FLAGS_SQUARE_SHADOW                                = 0x00000800,
    ENTITY_FLAGS_SHOWS_INSPECT_PROMPT                         = 0x00001000,
    ENTITY_FLAGS_ALWAYS_FACE_CAMERA                           = 0x00002000,
    ENTITY_FLAGS_4000                                         = 0x00004000,
    ENTITY_FLAGS_8000                                         = 0x00008000,
    ENTITY_FLAGS_DETECTED_COLLISION                           = 0x00010000,
    ENTITY_FLAGS_BLOCK_BEING_HIT                              = 0x00020000,
    ENTITY_FLAGS_DRAW_IF_CLOSE_HIDE_MODE2                     = 0x00040000,
    ENTITY_FLAGS_IGNORE_DISTANCE_CULLING                      = 0x00080000,
    ENTITY_FLAGS_100000                                       = 0x00100000,
    ENTITY_FLAGS_200000                                       = 0x00200000,
    ENTITY_FLAGS_400000                                       = 0x00400000,
    ENTITY_FLAGS_800000                                       = 0x00800000,
    ENTITY_FLAGS_BOUND_SCRIPT_DIRTY                           = 0x01000000,
    ENTITY_FLAGS_2000000                                      = 0x02000000,
    ENTITY_FLAGS_PENDING_FULL_DELETE                          = 0x04000000,
    ENTITY_FLAGS_8000000                                      = 0x08000000,
    ENTITY_FLAGS_10000000                                     = 0x10000000,
    ENTITY_FLAGS_PENDING_INSTANCE_DELETE                      = 0x20000000,
    ENTITY_FLAGS_SKIP_UPDATE                                  = 0x40000000,
    ENTITY_FLAGS_CREATED                                      = 0x80000000,
};

enum EntityCollisionFlags {
    ENTITY_COLLISION_PLAYER_TOUCH_FLOOR                     = 0x00000001,
    ENTITY_COLLISION_FLAGS_2                                = 0x00000002,
    ENTITY_COLLISION_PLAYER_TOUCH_CEILING                   = 0x00000004,
    ENTITY_COLLISION_PLAYER_TOUCH_WALL                      = 0x00000008,
    ENTITY_COLLISION_PLAYER_PUSHING_AGAINST                 = 0x00000010,
    ENTITY_COLLISION_FLAGS_20                               = 0x00000020,
    ENTITY_COLLISION_PLAYER_HAMMER                          = 0x00000040,
    ENTITY_COLLISION_BLOCK_HIT                              = 0x00000080,
    ENTITY_COLLISION_PLAYER_LAST_FLOOR                      = 0x00000100
};

enum TriggerFlags {
    TRIGGER_ACTIVE              = 0x00000001,
    TRIGGER_ACTIVATED           = 0x00000002,
    TRIGGER_FORCE_ACTIVATE      = 0x00000010,
    TRIGGER_WALL_PUSH           = 0x00000040,
    TRIGGER_FLOOR_TOUCH         = 0x00000080,
    TRIGGER_WALL_PRESS_A        = 0x00000100,
    TRIGGER_FLOOR_JUMP          = 0x00000200,
    TRIGGER_WALL_TOUCH          = 0x00000400,
    TRIGGER_FLOOR_PRESS_A       = 0x00000800,
    TRIGGER_WALL_HAMMER         = 0x00001000,
    TRIGGER_FLAGS_2000          = 0x00002000,
    TRIGGER_FLAGS_4000          = 0x00004000,
    TRIGGER_FLAGS_8000          = 0x00008000,
    TRIGGER_GAME_FLAG_SET       = 0x00010000,
    TRIGGER_AREA_FLAG_SET       = 0x00020000,
    TRIGGER_CEILING_TOUCH       = 0x00040000,
    TRIGGER_FLOOR_ABOVE         = 0x00080000,
    TRIGGER_POINT_BOMB          = 0x00100000,
    TRIGGER_SCRIPT_BOUND        = 0x01000000
};

enum ItemEntityFlags {
    ITEM_ENTITY_FLAGS_TINY      = 0x00004000,
};

enum Buttons {
    BUTTON_C_RIGHT      = 0x00000001,
    BUTTON_C_LEFT       = 0x00000002,
    BUTTON_C_DOWN       = 0x00000004,
    BUTTON_C_UP         = 0x00000008,
    BUTTON_R            = 0x00000010,
    BUTTON_L            = 0x00000020,
    BUTTON_D_RIGHT      = 0x00000100,
    BUTTON_D_LEFT       = 0x00000200,
    BUTTON_D_DOWN       = 0x00000400,
    BUTTON_D_UP         = 0x00000800,
    BUTTON_START        = 0x00001000,
    BUTTON_Z            = 0x00002000,
    BUTTON_B            = 0x00004000,
    BUTTON_A            = 0x00008000,
    BUTTON_STICK_UP     = 0x00010000,
    BUTTON_STICK_DOWN   = 0x00020000,
    BUTTON_STICK_LEFT   = 0x00040000,
    BUTTON_STICK_RIGHT  = 0x00080000,
};

enum PlayerBuffs {
    PLAYER_BUFF_ALL             = 0xFFFFFFFF,
    PLAYER_BUFF_JUMP_CHARGE     = 0x00000001,
    PLAYER_BUFF_HAMMER_CHARGE   = 0x00000002,
    PLAYER_BUFF_STONE           = 0x00000008,
    PLAYER_BUFF_HUSTLE          = 0x00000010,
    PLAYER_BUFF_STATIC          = 0x00000020,
    PLAYER_BUFF_TRANSPARENT     = 0x00000040,
    PLAYER_BUFF_CLOUD_NINE      = 0x00000080,
    PLAYER_BUFF_TURBO_CHARGE    = 0x00000100,
    PLAYER_BUFF_WATER_BLOCK     = 0x00000200,
    PLAYER_BUFF_PARTNER_GLOWING = 0x00010000,
};

enum StatusFlags {
    STATUS_FLAG_1               = 0x00000001,
    STATUS_FLAG_4               = 0x00000004,
    STATUS_FLAG_8               = 0x00000008,
    STATUS_FLAG_20              = 0x00000020,
    STATUS_FLAG_40              = 0x00000040,
    STATUS_FLAG_100             = 0x00000100,
    STATUS_FLAG_200             = 0x00000200,
    STATUS_FLAG_SLEEP           = 0x00001000,
    STATUS_FLAG_STATIC          = 0x00002000,
    STATUS_FLAG_FROZEN          = 0x00004000,
    STATUS_FLAG_FEAR            = 0x00008000,
    STATUS_FLAG_PARALYZE        = 0x00010000,
    STATUS_FLAG_POISON          = 0x00020000,
    STATUS_FLAG_DIZZY           = 0x00040000,
    STATUS_FLAG_SHRINK          = 0x00080000,
    STATUS_FLAG_STONE           = 0x00100000,
    STATUS_FLAG_STOP            = 0x00200000,
    STATUS_FLAG_KO              = 0x01000000,
    STATUS_FLAG_GLOWING         = 0x02000000,
    STATUS_FLAG_TRANSPARENT     = 0x04000000,
    STATUS_FLAG_ATTACK_BOOST    = 0x08000000,
    STATUS_FLAG_DEFENSE_BOOST   = 0x10000000,
    STATUS_FLAG_CHILL_OUT       = 0x20000000,
    STATUS_FLAG_RIGHT_ON        = 0x40000000,
    STATUS_FLAG_80000000        = 0x80000000,
};

enum DamageTypes {
    DAMAGE_TYPE_FIRE                       = 0x00000002,
    DAMAGE_TYPE_WATER                      = 0x00000004,
    DAMAGE_TYPE_ICE                        = 0x00000008,
    DAMAGE_TYPE_MAGIC                      = 0x00000010,
    DAMAGE_TYPE_ELECTRIC                   = 0x00000020,
    DAMAGE_TYPE_SMASH                      = 0x00000040,
    DAMAGE_TYPE_JUMP                       = 0x00000080,
    DAMAGE_TYPE_COSMIC                     = 0x00000100,
    DAMAGE_TYPE_BLAST                      = 0x00000200,
    DAMAGE_TYPE_POW                        = 0x00000400,
    DAMAGE_TYPE_QUAKE                      = 0x00000800,
    DAMAGE_TYPE_FEAR                       = 0x00001000,
    DAMAGE_TYPE_2000                       = 0x00002000,
    DAMAGE_TYPE_4000                       = 0x00004000,
    DAMAGE_TYPE_AIR_LIFT                   = 0x00008000,
    DAMAGE_TYPE_SPINY_SURGE                = 0x00010000,
    DAMAGE_TYPE_SHELL_CRACK                = 0x00020000,
    DAMAGE_TYPE_THROW                      = 0x00040000,
    DAMAGE_TYPE_POWER_BOUNCE               = 0x00100000,
    DAMAGE_TYPE_QUAKE_HAMMER               = 0x00200000,
    DAMAGE_TYPE_REMOVE_BUFFS               = 0x00400000,
    DAMAGE_TYPE_PEACH_BEAM                 = 0x00800000,
    DAMAGE_TYPE_MULTI_BOUNCE               = 0x01000000,
    DAMAGE_TYPE_UNBLOCKABLE                = 0x02000000,
    DAMAGE_TYPE_SPIN_SMASH                 = 0x04000000,
    DAMAGE_TYPE_IGNORE_DEFENSE             = 0x08000000,
    DAMAGE_TYPE_NO_CONTACT                 = 0x10000000,
    DAMAGE_TYPE_NO_OTHER_DAMAGE_POPUPS     = 0x20000000,
    DAMAGE_TYPE_STATUS_ALWAYS_HITS         = 0x40000000,
    DAMAGE_TYPE_TRIGGER_LUCKY              = 0x80000000,
};

enum PartnerIDs {
    PARTNER_NONE                = 0x00000000,
    PARTNER_GOOMBARIO           = 0x00000001,
    PARTNER_KOOPER              = 0x00000002,
    PARTNER_BOMBETTE            = 0x00000003,
    PARTNER_PARAKARRY           = 0x00000004,
    PARTNER_GOOMPA              = 0x00000005,
    PARTNER_WATT                = 0x00000006,
    PARTNER_SUSHIE              = 0x00000007,
    PARTNER_LAKILESTER          = 0x00000008,
    PARTNER_BOW                 = 0x00000009,
    PARTNER_GOOMBARIA           = 0x0000000A,
    PARTNER_TWINK               = 0x0000000B,
};

/// @see gAreas
enum Areas {
    AREA_KMR,
    AREA_MAC,
    AREA_TIK,
    AREA_KGR,
    AREA_KKJ,
    AREA_HOS,
    AREA_NOK,
    AREA_TRD,
    AREA_IWA,
    AREA_DRO,
    AREA_SBK,
    AREA_ISK,
    AREA_MIM,
    AREA_OBK,
    AREA_ARN,
    AREA_DGB,
    AREA_OMO,
    AREA_JAN,
    AREA_KZN,
    AREA_FLO,
    AREA_SAM,
    AREA_PRA,
    AREA_KPA,
    AREA_OSR,
    AREA_END,
    AREA_MGM,
    AREA_GV,
    AREA_TST,
};

enum NpcPalSwapState {
    NPC_PALSWAP_HOLDING_A           = 0,
    NPC_PALSWAP_FROM_A_TO_B         = 1,
    NPC_PALSWAP_HOLDING_B           = 2,
    NPC_PALSWAP_FROM_B_TO_A         = 3
};

enum NpcFlags {
    NPC_FLAG_0                       = 0x00000000,
    NPC_FLAG_PASSIVE                 = 0x00000001, ///< Collision does not trigger battle
    NPC_FLAG_2                       = 0x00000002,
    NPC_FLAG_4                       = 0x00000004,
    NPC_FLAG_ENABLE_HIT_SCRIPT       = 0x00000008,
    NPC_FLAG_HAS_SHADOW              = 0x00000010, ///< Set by default and by enable_npc_shadow
    NPC_FLAG_NO_AI                   = 0x00000020, ///< Disable movement AI and collision (idle animation plays)
    NPC_FLAG_40                      = 0x00000040,
    NPC_FLAG_UPSIDE_DOWN             = 0x00000080, ///< Render NPCs upside-down
    NPC_FLAG_100                     = 0x00000100, // TODO
    NPC_FLAG_GRAVITY                 = 0x00000200, ///< Enables gravity. Does nothing if NPC_FLAG_NO_Y_MOVEMENT is set.
    NPC_FLAG_LOCK_ANIMS              = 0x00000400, ///< Do not allow scripts to change animation
    NPC_FLAG_NO_Y_MOVEMENT           = 0x00000800, ///< Causes NpcMoveTo() to ignore stairs
    NPC_FLAG_1000                    = 0x00001000,
    NPC_FLAG_NO_PROJECT_SHADOW       = 0x00002000, ///< Draw shadow at base of sprite instead of projecting to ground
    NPC_FLAG_4000                    = 0x00004000,
    NPC_FLAG_8000                    = 0x00008000,
    NPC_FLAG_DIRTY_SHADOW            = 0x00010000, ///< Set if shadow model is dirty (needs to be repositioned etc.)
    NPC_FLAG_REFLECT_WALL            = 0x00020000, ///< Mirror rendering across z=0
    NPC_FLAG_40000                   = 0x00040000, ///< Yaw?
    NPC_FLAG_REFLECT_FLOOR           = 0x00080000, ///< Mirror rendering across y=0
    NPC_FLAG_MOTION_BLUR             = 0x00100000, ///< Gives motion blur effect as NPC moves. Set by enable_npc_blur
    NPC_FLAG_200000                  = 0x00200000,
    NPC_FLAG_400000                  = 0x00400000,
    NPC_FLAG_NO_DROPS                = 0x00800000, ///< Do not drop hearts, flowers, or coins on defeat
    NPC_FLAG_1000000                 = 0x01000000, // TODO. fails assert in set_npc_sprite
    NPC_FLAG_SIMPLIFIED_PHYSICS      = 0x02000000,
    /// Use simpler, faster physics calculations:
    ///  - Perform only one lateral collision test during motion
    ///  - Allow falling below Y=-2000 (by default, NPC_FLAG_NO_Y_MOVEMENT is set when an NPC falls out-of-bounds)
    NPC_FLAG_PARTICLE                = 0x04000000,
    NPC_FLAG_8000000                 = 0x08000000,
    NPC_FLAG_10000000                = 0x10000000,
    NPC_FLAG_20000000                = 0x20000000,
    NPC_FLAG_NO_ANIMS_LOADED         = 0x40000000, ///< Npc has no animations loaded
    NPC_FLAG_80000000                = 0x80000000,
};

enum PlayerStatusFlags {
    PLAYER_STATUS_FLAGS_JUMPING                          = 0x00000002,
    PLAYER_STATUS_FLAGS_FALLING                          = 0x00000004,
    PLAYER_STATUS_FLAGS_FLYING                           = 0x00000008,
    PLAYER_STATUS_FLAGS_10                               = 0x00000010,
    PLAYER_STATUS_FLAGS_20                               = 0x00000020,
    PLAYER_STATUS_FLAGS_80                               = 0x00000080,
    PLAYER_STATUS_FLAGS_100                              = 0x00000100,
    PLAYER_STATUS_FLAGS_200                              = 0x00000200,
    PLAYER_STATUS_FLAGS_400                              = 0x00000400,
    PLAYER_STATUS_FLAGS_800                              = 0x00000800,
    PLAYER_STATUS_FLAGS_1000                             = 0x00001000,
    PLAYER_STATUS_FLAGS_INPUT_DISABLED                   = 0x00002000,
    PLAYER_STATUS_FLAGS_4000                             = 0x00004000,
    PLAYER_STATUS_FLAGS_8000                             = 0x00008000,
    PLAYER_STATUS_FLAGS_20000                            = 0x00020000,
    PLAYER_STATUS_FLAGS_40000                            = 0x00040000,
    PLAYER_STATUS_FLAGS_80000                            = 0x00080000,
    PLAYER_STATUS_FLAGS_100000                           = 0x00100000,
    PLAYER_STATUS_FLAGS_200000                           = 0x00200000, // using hammer?
    PLAYER_STATUS_FLAGS_800000                           = 0x00800000,
    PLAYER_STATUS_FLAGS_1000000                          = 0x01000000,
    PLAYER_STATUS_FLAGS_HAS_CONVERSATION_NPC             = 0x02000000,
    PLAYER_STATUS_FLAGS_CAMERA_DOESNT_FOLLOW             = 0x04000000,
    PLAYER_STATUS_FLAGS_8000000                          = 0x08000000,
    PLAYER_STATUS_FLAGS_10000000                         = 0x10000000,
    PLAYER_STATUS_FLAGS_20000000                         = 0x20000000, // done hammer?
    PLAYER_STATUS_FLAGS_40000000                         = 0x40000000,
    PLAYER_STATUS_FLAGS_ACTION_STATE_CHANGED             = 0x80000000,
};

/// @see PlayerStatus::animFlags
enum PlayerStatusAnimFlags {
    PLAYER_STATUS_ANIM_FLAGS_HOLDING_WATT                          = 0x00000001,
    PLAYER_STATUS_ANIM_FLAGS_2                                     = 0x00000002,
    PLAYER_STATUS_ANIM_FLAGS_4                                     = 0x00000004,
    PLAYER_STATUS_ANIM_FLAGS_8                                     = 0x00000008, ///< triggers partner use when set
    PLAYER_STATUS_ANIM_FLAGS_INTERACT_PROMPT_AVAILABLE             = 0x00000010, ///< ! prompt
    PLAYER_STATUS_ANIM_FLAGS_SPEECH_PROMPT_AVAILABLE               = 0x00000020, ///< (...) prompt
    PLAYER_STATUS_ANIM_FLAGS_40                                    = 0x00000040,
    PLAYER_STATUS_ANIM_FLAGS_USING_PULSE_STONE                     = 0x00000080,
    PLAYER_STATUS_ANIM_FLAGS_100                                   = 0x00000100,
    PLAYER_STATUS_ANIM_FLAGS_RAISED_ARMS                           = 0x00000200, ///< Sets action state to ACTION_STATE_RAISE_ARMS on idle
    PLAYER_STATUS_ANIM_FLAGS_SHIVERING                             = 0x00000400,
    PLAYER_STATUS_ANIM_FLAGS_800                                   = 0x00000800,
    PLAYER_STATUS_ANIM_FLAGS_USING_PEACH_PHYSICS                   = 0x00001000,
    PLAYER_STATUS_ANIM_FLAGS_IN_DISGUISE                           = 0x00002000,
    PLAYER_STATUS_ANIM_FLAGS_8BIT_MARIO                            = 0x00004000,
    PLAYER_STATUS_ANIM_FLAGS_8000                                  = 0x00008000,
    PLAYER_STATUS_ANIM_FLAGS_SPINNING                              = 0x00010000,
    PLAYER_STATUS_ANIM_FLAGS_20000                                 = 0x00020000,
    PLAYER_STATUS_ANIM_FLAGS_40000                                 = 0x00040000,
    PLAYER_STATUS_ANIM_FLAGS_80000                                 = 0x00080000,
    PLAYER_STATUS_ANIM_FLAGS_100000                                = 0x00100000,
    PLAYER_STATUS_ANIM_FLAGS_200000                                = 0x00200000,
    PLAYER_STATUS_ANIM_FLAGS_400000                                = 0x00400000,
    PLAYER_STATUS_ANIM_FLAGS_800000                                = 0x00800000,
    PLAYER_STATUS_ANIM_FLAGS_1000000                               = 0x01000000,
    PLAYER_STATUS_ANIM_FLAGS_2000000                               = 0x02000000,
    PLAYER_STATUS_ANIM_FLAGS_4000000                               = 0x04000000,
    PLAYER_STATUS_ANIM_FLAGS_8000000                               = 0x08000000,
    PLAYER_STATUS_ANIM_FLAGS_10000000                              = 0x10000000,
    PLAYER_STATUS_ANIM_FLAGS_20000000                              = 0x20000000,
    PLAYER_STATUS_ANIM_FLAGS_40000000                              = 0x40000000,
    PLAYER_STATUS_ANIM_FLAGS_80000000                              = 0x80000000,
};

/// not really
enum RenderMode {
    RENDER_MODE_SURF_SOLID_AA_ZB_LAYER0          = 0x00000000,
    RENDER_MODE_SURFACE_OPA                      = 0x00000001,
    RENDER_MODE_2                                = 0x00000002,
    RENDER_MODE_SURFACE_OPA_NO_AA                = 0x00000003,
    RENDER_MODE_SURFACE_OPA_NO_ZB                = 0x00000004,
    RENDER_MODE_DECAL_OPA                        = 0x00000005,
    RENDER_MODE_DECAL_OPA_NO_AA                  = 0x00000007,
    RENDER_MODE_INTERSECTING_OPA                 = 0x00000009,
    RENDER_MODE_ALPHATEST                        = 0x0000000D,
    RENDER_MODE_ALPHATEST_ONESIDED               = 0x0000000F,
    RENDER_MODE_ALPHATEST_NO_ZB                  = 0x00000010,
    RENDER_MODE_SURFACE_XLU_LAYER1               = 0x00000011,
    RENDER_MODE_SURFACE_XLU_NO_AA                = 0x00000013,
    RENDER_MODE_SURFACE_XLU_NO_ZB                = 0x00000014,
    RENDER_MODE_SURFXLU_ZB_ZUPD                  = 0x00000015,
    RENDER_MODE_SURFACE_XLU_LAYER2               = 0x00000016,
    RENDER_MODE_17                               = 0x00000017,
    RENDER_MODE_DECAL_XLU                        = 0x0000001A,
    RENDER_MODE_DECAL_XLU_NOAA                   = 0x0000001C,
    RENDER_MODE_SHADOW                           = 0x00000020,
    RENDER_MODE_SURFACE_XLU_LAYER3               = 0x00000022,
    RENDER_MODE_INTERSECTING_XLU                 = 0x00000026,
    RENDER_MODE_28                               = 0x00000028,
    RENDER_MODE_SURFXLU_AA_ZB_ZUPD               = 0x00000029,
    RENDER_MODE_2D                               = 0x0000002D,
    RENDER_MODE_CLOUD                            = 0x0000002E,
    RENDER_MODE_CLOUD_NO_ZB                      = 0x0000002F,
};

enum ActorFlags {
    ACTOR_FLAG_DISABLED          = 0x00000001, ///< Disables the actor.
    ACTOR_FLAG_2                 = 0x00000002,
    ACTOR_FLAG_NO_SHADOW         = 0x00000004, ///< Hide shadow.
    ACTOR_FLAG_8                 = 0x00000008,
    ACTOR_FLAG_10                = 0x00000010,
    ACTOR_FLAG_20                = 0x00000020,
    ACTOR_FLAG_40                = 0x00000040,
    ACTOR_FLAG_80                = 0x00000080,
    ACTOR_FLAG_100               = 0x00000100,
    ACTOR_FLAG_FLYING            = 0x00000200, ///< Quake Hammer can't hit.
    ACTOR_FLAG_400               = 0x00000400,
    ACTOR_FLAG_HP_OFFSET_BELOW   = 0x00000800, ///< HP bar offset below actor (e.g. Swooper when upside-down).
    ACTOR_FLAG_1000              = 0x00001000,
    ACTOR_FLAG_2000              = 0x00002000,
    ACTOR_FLAG_TARGET_ONLY       = 0x00004000, ///< Battle ends even if undefeated. No turn.
    ACTOR_FLAG_8000              = 0x00008000,
    ACTOR_FLAG_10000             = 0x00010000,
    ACTOR_FLAG_20000             = 0x00020000,
    ACTOR_FLAG_40000             = 0x00040000,
    ACTOR_FLAG_80000             = 0x00080000,
    ACTOR_FLAG_100000            = 0x00100000,
    ACTOR_FLAG_NO_ATTACK         = 0x00200000, ///< Skip attack turn.
    ACTOR_FLAG_NO_DMG_APPLY      = 0x00400000, ///< Damage is not applied to actor HP.
    ACTOR_FLAG_800000            = 0x00800000,
    ACTOR_FLAG_1000000           = 0x01000000,
    ACTOR_FLAG_NO_DMG_POPUP      = 0x02000000, ///< Hide damage popup.
    ACTOR_FLAG_4000000           = 0x04000000,
    ACTOR_FLAG_8000000           = 0x08000000,
    ACTOR_FLAG_10000000          = 0x10000000,
    ACTOR_FLAG_20000000          = 0x20000000,
    ACTOR_FLAG_40000000          = 0x40000000,
    ACTOR_FLAG_80000000          = 0x80000000,
};

enum ActorPartFlags {
    ACTOR_PART_FLAG_INVISIBLE         = 0x00000001,
    ACTOR_PART_FLAG_2                 = 0x00000002,
    ACTOR_PART_FLAG_4                 = 0x00000004,
    ACTOR_PART_FLAG_8                 = 0x00000008,
    ACTOR_PART_FLAG_10                = 0x00000010,
    ACTOR_PART_FLAG_20                = 0x00000020,
    ACTOR_PART_FLAG_40                = 0x00000040,
    ACTOR_PART_FLAG_80                = 0x00000080,
    ACTOR_PART_FLAG_100               = 0x00000100,
    ACTOR_PART_FLAG_200               = 0x00000200,
    ACTOR_PART_FLAG_400               = 0x00000400,
    ACTOR_PART_FLAG_800               = 0x00000800,
    ACTOR_PART_FLAG_1000              = 0x00001000,
    ACTOR_PART_FLAG_2000              = 0x00002000, ///< Plays extra hurt SFX?
    ACTOR_PART_FLAG_4000              = 0x00004000,
    ACTOR_PART_FLAG_8000              = 0x00008000,
    ACTOR_PART_FLAG_10000             = 0x00010000,
    ACTOR_PART_FLAG_NO_TARGET         = 0x00020000, ///< Cannot be targeted.
    ACTOR_PART_FLAG_40000             = 0x00040000,
    ACTOR_PART_FLAG_80000             = 0x00080000,
    ACTOR_PART_FLAG_100000            = 0x00100000,
    ACTOR_PART_FLAG_200000            = 0x00200000,
    ACTOR_PART_FLAG_400000            = 0x00400000,
    ACTOR_PART_FLAG_MULTI_TARGET      = 0x00800000, ///< Can be targeted with multi-target attacks (e.g. Star Storm).
    ACTOR_PART_FLAG_1000000           = 0x01000000,
    ACTOR_PART_FLAG_2000000           = 0x02000000,
    ACTOR_PART_FLAG_4000000           = 0x04000000,
    ACTOR_PART_FLAG_8000000           = 0x08000000,
    ACTOR_PART_FLAG_10000000          = 0x10000000,
    ACTOR_PART_FLAG_20000000          = 0x20000000,
    ACTOR_PART_FLAG_40000000          = 0x40000000,
    ACTOR_PART_FLAG_80000000          = 0x80000000,
};

enum ActorEventFlags {
    ACTOR_EVENT_FLAG_0                = 0x00000000,
    ACTOR_EVENT_FLAG_1                = 0x00000001,
    ACTOR_EVENT_FLAG_FIREY            = 0x00000002, ///< Player takes burn damage upon contact.
    ACTOR_EVENT_FLAG_4                = 0x00000004,
    ACTOR_EVENT_FLAG_ICY              = 0x00000008, ///< No known effect, but is used.
    ACTOR_EVENT_FLAG_SPIKY_TOP        = 0x00000010, ///< Player takes spike damage from jump attacks.
    ACTOR_EVENT_FLAG_ILLUSORY         = 0x00000020, ///< Player attacks pass through and miss.
    ACTOR_EVENT_FLAG_40               = 0x00000040,
    ACTOR_EVENT_FLAG_ELECTRIFIED      = 0x00000080, ///< Player takes shock damage upon contact.
    ACTOR_EVENT_FLAG_100              = 0x00000100,
    ACTOR_EVENT_FLAG_EXPLOSIVE        = 0x00000200, ///< Blast and fire attacks trigger an explosion.
    ACTOR_EVENT_FLAG_400              = 0x00000400,
    ACTOR_EVENT_FLAG_800              = 0x00000800,
    ACTOR_EVENT_FLAG_FLIPABLE         = 0x00001000, ///< Actor can be flipped; triggered by jump and quake attacks.
    ACTOR_EVENT_FLAG_2000             = 0x00002000,
    ACTOR_EVENT_FLAG_GROUNDABLE       = 0x00004000, ///< Actor can be knocked down from flight; triggered by jump attacks.
    ACTOR_EVENT_FLAG_8000             = 0x00008000,
    ACTOR_EVENT_FLAG_SPIKY_FRONT      = 0x00010000, ///< Player takes spike damage from hammer attacks.
    ACTOR_EVENT_FLAG_20000            = 0x00020000,
    ACTOR_EVENT_FLAG_ENCHANTED        = 0x00040000, ///< Actor glows and listens for the Star Beam event.
    ACTOR_EVENT_FLAG_80000            = 0x00080000,
    ACTOR_EVENT_FLAG_POWER_BOUNCE     = 0x00100000, ///< Actor listens for Power Bounce events.
    ACTOR_EVENT_FLAG_200000           = 0x00200000,
    ACTOR_EVENT_FLAG_400000           = 0x00400000,
    ACTOR_EVENT_FLAG_800000           = 0x00800000,
    ACTOR_EVENT_FLAG_1000000          = 0x01000000,
    ACTOR_EVENT_FLAG_2000000          = 0x02000000,
    ACTOR_EVENT_FLAG_4000000          = 0x04000000,
    ACTOR_EVENT_FLAG_8000000          = 0x08000000,
    ACTOR_EVENT_FLAG_10000000         = 0x10000000,
    ACTOR_EVENT_FLAG_20000000         = 0x20000000,
    ACTOR_EVENT_FLAG_40000000         = 0x40000000,
    ACTOR_EVENT_FLAG_80000000         = 0x80000000,
};

// TODO alex struct
enum PartnerAnims {
    PARTNER_ANIM_STILL,
    PARTNER_ANIM_WALK,
    PARTNER_ANIM_JUMP,
    PARTNER_ANIM_FALL,
    PARTNER_ANIM_FLY,
    PARTNER_ANIM_IDLE,
    PARTNER_ANIM_RUN,
    PARTNER_ANIM_TALK,
    PARTNER_ANIM_HURT,
};

enum FirstStrikes {
    FIRST_STRIKE_NONE     = 0x00000000,
    FIRST_STRIKE_PLAYER   = 0x00000001,
    FIRST_STRIKE_ENEMY    = 0x00000002,
};

enum TimeFreezeMode {
    TIME_FREEZE_NORMAL         = 0x00000000,
    TIME_FREEZE_PARTIAL        = 0x00000001,
    TIME_FREEZE_FULL           = 0x00000002,
    TIME_FREEZE_PARTNER_MENU   = 0x00000003,
    TIME_FREEZE_EXIT           = 0x00000004,
};

enum ActionCommand {
    ACTION_COMMAND_NONE                      = 0x00000000,
    ACTION_COMMAND_JUMP                      = 0x00000001,
    ACTION_COMMAND_SMASH                     = 0x00000002,
    ACTION_COMMAND_FLEE                      = 0x00000003,
    ACTION_COMMAND_BREAK_FREE                = 0x00000004,
    ACTION_COMMAND_WHIRLWIND                 = 0x00000005,
    ACTION_COMMAND_STOP_LEECH                = 0x00000006,
    ACTION_COMMAND_07                        = 0x00000007,
    ACTION_COMMAND_DIZZY_SHELL               = 0x00000008,
    ACTION_COMMAND_FIRE_SHELL                = 0x00000009,
    ACTION_COMMAND_0A                        = 0x0000000A,
    ACTION_COMMAND_BOMB                      = 0x0000000B,
    ACTION_COMMAND_BODY_SLAM                 = 0x0000000C,
    ACTION_COMMAND_AIR_LIFT                  = 0x0000000D,
    ACTION_COMMAND_AIR_RAID                  = 0x0000000E,
    ACTION_COMMAND_SQUIRT                    = 0x0000000F,
    ACTION_COMMAND_POWER_SHOCK               = 0x00000010,
    ACTION_COMMAND_MEGA_SHOCK                = 0x00000011,
    ACTION_COMMAND_SMACK                     = 0x00000012,
    ACTION_COMMAND_SPINY_SURGE               = 0x00000013,
    ACTION_COMMAND_HURRICANE                 = 0x00000014,
    ACTION_COMMAND_SPOOK                     = 0x00000015,
    ACTION_COMMAND_WATER_BLOCK               = 0x00000016,
    ACTION_COMMAND_TIDAL_WAVE                = 0x00000017,
};

enum EffectGfxDataFlags {
    FX_GRAPHICS_DISABLED  = 0x00000000,
    FX_GRAPHICS_ENABLED   = 0x00000001,
    FX_GRAPHICS_FLAGS_2         = 0x00000002,
    FX_GRAPHICS_FLAGS_4                 = 0x00000004,
    FX_GRAPHICS_FLAGS_8                 = 0x00000008,
    FX_GRAPHICS_FLAGS_10                = 0x00000010,
    FX_GRAPHICS_FLAGS_20                = 0x00000020,
    FX_GRAPHICS_FLAGS_40                = 0x00000040,
    FX_GRAPHICS_FLAGS_80                = 0x00000080,
    FX_GRAPHICS_FLAGS_100               = 0x00000100,
    FX_GRAPHICS_FLAGS_200               = 0x00000200,
    FX_GRAPHICS_FLAGS_400               = 0x00000400,
    FX_GRAPHICS_FLAGS_800               = 0x00000800,
    FX_GRAPHICS_FLAGS_1000              = 0x00001000,
    FX_GRAPHICS_FLAGS_2000              = 0x00002000,
    FX_GRAPHICS_FLAGS_4000              = 0x00004000,
    FX_GRAPHICS_FLAGS_8000              = 0x00008000,
    FX_GRAPHICS_FLAGS_10000             = 0x00010000,
    FX_GRAPHICS_FLAGS_20000             = 0x00020000,
    FX_GRAPHICS_FLAGS_40000             = 0x00040000,
    FX_GRAPHICS_FLAGS_80000             = 0x00080000,
    FX_GRAPHICS_FLAGS_100000            = 0x00100000,
    FX_GRAPHICS_FLAGS_200000            = 0x00200000,
    FX_GRAPHICS_FLAGS_400000            = 0x00400000,
    FX_GRAPHICS_FLAGS_800000            = 0x00800000,
    FX_GRAPHICS_FLAGS_1000000           = 0x01000000,
    FX_GRAPHICS_FLAGS_2000000           = 0x02000000,
    FX_GRAPHICS_FLAGS_4000000           = 0x04000000,
    FX_GRAPHICS_FLAGS_8000000           = 0x08000000,
    FX_GRAPHICS_FLAGS_10000000          = 0x10000000,
    FX_GRAPHICS_FLAGS_20000000          = 0x20000000,
    FX_GRAPHICS_FLAGS_40000000          = 0x40000000,
    FX_GRAPHICS_FLAGS_80000000          = 0x80000000,
};

enum MoveIDs {
    MOVE_NONE                       = 0x00000000,
    MOVE_UNUSED_01                  = 0x00000001,
    MOVE_UNUSED_02                  = 0x00000002,
    MOVE_HAMMER1                    = 0x00000003,
    MOVE_HAMMER2                    = 0x00000004,
    MOVE_HAMMER3                    = 0x00000005,
    MOVE_UNUSED_HAMMER4             = 0x00000006,
    MOVE_UNUSED_HAMMER5             = 0x00000007,
    MOVE_SPIN_SMASH                 = 0x00000008,
    MOVE_QUAKE_HAMMER               = 0x00000009,
    MOVE_D_DOWN_POUND               = 0x0000000A,
    MOVE_SMASH_CHARGE0              = 0x0000000B,
    MOVE_UNUSED_HAMMER_0C           = 0x0000000C,
    MOVE_HAMMER_THROW               = 0x0000000D,
    MOVE_MEGA_QUAKE                 = 0x0000000E,
    MOVE_SMASH_CHARGE               = 0x0000000F,
    MOVE_UNUSED_HAMMER_10           = 0x00000010,
    MOVE_SUPER_SMASH_CHARGE         = 0x00000011,
    MOVE_UNUSED_HAMMER_12           = 0x00000012,
    MOVE_AUTO_SMASH                 = 0x00000013,
    MOVE_POWER_QUAKE                = 0x00000014,
    MOVE_POWER_SMASH                = 0x00000015,
    MOVE_SUPER_SMASH                = 0x00000016,
    MOVE_MEGA_SMASH                 = 0x00000017,
    MOVE_SHRINK_SMASH               = 0x00000018,
    MOVE_SHELL_CRACK                = 0x00000019,
    MOVE_JUMP1                      = 0x0000001A,
    MOVE_JUMP2                      = 0x0000001B,
    MOVE_JUMP3                      = 0x0000001C,
    MOVE_UNUSED_JUMP4               = 0x0000001D,
    MOVE_UNUSED_JUMP5               = 0x0000001E,
    MOVE_MULTIBOUNCE                = 0x0000001F,
    MOVE_POWER_BOUNCE               = 0x00000020,
    MOVE_SLEEP_STOMP                = 0x00000021,
    MOVE_DIZZY_STOMP                = 0x00000022,
    MOVE_JUMP_CHARGE0               = 0x00000023,
    MOVE_UNUSED_24                  = 0x00000024,
    MOVE_JUMP_CHARGE                = 0x00000025,
    MOVE_UNUSED_26                  = 0x00000026,
    MOVE_SUPER_JUMP_CHARGE          = 0x00000027,
    MOVE_UNUSED_28                  = 0x00000028,
    MOVE_AUTO_JUMP                  = 0x00000029,
    MOVE_AUTO_MULTIBOUNCE           = 0x0000002A,
    MOVE_POWER_JUMP                 = 0x0000002B,
    MOVE_SUPER_JUMP                 = 0x0000002C,
    MOVE_MEGA_JUMP                  = 0x0000002D,
    MOVE_D_DOWN_JUMP                = 0x0000002E,
    MOVE_SHRINK_STOMP               = 0x0000002F,
    MOVE_EARTHQUAKE_JUMP            = 0x00000030,
    MOVE_UNUSED_DEFEND_PLUS         = 0x00000031,
    MOVE_UNUSED_32                  = 0x00000032,
    MOVE_DAMAGE_DODGE               = 0x00000033,
    MOVE_ITEMS                      = 0x00000034,
    MOVE_DOUBLE_DIP                 = 0x00000035,
    MOVE_TRIPLE_DIP                 = 0x00000036,
    MOVE_UNUSED_37                  = 0x00000037,
    MOVE_QUICK_CHANGE               = 0x00000038,
    MOVE_UNUSED_39                  = 0x00000039,
    MOVE_UNUSED_3A                  = 0x0000003A,
    MOVE_POWER_PLUS                 = 0x0000003B,
    MOVE_ALLOR_NOTHING              = 0x0000003C,
    MOVE_ICE_POWER                  = 0x0000003D,
    MOVE_P_UP_D_DOWN                = 0x0000003E,
    MOVE_UNUSED_3F                  = 0x0000003F,
    MOVE_SPIKE_SHIELD               = 0x00000040,
    MOVE_FIRE_SHIELD                = 0x00000041,
    MOVE_PRETTY_LUCKY               = 0x00000042,
    MOVE_FEELING_FINE               = 0x00000043,
    MOVE_ZAP_TAP                    = 0x00000044,
    MOVE_DEFEND_PLUS                = 0x00000045,
    MOVE_LAST_STAND                 = 0x00000046,
    MOVE_CLOSE_CALL                 = 0x00000047,
    MOVE_LUCKY_DAY                  = 0x00000048,
    MOVE_P_DOWN_D_UP                = 0x00000049,
    MOVE_HEALTHY_HEALTHY            = 0x0000004A,
    MOVE_UNUSED_4B                  = 0x0000004B,
    MOVE_DODGE_MASTER               = 0x0000004C,
    MOVE_FIRST_ATTACK               = 0x0000004D,
    MOVE_SLOW_GO                    = 0x0000004E,
    MOVE_RIGHT_ON                   = 0x0000004F,
    MOVE_BUMP_ATTACK                = 0x00000050,
    MOVE_UNUSED_51                  = 0x00000051,
    MOVE_HP_PLUS                    = 0x00000052,
    MOVE_MYSTERY_SCROLL             = 0x00000053,
    MOVE_ATTACK_FX_A                = 0x00000054,
    MOVE_ATTACK_FX_D                = 0x00000055,
    MOVE_ATTACK_FX_B                = 0x00000056,
    MOVE_ATTACK_FX_E                = 0x00000057,
    MOVE_ATTACK_FX_C                = 0x00000058,
    MOVE_ATTACK_FX_F                = 0x00000059,
    MOVE_HP_DRAIN                   = 0x0000005A,
    MOVE_FP_PLUS                    = 0x0000005B,
    MOVE_MONEY_MONEY                = 0x0000005C,
    MOVE_CHILL_OUT_BADGE            = 0x0000005D,
    MOVE_HAPPY_HEART                = 0x0000005E,
    MOVE_MEGA_RUSH                  = 0x0000005F,
    MOVE_BERSERKER                  = 0x00000060,
    MOVE_RUNAWAY_PAY                = 0x00000061,
    MOVE_FLOWER_SAVER               = 0x00000062,
    MOVE_PAY_OFF                    = 0x00000063,
    MOVE_POWER_RUSH                 = 0x00000064,
    MOVE_CRAZY_HEART                = 0x00000065,
    MOVE_MEGA_HP_DRAIN              = 0x00000066,
    MOVE_FLOWER_FANATIC             = 0x00000067,
    MOVE_HEART_FINDER               = 0x00000068,
    MOVE_FLOWER_FINDER              = 0x00000069,
    MOVE_SPIN_ATTACK                = 0x0000006A,
    MOVE_DIZZY_ATTACK               = 0x0000006B,
    MOVE_I_SPY                      = 0x0000006C,
    MOVE_SPEEDY_SPIN                = 0x0000006D,
    MOVE_REFUND                     = 0x0000006E,
    MOVE_UNUSED_FINAL_GOOMPA        = 0x0000006F,
    MOVE_UNUSED_FINAL_BOMBOMB       = 0x00000070,
    MOVE_DEEP_FOCUS                 = 0x00000071,
    MOVE_SUPER_FOCUS                = 0x00000072,
    MOVE_KAIDEN                     = 0x00000073,
    MOVE_HAPPY_FLOWER               = 0x00000074,
    MOVE_GROUP_FOCUS                = 0x00000075,
    MOVE_PEEKABOO                   = 0x00000076,
    MOVE_FOCUS                      = 0x00000077,
    MOVE_REFRESH                    = 0x00000078,
    MOVE_LULLABY                    = 0x00000079,
    MOVE_STAR_STORM                 = 0x0000007A,
    MOVE_CHILL_OUT_MOVE             = 0x0000007B,
    MOVE_SMOOCH                     = 0x0000007C,
    MOVE_TIME_OUT                   = 0x0000007D,
    MOVE_UP_AND_AWAY                = 0x0000007E,
    MOVE_STAR_BEAM                  = 0x0000007F,
    MOVE_PEACH_BEAM                 = 0x00000080,
    MOVE_PEACH_FOCUS                = 0x00000081,
    MOVE_TWINK_DASH                 = 0x00000082,

    // Goombario moves
    MOVE_HEADBONK1                  = 0x00000083,
    MOVE_HEADBONK2                  = 0x00000084,
    MOVE_HEADBONK3                  = 0x00000085,
    MOVE_TATTLE                     = 0x00000086,
    MOVE_CHARGE                     = 0x00000087,
    MOVE_MULTIBONK                  = 0x00000088,

    // Kooper moves
    MOVE_SHELL_TOSS1                = 0x00000089,
    MOVE_SHELL_TOSS2                = 0x0000008A,
    MOVE_SHELL_TOSS3                = 0x0000008B,
    MOVE_POWER_SHELL                = 0x0000008C,
    MOVE_DIZZY_SHELL                = 0x0000008D,
    MOVE_FIRE_SHELL                 = 0x0000008E,

    // Bombette moves
    MOVE_BODY_SLAM1                 = 0x0000008F,
    MOVE_BODY_SLAM2                 = 0x00000090,
    MOVE_BODY_SLAM3                 = 0x00000091,
    MOVE_BOMB                       = 0x00000092,
    MOVE_POWER_BOMB                 = 0x00000093,
    MOVE_MEGA_BOMB                  = 0x00000094,

    // Parakarry moves
    MOVE_SKY_DIVE1                  = 0x00000095,
    MOVE_SKY_DIVE2                  = 0x00000096,
    MOVE_SKY_DIVE3                  = 0x00000097,
    MOVE_SHELL_SHOT                 = 0x00000098,
    MOVE_AIR_LIFT                   = 0x00000099,
    MOVE_AIR_RAID                   = 0x0000009A,

    // Goompa moves
    MOVE_UNUSED_LONE_FOOL1          = 0x0000009B,
    MOVE_UNUSED_LONE_FOOL2          = 0x0000009C,
    MOVE_UNUSED_LONE_FOOL3          = 0x0000009D,
    MOVE_UNUSED_MUMBLE              = 0x0000009E,
    MOVE_UNUSED_PREACH              = 0x0000009F,
    MOVE_UNUSED_AWAKENING           = 0x000000A0,

    // Watt moves
    MOVE_ELECTRO_DASH1              = 0x000000A1,
    MOVE_ELECTRO_DASH2              = 0x000000A2,
    MOVE_ELECTRO_DASH3              = 0x000000A3,
    MOVE_POWER_SHOCK                = 0x000000A4,
    MOVE_TURBO_CHARGE               = 0x000000A5,
    MOVE_MEGA_SHOCK                 = 0x000000A6,

    // Sushie moves
    MOVE_BELLY_FLOP1                = 0x000000A7,
    MOVE_BELLY_FLOP2                = 0x000000A8,
    MOVE_BELLY_FLOP3                = 0x000000A9,
    MOVE_SQUIRT                     = 0x000000AA,
    MOVE_WATER_BLOCK                = 0x000000AB,
    MOVE_TIDAL_WAVE                 = 0x000000AC,

    // Lakilester moves
    MOVE_SPINY_FLIP1                = 0x000000AD,
    MOVE_SPINY_FLIP2                = 0x000000AE,
    MOVE_SPINY_FLIP3                = 0x000000AF,
    MOVE_SPINY_SURGE                = 0x000000B0,
    MOVE_CLOUD_NINE                 = 0x000000B1,
    MOVE_HURRICANE                  = 0x000000B2,

    // Bow moves
    MOVE_SMACK1                     = 0x000000B3,
    MOVE_SMACK2                     = 0x000000B4,
    MOVE_SMACK3                     = 0x000000B5,
    MOVE_OUTTA_SIGHT                = 0x000000B6,
    MOVE_SPOOK                      = 0x000000B7,
    MOVE_FAN_SMACK                  = 0x000000B8,
};

enum GameModeIDs {
    GAME_MODE_STARTUP                     = 0x00000000,
    GAME_MODE_LOGOS                       = 0x00000001,
    GAME_MODE_TITLE_SCREEN                = 0x00000002,
    GAME_MODE_ENTER_DEMO_WORLD            = 0x00000003,
    GAME_MODE_CHANGE_MAP                  = 0x00000004,
    GAME_MODE_UNUSED                      = 0x00000005,
    GAME_MODE_ENTER_WORLD                 = 0x00000006,
    GAME_MODE_WORLD                       = 0x00000007,
    GAME_MODE_BATTLE                      = 0x00000008,
    GAME_MODE_END_BATTLE                  = 0x00000009,
    GAME_MODE_PAUSE                       = 0x0000000A,
    GAME_MODE_UNPAUSE                     = 0x0000000B,
    GAME_MODE_LANGUAGE_SELECT             = 0x0000000C,
    GAME_MODE_END_LANGUAGE_SELECT         = 0x0000000D,
    GAME_MODE_FILE_SELECT                 = 0x0000000E,
    GAME_MODE_END_FILE_SELECT             = 0x0000000F,
    GAME_MODE_INTRO                       = 0x00000010,
    GAME_MODE_DEMO                        = 0x00000011,
};

enum IntroStates {
    INTRO_STATE_0                        = 0x00000000,
    INTRO_STATE_1                        = 0x00000001,
    INTRO_STATE_2                        = 0x00000002,
    INTRO_STATE_3                        = 0x00000003,
    INTRO_STATE_4                        = 0x00000004,
    INTRO_STATE_5                        = 0x00000005,
    INTRO_STATE_6                        = 0x00000006,
    INTRO_STATE_7                        = 0x00000007,
    INTRO_STATE_8                        = 0x00000008,
    INTRO_STATE_9                        = 0x00000009,
    INTRO_STATE_A                        = 0x0000000A,
    INTRO_STATE_B                        = 0x0000000B,
    INTRO_STATE_C                        = 0x0000000C,
    INTRO_STATE_D                        = 0x0000000D,
    INTRO_STATE_E                        = 0x0000000E,
    INTRO_STATE_F                        = 0x0000000F,
    INTRO_STATE_10                       = 0x00000010,
    INTRO_STATE_11                       = 0x00000011,
    INTRO_STATE_12                       = 0x00000012,
    INTRO_STATE_13                       = 0x00000013,
    INTRO_STATE_14                       = 0x00000014,
    INTRO_STATE_15                       = 0x00000015,
};

enum BattleStatusFlags1 {
    BS_FLAGS1_0                = 0x00000000,
    BS_FLAGS1_1                = 0x00000001, // show actors
    BS_FLAGS1_2                = 0x00000002, // menu is open
    BS_FLAGS1_4                = 0x00000004,
    BS_FLAGS1_8                = 0x00000008,
    BS_FLAGS1_10               = 0x00000010, // enable attack bonuses (power plus, etc)?
    BS_FLAGS1_SP_EVT_ACTIVE    = 0x00000020, // enable special events (other than hit/death/immune?)
    BS_FLAGS1_40               = 0x00000040,
    BS_FLAGS1_80               = 0x00000080,
    BS_FLAGS1_100              = 0x00000100,
    BS_FLAGS1_200              = 0x00000200,
    BS_FLAGS1_400              = 0x00000400,
    BS_FLAGS1_800              = 0x00000800,
    BS_FLAGS1_1000             = 0x00001000,
    BS_FLAGS1_2000             = 0x08002000,
    BS_FLAGS1_4000             = 0x00004000,
    BS_FLAGS1_8000             = 0x00008000,
    BS_FLAGS1_10000            = 0x00010000,
    BS_FLAGS1_20000            = 0x00020000,
    BS_FLAGS1_40000            = 0x00040000,
    BS_FLAGS1_80000            = 0x00080000, // partner will act (partner turn?)
    BS_FLAGS1_100000           = 0x00100000, // player in back (after pressing z)
    BS_FLAGS1_200000           = 0x00200000, // enemy turn pending
    BS_FLAGS1_PLAYER_DEFENDING = 0x00400000, // player is defending
    BS_FLAGS1_800000           = 0x00800000, // don’t game over on loss
    BS_FLAGS1_1000000          = 0x01000000,
    BS_FLAGS1_2000000          = 0x02000000,
    BS_FLAGS1_4000000          = 0x04000000,
    BS_FLAGS1_8000000          = 0x08000000,
    BS_FLAGS1_10000000         = 0x10000000, // prevent hammer charge
    BS_FLAGS1_20000000         = 0x20000000, // prevent jump charge
    BS_FLAGS1_40000000         = 0x40000000,
    BS_FLAGS1_ATK_BLOCKED      = 0x80000000,
};

enum BattleStatusFlags2 {
    BS_FLAGS2_1                               = 0x00000001,
    BS_FLAGS2_2                               = 0x00000002,
    BS_FLAGS2_4                               = 0x00000004,
    BS_FLAGS2_8                               = 0x00000008,
    BS_FLAGS2_10                              = 0x00000010,
    BS_FLAGS2_40                              = 0x00000040,
    BS_FLAGS2_80                              = 0x00000080,
    BS_FLAGS2_100                             = 0x00000100,
    BS_FLAGS2_200                             = 0x00000200,
    BS_FLAGS2_400                             = 0x00000400,
    BS_FLAGS2_800                             = 0x00000800,
    BS_FLAGS2_NO_TARGET_AVAILABLE             = 0x00001000,
    BS_FLAGS2_1000000                         = 0x01000000,
    BS_FLAGS2_2000000                         = 0x02000000,
    BS_FLAGS2_8000000                         = 0x08000000,
};

enum BattleStates {
    BATTLE_STATE_NEGATIVE_1                     = -1,
    BATTLE_STATE_0                              = 0,
    BATTLE_STATE_NORMAL_START                   = 1,
    BATTLE_STATE_FIRST_STRIKE                   = 2,
    BATTLE_STATE_PARTNER_FIRST_STRIKE           = 3,
    BATTLE_STATE_ENEMY_FIRST_STRIKE             = 4,
    BATTLE_STATE_BEGIN_TURN                     = 5,
    BATTLE_STATE_END_TURN                       = 6,
    BATTLE_STATE_BEGIN_PLAYER_TURN              = 7,
    BATTLE_STATE_BEGIN_PARTNER_TURN             = 8,
    BATTLE_STATE_9                              = 9,
    BATTLE_STATE_SWITCH_TO_PLAYER               = 10,
    BATTLE_STATE_SWITCH_TO_PARTNER              = 11,
    BATTLE_STATE_PREPARE_MENU                   = 12,
    BATTLE_STATE_PLAYER_MENU                    = 13,
    BATTLE_STATE_PARTNER_MENU                   = 14,
    BATTLE_STATE_PEACH_MENU                     = 15,
    BATTLE_STATE_TWINK_MENU                     = 16,
    BATTLE_STATE_SELECT_TARGET                  = 17,
    BATTLE_STATE_PLAYER_MOVE                    = 18,
    BATTLE_STATE_PARTNER_MOVE                   = 19,
    BATTLE_STATE_NEXT_ENEMY                     = 20,
    BATTLE_STATE_ENEMY_MOVE                     = 21,
    BATTLE_STATE_END_PLAYER_TURN                = 22,
    BATTLE_STATE_END_PARTNER_TURN               = 23,
    BATTLE_STATE_RUN_AWAY                       = 24,
    BATTLE_STATE_DEFEND                         = 25,
    BATTLE_STATE_VICTORY                        = 26,
    BATTLE_STATE_DEFEAT                         = 27,
    BATTLE_STATE_28                             = 28,
    BATTLE_STATE_CHANGE_PARTNER                 = 29,
    BATTLE_STATE_END_TRAINING_BATTLE            = 30,
    BATTLE_STATE_31                             = 31,
    BATTLE_STATE_END_BATTLE                     = 32,
    BATTLE_STATE_CELEBRATION                    = 33,
    BATTLE_STATE_34                             = 34,
    BATTLE_STATE_END_DEMO_BATTLE                = 35,
};

enum BattleStates2 {
    BATTLE_STATE2_UNK_0                 = 0x00000000,
    BATTLE_STATE2_UNK_1                 = 0x00000001,
    BATTLE_STATE2_UNK_2                 = 0x00000002,
    BATTLE_STATE2_UNK_3                 = 0x00000003,
    BATTLE_STATE2_UNK_4                 = 0x00000004,
    BATTLE_STATE2_UNK_5                 = 0x00000005,
    BATTLE_STATE2_UNK_6                 = 0x00000006,
    BATTLE_STATE2_UNK_7                 = 0x00000007,
    BATTLE_STATE2_UNK_8                 = 0x00000008,
    BATTLE_STATE2_UNK_9                 = 0x00000009,
    BATTLE_STATE2_PLAYER_DEFEATED       = 0x0000000A,
    BATTLE_STATE2_UNK_B                 = 0x0000000B,
    BATTLE_STATE2_UNK_C                 = 0x0000000C,
    BATTLE_STATE2_UNK_F                 = 0x0000000F,
    BATTLE_STATE2_UNK_10                = 0x00000010,
    BATTLE_STATE2_UNK_14                = 0x00000014,
    BATTLE_STATE2_UNK_15                = 0x00000015,
    BATTLE_STATE2_UNK_16                = 0x00000016,
    BATTLE_STATE2_UNK_1E                = 0x0000001E,
    BATTLE_STATE2_UNK_46                = 0x00000046,
};

enum DebuffTypes {
    DEBUFF_TYPE_SLEEP                 = 0x00001000,
    DEBUFF_TYPE_STATIC                = 0x00002000,
    DEBUFF_TYPE_FROZEN                = 0x00004000,
    DEBUFF_TYPE_PARALYZED             = 0x00010000,
    DEBUFF_TYPE_POISON                = 0x00020000,
    DEBUFF_TYPE_DIZZY                 = 0x00040000,
    DEBUFF_TYPE_SHRINK                = 0x00080000,
    DEBUFF_TYPE_STONE                 = 0x00100000,
    DEBUFF_TYPE_STOP                  = 0x00200000,
    DEBUFF_TYPE_DAZE                  = 0x01000000,
    DEBUFF_TYPE_INVISIBLE             = 0x04000000,
};

enum GlobalOverrides {
    GLOBAL_OVERRIDES_DISABLE_RENDER_WORLD                       = 0x00000002,
    GLOBAL_OVERRIDES_8                                          = 0x00000008,
    GLOBAL_OVERRIDES_10                                         = 0x00000010,
    GLOBAL_OVERRIDES_ENABLE_TRANSITION_STENCIL                  = 0x00000020,
    GLOBAL_OVERRIDES_40                                         = 0x00000040,
    GLOBAL_OVERRIDES_80                                         = 0x00000080,
    GLOBAL_OVERRIDES_DISABLE_BATTLES                            = 0x00000100,
    GLOBAL_OVERRIDES_200                                        = 0x00000200,
    GLOBAL_OVERRIDES_400                                        = 0x00000400,
    GLOBAL_OVERRIDES_800                                        = 0x00000800,
    GLOBAL_OVERRIDES_1000                                       = 0x00001000,
    GLOBAL_OVERRIDES_2000                                       = 0x00002000,
    GLOBAL_OVERRIDES_4000                                       = 0x00004000,
    GLOBAL_OVERRIDES_8000                                       = 0x00008000,
    GLOBAL_OVERRIDES_WINDOWS_IN_FRONT_OF_CURTAINS               = 0x00010000,
    GLOBAL_OVERRIDES_20000                                      = 0x00020000,
    GLOBAL_OVERRIDES_DISABLE_MENUS                              = 0x00040000,
    GLOBAL_OVERRIDES_MESSAGES_IN_FRONT_OF_CURTAINS              = 0x00100000,
    GLOBAL_OVERRIDES_CANT_PICK_UP_ITEMS                         = 0x00200000,
};

#define MODEL_FLAGS_MASK_FFF0  (MODEL_FLAGS_USES_CUSTOM_GFX | MODEL_FLAGS_FLAG_20 | MODEL_FLAGS_FLAG_40 | MODEL_FLAGS_HAS_LOCAL_VERTEX_COPY | MODEL_FLAGS_USE_CAMERA_UNK_MATRIX | MODEL_FLAGS_FLAG_200 | MODEL_FLAGS_HAS_TRANSFORM_APPLIED | MODEL_FLAGS_HAS_TEX_PANNER | MODEL_FLAGS_USES_TRANSFORM_MATRIX | MODEL_FLAGS_FLAG_2000 | MODEL_FLAGS_FLAG_4000 | MODEL_FLAGS_FLAG_8000)

enum ModelFlags {
    MODEL_FLAGS_FLAG_1                  = 0x0001,
    MODEL_FLAGS_ENABLED                 = 0x0002,
    MODEL_FLAGS_FLAG_4                  = 0x0004,
    MODEL_FLAGS_TRANSFORM_GROUP_MEMBER  = 0x0008,
    MODEL_FLAGS_USES_CUSTOM_GFX         = 0x0010,
    MODEL_FLAGS_FLAG_20                 = 0x0020,
    MODEL_FLAGS_FLAG_40                 = 0x0040,
    MODEL_FLAGS_HAS_LOCAL_VERTEX_COPY   = 0x0080,
    MODEL_FLAGS_USE_CAMERA_UNK_MATRIX   = 0x0100,
    MODEL_FLAGS_FLAG_200                = 0x0200,
    MODEL_FLAGS_HAS_TRANSFORM_APPLIED   = 0x0400,
    MODEL_FLAGS_HAS_TEX_PANNER          = 0x0800,
    MODEL_FLAGS_USES_TRANSFORM_MATRIX   = 0x1000,
    MODEL_FLAGS_FLAG_2000               = 0x2000,
    MODEL_FLAGS_FLAG_4000               = 0x4000,
    MODEL_FLAGS_FLAG_8000               = 0x8000,
};

enum EnemyFlags {
    ENEMY_FLAGS_1                 = 0x00000001,
    ENEMY_FLAGS_2                 = 0x00000002,
    ENEMY_FLAGS_4                 = 0x00000004,
    ENEMY_FLAGS_8                 = 0x00000008,
    ENEMY_FLAGS_10                = 0x00000010,
    ENEMY_FLAGS_20                = 0x00000020,
    ENEMY_FLAGS_40                = 0x00000040,
    ENEMY_FLAGS_80                = 0x00000080,
    ENEMY_FLAGS_100               = 0x00000100,
    ENEMY_FLAGS_200               = 0x00000200,
    ENEMY_FLAGS_400               = 0x00000400,
    ENEMY_FLAGS_800               = 0x00000800,
    ENEMY_FLAGS_1000              = 0x00001000,
    ENEMY_FLAGS_2000              = 0x00002000,
    ENEMY_FLAGS_4000              = 0x00004000,
    ENEMY_FLAGS_8000              = 0x00008000,
    ENEMY_FLAGS_10000             = 0x00010000,
    ENEMY_FLAGS_20000             = 0x00020000,
    ENEMY_FLAGS_40000             = 0x00040000,
    ENEMY_FLAGS_80000             = 0x00080000,
    ENEMY_FLAGS_100000            = 0x00100000,
    ENEMY_FLAGS_200000            = 0x00200000,
    ENEMY_FLAGS_400000            = 0x00400000,
    ENEMY_FLAGS_800000            = 0x00800000,
    ENEMY_FLAGS_IGNORE_TOUCH      = 0x01000000,
    ENEMY_FLAGS_IGNORE_JUMP       = 0x02000000,
    ENEMY_FLAGS_IGNORE_HAMMER     = 0x04000000,
    ENEMY_FLAGS_8000000           = 0x08000000,
    ENEMY_FLAGS_10000000          = 0x10000000,
    ENEMY_FLAGS_20000000          = 0x20000000,
    ENEMY_FLAGS_40000000          = 0x40000000,
    ENEMY_FLAGS_80000000          = 0x80000000,
};

enum MusicSettingsFlags {
    MUSIC_SETTINGS_FLAGS_1                 = 0x00000001,
    MUSIC_SETTINGS_FLAGS_2                 = 0x00000002,
    MUSIC_SETTINGS_FLAGS_4                 = 0x00000004,
    MUSIC_SETTINGS_FLAGS_8                 = 0x00000008,
    MUSIC_SETTINGS_FLAGS_10                = 0x00000010,
    MUSIC_SETTINGS_FLAGS_20                = 0x00000020,
    MUSIC_SETTINGS_FLAGS_40                = 0x00000040,
    MUSIC_SETTINGS_FLAGS_80                = 0x00000080,
    MUSIC_SETTINGS_FLAGS_100               = 0x00000100,
    MUSIC_SETTINGS_FLAGS_200               = 0x00000200,
    MUSIC_SETTINGS_FLAGS_400               = 0x00000400,
    MUSIC_SETTINGS_FLAGS_800               = 0x00000800,
    MUSIC_SETTINGS_FLAGS_1000              = 0x00001000,
    MUSIC_SETTINGS_FLAGS_2000              = 0x00002000,
    MUSIC_SETTINGS_FLAGS_4000              = 0x00004000,
    MUSIC_SETTINGS_FLAGS_8000              = 0x00008000,
    MUSIC_SETTINGS_FLAGS_10000             = 0x00010000,
    MUSIC_SETTINGS_FLAGS_20000             = 0x00020000,
    MUSIC_SETTINGS_FLAGS_40000             = 0x00040000,
    MUSIC_SETTINGS_FLAGS_80000             = 0x00080000,
    MUSIC_SETTINGS_FLAGS_100000            = 0x00100000,
    MUSIC_SETTINGS_FLAGS_200000            = 0x00200000,
    MUSIC_SETTINGS_FLAGS_400000            = 0x00400000,
    MUSIC_SETTINGS_FLAGS_800000            = 0x00800000,
    MUSIC_SETTINGS_FLAGS_1000000           = 0x01000000,
    MUSIC_SETTINGS_FLAGS_2000000           = 0x02000000,
    MUSIC_SETTINGS_FLAGS_4000000           = 0x04000000,
    MUSIC_SETTINGS_FLAGS_8000000           = 0x08000000,
    MUSIC_SETTINGS_FLAGS_10000000          = 0x10000000,
    MUSIC_SETTINGS_FLAGS_20000000          = 0x20000000,
    MUSIC_SETTINGS_FLAGS_40000000          = 0x40000000,
    MUSIC_SETTINGS_FLAGS_80000000          = 0x80000000,
};

enum ColliderFlags {
    COLLIDER_FLAGS_WATER_FLOOR       = 0x00000001,
    COLLIDER_FLAGS_LAVA_FLOOR        = 0x00000002,
    COLLIDER_FLAGS_SUSHIE_DOCK_WALL  = 0x00000004,
    COLLIDER_FLAGS_SNOW_FLOOR        = 0x00000008,
    COLLIDER_FLAGS_10                = 0x00000010,
    COLLIDER_FLAGS_20                = 0x00000020,
    COLLIDER_FLAGS_40                = 0x00000040,
    COLLIDER_FLAGS_80                = 0x00000080,
    COLLIDER_FLAGS_100               = 0x00000100,
    COLLIDER_FLAGS_200               = 0x00000200,
    COLLIDER_FLAGS_400               = 0x00000400,
    COLLIDER_FLAGS_800               = 0x00000800,
    COLLIDER_FLAGS_1000              = 0x00001000,
    COLLIDER_FLAGS_2000              = 0x00002000,
    COLLIDER_FLAGS_4000              = 0x00004000,
    COLLIDER_FLAGS_IGNORE_SHELL      = 0x00008000,
    COLLIDER_FLAGS_IGNORE_PLAYER     = 0x00010000,
    COLLIDER_FLAGS_20000             = 0x00020000,
    COLLIDER_FLAGS_40000             = 0x00040000,
    COLLIDER_FLAGS_80000             = 0x00080000,
    COLLIDER_FLAGS_100000            = 0x00100000,
    COLLIDER_FLAGS_200000            = 0x00200000,
    COLLIDER_FLAGS_400000            = 0x00400000,
    COLLIDER_FLAGS_800000            = 0x00800000,
    COLLIDER_FLAGS_1000000           = 0x01000000,
    COLLIDER_FLAGS_2000000           = 0x02000000,
    COLLIDER_FLAGS_4000000           = 0x04000000,
    COLLIDER_FLAGS_8000000           = 0x08000000,
    COLLIDER_FLAGS_10000000          = 0x10000000,
    COLLIDER_FLAGS_20000000          = 0x20000000,
    COLLIDER_FLAGS_40000000          = 0x40000000,
    COLLIDER_FLAGS_80000000          = 0x80000000,
};

enum CameraInitDataFlags {
    CAMERA_INIT_DATA_FLAGS_1                 = 0x00000001,
    CAMERA_INIT_DATA_FLAGS_2                 = 0x00000002,
    CAMERA_INIT_DATA_FLAGS_4                 = 0x00000004,
    CAMERA_INIT_DATA_FLAGS_8                 = 0x00000008,
    CAMERA_INIT_DATA_FLAGS_10                = 0x00000010,
    CAMERA_INIT_DATA_FLAGS_20                = 0x00000020,
    CAMERA_INIT_DATA_FLAGS_40                = 0x00000040,
    CAMERA_INIT_DATA_FLAGS_80                = 0x00000080,
    CAMERA_INIT_DATA_FLAGS_100               = 0x00000100,
    CAMERA_INIT_DATA_FLAGS_200               = 0x00000200,
    CAMERA_INIT_DATA_FLAGS_400               = 0x00000400,
    CAMERA_INIT_DATA_FLAGS_800               = 0x00000800,
    CAMERA_INIT_DATA_FLAGS_1000              = 0x00001000,
    CAMERA_INIT_DATA_FLAGS_2000              = 0x00002000,
    CAMERA_INIT_DATA_FLAGS_4000              = 0x00004000,
    CAMERA_INIT_DATA_FLAGS_8000              = 0x00008000,
    CAMERA_INIT_DATA_FLAGS_10000             = 0x00010000,
    CAMERA_INIT_DATA_FLAGS_20000             = 0x00020000,
    CAMERA_INIT_DATA_FLAGS_40000             = 0x00040000,
    CAMERA_INIT_DATA_FLAGS_80000             = 0x00080000,
    CAMERA_INIT_DATA_FLAGS_100000            = 0x00100000,
    CAMERA_INIT_DATA_FLAGS_200000            = 0x00200000,
    CAMERA_INIT_DATA_FLAGS_400000            = 0x00400000,
    CAMERA_INIT_DATA_FLAGS_800000            = 0x00800000,
    CAMERA_INIT_DATA_FLAGS_1000000           = 0x01000000,
    CAMERA_INIT_DATA_FLAGS_2000000           = 0x02000000,
    CAMERA_INIT_DATA_FLAGS_4000000           = 0x04000000,
    CAMERA_INIT_DATA_FLAGS_8000000           = 0x08000000,
    CAMERA_INIT_DATA_FLAGS_10000000          = 0x10000000,
    CAMERA_INIT_DATA_FLAGS_20000000          = 0x20000000,
    CAMERA_INIT_DATA_FLAGS_40000000          = 0x40000000,
    CAMERA_INIT_DATA_FLAGS_80000000          = 0x80000000,
};

enum CameraFlags {
    CAMERA_FLAGS_1                 = 0x00000001,
    CAMERA_FLAGS_2                 = 0x00000002,
    CAMERA_FLAGS_4                 = 0x00000004,
    CAMERA_FLAGS_8                 = 0x00000008,
    CAMERA_FLAGS_10                = 0x00000010,
    CAMERA_FLAGS_20                = 0x00000020,
    CAMERA_FLAGS_40                = 0x00000040,
    CAMERA_FLAGS_80                = 0x00000080,
    CAMERA_FLAGS_100               = 0x00000100,
    CAMERA_FLAGS_200               = 0x00000200,
    CAMERA_FLAGS_400               = 0x00000400,
    CAMERA_FLAGS_800               = 0x00000800,
    CAMERA_FLAGS_1000              = 0x00001000,
    CAMERA_FLAGS_2000              = 0x00002000,
    CAMERA_FLAGS_4000              = 0x00004000,
    CAMERA_FLAGS_8000              = 0x00008000,
    CAMERA_FLAGS_10000             = 0x00010000,
    CAMERA_FLAGS_20000             = 0x00020000,
    CAMERA_FLAGS_40000             = 0x00040000,
    CAMERA_FLAGS_80000             = 0x00080000,
    CAMERA_FLAGS_100000            = 0x00100000,
    CAMERA_FLAGS_200000            = 0x00200000,
    CAMERA_FLAGS_400000            = 0x00400000,
    CAMERA_FLAGS_800000            = 0x00800000,
    CAMERA_FLAGS_1000000           = 0x01000000,
    CAMERA_FLAGS_2000000           = 0x02000000,
    CAMERA_FLAGS_4000000           = 0x04000000,
    CAMERA_FLAGS_8000000           = 0x08000000,
    CAMERA_FLAGS_10000000          = 0x10000000,
    CAMERA_FLAGS_20000000          = 0x20000000,
    CAMERA_FLAGS_40000000          = 0x40000000,
    CAMERA_FLAGS_80000000          = 0x80000000,
};

enum CameraSettingsType {
    CAMERA_SETTINGS_TYPE_0  = 0,
    CAMERA_SETTINGS_TYPE_1  = 1,
    CAMERA_SETTINGS_TYPE_2  = 2,
    CAMERA_SETTINGS_TYPE_3  = 3,
    CAMERA_SETTINGS_TYPE_4  = 4,
    CAMERA_SETTINGS_TYPE_5  = 5,
    CAMERA_SETTINGS_TYPE_6  = 6,
};

enum BtlCameraPreset {
    BTL_CAM_PRESET_A  = 0,
    BTL_CAM_PRESET_B,
    BTL_CAM_PRESET_C,
    BTL_CAM_PRESET_D,
    BTL_CAM_PRESET_E,
    BTL_CAM_PRESET_F,
    BTL_CAM_PRESET_G,
    BTL_CAM_PRESET_H,
    BTL_CAM_PRESET_I,
    BTL_CAM_PRESET_9,
    BTL_CAM_PRESET_10,
    BTL_CAM_PRESET_11,
    BTL_CAM_PRESET_12,
    BTL_CAM_PRESET_13,
    BTL_CAM_PRESET_14,
    BTL_CAM_PRESET_15,
    BTL_CAM_PRESET_16,
    BTL_CAM_PRESET_17,
    BTL_CAM_PRESET_18,
    BTL_CAM_PRESET_19,
    BTL_CAM_PRESET_20,
    BTL_CAM_PRESET_21,
    BTL_CAM_PRESET_22,
    BTL_CAM_PRESET_23,
    BTL_CAM_PRESET_24,
    BTL_CAM_PRESET_25,
    BTL_CAM_PRESET_26,
    BTL_CAM_PRESET_27,
    BTL_CAM_PRESET_28,
    BTL_CAM_PRESET_29,
    BTL_CAM_PRESET_30,
    BTL_CAM_PRESET_31,
    BTL_CAM_PRESET_32,
    BTL_CAM_PRESET_33,
    BTL_CAM_PRESET_34,
    BTL_CAM_PRESET_35,
    BTL_CAM_PRESET_36,
    BTL_CAM_PRESET_37,
    BTL_CAM_PRESET_38,
    BTL_CAM_PRESET_39,
    BTL_CAM_PRESET_40,
    BTL_CAM_PRESET_41,
    BTL_CAM_PRESET_42,
    BTL_CAM_PRESET_43,
    BTL_CAM_PRESET_44,
    BTL_CAM_PRESET_45,
    BTL_CAM_PRESET_46,
    BTL_CAM_PRESET_47,
    BTL_CAM_PRESET_48,
    BTL_CAM_PRESET_49,
    BTL_CAM_PRESET_50,
    BTL_CAM_PRESET_51,
    BTL_CAM_PRESET_52,
    BTL_CAM_PRESET_53,
    BTL_CAM_PRESET_54,
    BTL_CAM_PRESET_55,
    BTL_CAM_PRESET_56,
    BTL_CAM_PRESET_57,
    BTL_CAM_PRESET_58,
    BTL_CAM_PRESET_59,
    BTL_CAM_PRESET_60,
    BTL_CAM_PRESET_61,
    BTL_CAM_PRESET_62,
    BTL_CAM_PRESET_63,
    BTL_CAM_PRESET_64,
    BTL_CAM_PRESET_65,
    BTL_CAM_PRESET_66,
    BTL_CAM_PRESET_67,
    BTL_CAM_PRESET_68,
    BTL_CAM_PRESET_69,
    BTL_CAM_PRESET_70,
    BTL_CAM_PRESET_71,
    BTL_CAM_PRESET_72,
    BTL_CAM_PRESET_73,
};

enum MoveDataFlags {
    STATIC_MOVE_FLAGS_1                 = 0x00000001,
    STATIC_MOVE_FLAGS_2                 = 0x00000002,
    STATIC_MOVE_FLAGS_4                 = 0x00000004,
    STATIC_MOVE_FLAGS_8                 = 0x00000008,
    STATIC_MOVE_FLAGS_10                = 0x00000010,
    STATIC_MOVE_FLAGS_20                = 0x00000020,
    STATIC_MOVE_FLAGS_40                = 0x00000040,
    STATIC_MOVE_FLAGS_80                = 0x00000080,
    STATIC_MOVE_FLAGS_100               = 0x00000100,
    STATIC_MOVE_FLAGS_200               = 0x00000200,
    STATIC_MOVE_FLAGS_400               = 0x00000400,
    STATIC_MOVE_FLAGS_800               = 0x00000800,
    STATIC_MOVE_FLAGS_1000              = 0x00001000,
    STATIC_MOVE_FLAGS_2000              = 0x00002000,
    STATIC_MOVE_FLAGS_4000              = 0x00004000,
    STATIC_MOVE_FLAGS_8000              = 0x00008000,
    STATIC_MOVE_FLAGS_10000             = 0x00010000,
    STATIC_MOVE_FLAGS_20000             = 0x00020000,
    STATIC_MOVE_FLAGS_40000             = 0x00040000,
    STATIC_MOVE_FLAGS_80000             = 0x00080000,
    STATIC_MOVE_FLAGS_100000            = 0x00100000,
    STATIC_MOVE_FLAGS_200000            = 0x00200000,
    STATIC_MOVE_FLAGS_400000            = 0x00400000,
    STATIC_MOVE_FLAGS_800000            = 0x00800000,
    STATIC_MOVE_FLAGS_1000000           = 0x01000000,
    STATIC_MOVE_FLAGS_2000000           = 0x02000000,
    STATIC_MOVE_FLAGS_4000000           = 0x04000000,
    STATIC_MOVE_FLAGS_8000000           = 0x08000000,
    STATIC_MOVE_FLAGS_10000000          = 0x10000000,
    STATIC_MOVE_FLAGS_20000000          = 0x20000000,
    STATIC_MOVE_FLAGS_40000000          = 0x40000000,
    STATIC_MOVE_FLAGS_80000000          = 0x80000000,
};

enum AnimatorNodeFlags {
    ANIMATOR_NODE_FLAGS_0                 = 0x00000000,
    ANIMATOR_NODE_FLAGS_1                 = 0x00000001,
    ANIMATOR_NODE_FLAGS_2                 = 0x00000002,
    ANIMATOR_NODE_FLAGS_4                 = 0x00000004,
    ANIMATOR_NODE_FLAGS_8                 = 0x00000008,
    ANIMATOR_NODE_FLAGS_10                = 0x00000010,
    ANIMATOR_NODE_FLAGS_20                = 0x00000020,
    ANIMATOR_NODE_FLAGS_40                = 0x00000040,
    ANIMATOR_NODE_FLAGS_80                = 0x00000080,
    ANIMATOR_NODE_FLAGS_100               = 0x00000100,
    ANIMATOR_NODE_FLAGS_200               = 0x00000200,
    ANIMATOR_NODE_FLAGS_400               = 0x00000400,
    ANIMATOR_NODE_FLAGS_800               = 0x00000800,
    ANIMATOR_NODE_FLAGS_1000              = 0x00001000,
    ANIMATOR_NODE_FLAGS_2000              = 0x00002000,
    ANIMATOR_NODE_FLAGS_4000              = 0x00004000,
    ANIMATOR_NODE_FLAGS_8000              = 0x00008000,
    ANIMATOR_NODE_FLAGS_10000             = 0x00010000,
    ANIMATOR_NODE_FLAGS_20000             = 0x00020000,
    ANIMATOR_NODE_FLAGS_40000             = 0x00040000,
    ANIMATOR_NODE_FLAGS_80000             = 0x00080000,
    ANIMATOR_NODE_FLAGS_100000            = 0x00100000,
    ANIMATOR_NODE_FLAGS_200000            = 0x00200000,
    ANIMATOR_NODE_FLAGS_400000            = 0x00400000,
    ANIMATOR_NODE_FLAGS_800000            = 0x00800000,
    ANIMATOR_NODE_FLAGS_1000000           = 0x01000000,
    ANIMATOR_NODE_FLAGS_2000000           = 0x02000000,
    ANIMATOR_NODE_FLAGS_4000000           = 0x04000000,
    ANIMATOR_NODE_FLAGS_8000000           = 0x08000000,
    ANIMATOR_NODE_FLAGS_10000000          = 0x10000000,
    ANIMATOR_NODE_FLAGS_20000000          = 0x20000000,
    ANIMATOR_NODE_FLAGS_40000000          = 0x40000000,
    ANIMATOR_NODE_FLAGS_80000000          = 0x80000000,
};

enum ModelAnimatorFlags {
    MODEL_ANIMATOR_FLAGS_0                 = 0x00000000,
    MODEL_ANIMATOR_FLAGS_1                 = 0x00000001,
    MODEL_ANIMATOR_FLAGS_2                 = 0x00000002,
    MODEL_ANIMATOR_FLAGS_4                 = 0x00000004,
    MODEL_ANIMATOR_FLAGS_8                 = 0x00000008,
    MODEL_ANIMATOR_FLAGS_10                = 0x00000010,
    MODEL_ANIMATOR_FLAGS_20                = 0x00000020,
    MODEL_ANIMATOR_FLAGS_40                = 0x00000040,
    MODEL_ANIMATOR_FLAGS_80                = 0x00000080,
    MODEL_ANIMATOR_FLAGS_100               = 0x00000100,
    MODEL_ANIMATOR_FLAGS_200               = 0x00000200,
    MODEL_ANIMATOR_FLAGS_400               = 0x00000400,
    MODEL_ANIMATOR_FLAGS_800               = 0x00000800,
    MODEL_ANIMATOR_FLAGS_1000              = 0x00001000,
    MODEL_ANIMATOR_FLAGS_2000              = 0x00002000,
    MODEL_ANIMATOR_FLAGS_4000              = 0x00004000,
    MODEL_ANIMATOR_FLAGS_8000              = 0x00008000,
    MODEL_ANIMATOR_FLAGS_10000             = 0x00010000,
    MODEL_ANIMATOR_FLAGS_20000             = 0x00020000,
    MODEL_ANIMATOR_FLAGS_40000             = 0x00040000,
    MODEL_ANIMATOR_FLAGS_80000             = 0x00080000,
    MODEL_ANIMATOR_FLAGS_100000            = 0x00100000,
    MODEL_ANIMATOR_FLAGS_200000            = 0x00200000,
    MODEL_ANIMATOR_FLAGS_400000            = 0x00400000,
    MODEL_ANIMATOR_FLAGS_800000            = 0x00800000,
    MODEL_ANIMATOR_FLAGS_1000000           = 0x01000000,
    MODEL_ANIMATOR_FLAGS_2000000           = 0x02000000,
    MODEL_ANIMATOR_FLAGS_4000000           = 0x04000000,
    MODEL_ANIMATOR_FLAGS_8000000           = 0x08000000,
    MODEL_ANIMATOR_FLAGS_10000000          = 0x10000000,
    MODEL_ANIMATOR_FLAGS_20000000          = 0x20000000,
    MODEL_ANIMATOR_FLAGS_40000000          = 0x40000000,
    MODEL_ANIMATOR_FLAGS_80000000          = 0x80000000,
};

enum ShadowFlags {
    SHADOW_FLAGS_HIDDEN            = 0x00000001,
    SHADOW_FLAGS_2                 = 0x00000002,
    SHADOW_FLAGS_4                 = 0x00000004,
    SHADOW_FLAGS_COMPLEX_MODEL     = 0x00000008,
    SHADOW_FLAGS_10                = 0x00000010,
    SHADOW_FLAGS_20                = 0x00000020,
    SHADOW_FLAGS_40                = 0x00000040,
    SHADOW_FLAGS_80                = 0x00000080,
    SHADOW_FLAGS_100               = 0x00000100,
    SHADOW_FLAGS_200               = 0x00000200,
    SHADOW_FLAGS_400               = 0x00000400,
    SHADOW_FLAGS_800               = 0x00000800,
    SHADOW_FLAGS_1000              = 0x00001000,
    SHADOW_FLAGS_ALIGNED_TO_CAMERA = 0x00002000,
    SHADOW_FLAGS_4000              = 0x00004000,
    SHADOW_FLAGS_8000              = 0x00008000,
    SHADOW_FLAGS_10000             = 0x00010000,
    SHADOW_FLAGS_20000             = 0x00020000,
    SHADOW_FLAGS_40000             = 0x00040000,
    SHADOW_FLAGS_80000             = 0x00080000,
    SHADOW_FLAGS_100000            = 0x00100000,
    SHADOW_FLAGS_200000            = 0x00200000,
    SHADOW_FLAGS_POSITION_DIRTY    = 0x00400000,
    SHADOW_FLAGS_800000            = 0x00800000,
    SHADOW_FLAGS_1000000           = 0x01000000,
    SHADOW_FLAGS_2000000           = 0x02000000,
    SHADOW_FLAGS_4000000           = 0x04000000,
    SHADOW_FLAGS_8000000           = 0x08000000,
    SHADOW_FLAGS_FADING_AWAY       = 0x10000000,
    SHADOW_FLAGS_READY_TO_DELETE   = 0x20000000,
    SHADOW_FLAGS_40000000          = 0x40000000,
    SHADOW_FLAGS_80000000          = 0x80000000,
};

enum ShopFlags {
    SHOP_FLAGS_0                 = 0x00000000,
    SHOP_FLAGS_1                 = 0x00000001,
    SHOP_FLAGS_2                 = 0x00000002,
    SHOP_FLAGS_4                 = 0x00000004,
    SHOP_FLAGS_8                 = 0x00000008,
    SHOP_FLAGS_10                = 0x00000010,
    SHOP_FLAGS_20                = 0x00000020,
    SHOP_FLAGS_40                = 0x00000040,
    SHOP_FLAGS_80                = 0x00000080,
    SHOP_FLAGS_100               = 0x00000100,
    SHOP_FLAGS_200               = 0x00000200,
    SHOP_FLAGS_400               = 0x00000400,
    SHOP_FLAGS_800               = 0x00000800,
    SHOP_FLAGS_1000              = 0x00001000,
    SHOP_FLAGS_2000              = 0x00002000,
    SHOP_FLAGS_4000              = 0x00004000,
    SHOP_FLAGS_8000              = 0x00008000,
    SHOP_FLAGS_10000             = 0x00010000,
    SHOP_FLAGS_20000             = 0x00020000,
    SHOP_FLAGS_40000             = 0x00040000,
    SHOP_FLAGS_80000             = 0x00080000,
    SHOP_FLAGS_100000            = 0x00100000,
    SHOP_FLAGS_200000            = 0x00200000,
    SHOP_FLAGS_400000            = 0x00400000,
    SHOP_FLAGS_800000            = 0x00800000,
    SHOP_FLAGS_1000000           = 0x01000000,
    SHOP_FLAGS_2000000           = 0x02000000,
    SHOP_FLAGS_4000000           = 0x04000000,
    SHOP_FLAGS_8000000           = 0x08000000,
    SHOP_FLAGS_10000000          = 0x10000000,
    SHOP_FLAGS_20000000          = 0x20000000,
    SHOP_FLAGS_40000000          = 0x40000000,
    SHOP_FLAGS_80000000          = 0x80000000,
};

enum EncounterStatusFlags {
    ENCOUNTER_STATUS_FLAGS_0                 = 0x00000000,
    ENCOUNTER_STATUS_FLAGS_1                 = 0x00000001,
    ENCOUNTER_STATUS_FLAGS_2                 = 0x00000002,
    ENCOUNTER_STATUS_FLAGS_4                 = 0x00000004,
    ENCOUNTER_STATUS_FLAGS_8                 = 0x00000008,
    ENCOUNTER_STATUS_FLAGS_10                = 0x00000010,
    ENCOUNTER_STATUS_FLAGS_20                = 0x00000020,
    ENCOUNTER_STATUS_FLAGS_40                = 0x00000040,
    ENCOUNTER_STATUS_FLAGS_80                = 0x00000080,
    ENCOUNTER_STATUS_FLAGS_100               = 0x00000100,
    ENCOUNTER_STATUS_FLAGS_200               = 0x00000200,
    ENCOUNTER_STATUS_FLAGS_400               = 0x00000400,
    ENCOUNTER_STATUS_FLAGS_800               = 0x00000800,
    ENCOUNTER_STATUS_FLAGS_1000              = 0x00001000,
    ENCOUNTER_STATUS_FLAGS_2000              = 0x00002000,
    ENCOUNTER_STATUS_FLAGS_4000              = 0x00004000,
    ENCOUNTER_STATUS_FLAGS_8000              = 0x00008000,
    ENCOUNTER_STATUS_FLAGS_10000             = 0x00010000,
    ENCOUNTER_STATUS_FLAGS_20000             = 0x00020000,
    ENCOUNTER_STATUS_FLAGS_40000             = 0x00040000,
    ENCOUNTER_STATUS_FLAGS_80000             = 0x00080000,
    ENCOUNTER_STATUS_FLAGS_100000            = 0x00100000,
    ENCOUNTER_STATUS_FLAGS_200000            = 0x00200000,
    ENCOUNTER_STATUS_FLAGS_400000            = 0x00400000,
    ENCOUNTER_STATUS_FLAGS_800000            = 0x00800000,
    ENCOUNTER_STATUS_FLAGS_1000000           = 0x01000000,
    ENCOUNTER_STATUS_FLAGS_2000000           = 0x02000000,
    ENCOUNTER_STATUS_FLAGS_4000000           = 0x04000000,
    ENCOUNTER_STATUS_FLAGS_8000000           = 0x08000000,
    ENCOUNTER_STATUS_FLAGS_10000000          = 0x10000000,
    ENCOUNTER_STATUS_FLAGS_20000000          = 0x20000000,
    ENCOUNTER_STATUS_FLAGS_40000000          = 0x40000000,
    ENCOUNTER_STATUS_FLAGS_80000000          = 0x80000000,
};

enum WindowFlags {
    WINDOW_FLAGS_INITIALIZED       = 0x00000001,
    WINDOW_FLAGS_FPUPDATE_CHANGED  = 0x00000002,
    WINDOW_FLAGS_HIDDEN            = 0x00000004, ///< Updated but not rendered
    WINDOW_FLAGS_INITIAL_ANIMATION = 0x00000008,
    WINDOW_FLAGS_HAS_CHILDREN      = 0x00000010,
    WINDOW_FLAGS_DISABLED          = 0x00000020, ///< Not updated or rendered
    WINDOW_FLAGS_40                = 0x00000040,
};

enum DrawFlags {
    DRAW_FLAGS_ROTSCALE                  = 0x00000001,
    DRAW_FLAGS_2                         = 0x00000002,
    DRAW_FLAGS_CLIP                      = 0x00000004,
    DRAW_FLAGS_CULL_BACK                 = 0x00000008,
};

enum EntityModelFlags {
    ENTITY_MODEL_FLAGS_1                 = 0x00000001,
    ENTITY_MODEL_FLAGS_2                 = 0x00000002,
    ENTITY_MODEL_FLAGS_4                 = 0x00000004,
    ENTITY_MODEL_FLAGS_8                 = 0x00000008,
    ENTITY_MODEL_FLAGS_10                = 0x00000010,
    ENTITY_MODEL_FLAGS_20                = 0x00000020,
    ENTITY_MODEL_FLAGS_40                = 0x00000040,
    ENTITY_MODEL_FLAGS_80                = 0x00000080,
    ENTITY_MODEL_FLAGS_100               = 0x00000100,
    ENTITY_MODEL_FLAGS_200               = 0x00000200,
    ENTITY_MODEL_FLAGS_400               = 0x00000400,
    ENTITY_MODEL_FLAGS_800               = 0x00000800,
    ENTITY_MODEL_FLAGS_1000              = 0x00001000,
    ENTITY_MODEL_FLAGS_2000              = 0x00002000,
    ENTITY_MODEL_FLAGS_4000              = 0x00004000,
    ENTITY_MODEL_FLAGS_8000              = 0x00008000,
    ENTITY_MODEL_FLAGS_10000             = 0x00010000,
    ENTITY_MODEL_FLAGS_20000             = 0x00020000,
    ENTITY_MODEL_FLAGS_40000             = 0x00040000,
    ENTITY_MODEL_FLAGS_80000             = 0x00080000,
    ENTITY_MODEL_FLAGS_100000            = 0x00100000,
    ENTITY_MODEL_FLAGS_200000            = 0x00200000,
    ENTITY_MODEL_FLAGS_400000            = 0x00400000,
    ENTITY_MODEL_FLAGS_800000            = 0x00800000,
    ENTITY_MODEL_FLAGS_1000000           = 0x01000000,
    ENTITY_MODEL_FLAGS_2000000           = 0x02000000,
    ENTITY_MODEL_FLAGS_4000000           = 0x04000000,
    ENTITY_MODEL_FLAGS_8000000           = 0x08000000,
    ENTITY_MODEL_FLAGS_10000000          = 0x10000000,
    ENTITY_MODEL_FLAGS_20000000          = 0x20000000,
    ENTITY_MODEL_FLAGS_40000000          = 0x40000000,
    ENTITY_MODEL_FLAGS_80000000          = 0x80000000,
};

enum TempSetZoneEnabledFlags {
    TEMP_SET_ZONE_ENABLED_FLAGS_1                 = 0x00000001,
    TEMP_SET_ZONE_ENABLED_FLAGS_2                 = 0x00000002,
    TEMP_SET_ZONE_ENABLED_FLAGS_4                 = 0x00000004,
    TEMP_SET_ZONE_ENABLED_FLAGS_8                 = 0x00000008,
    TEMP_SET_ZONE_ENABLED_FLAGS_10                = 0x00000010,
    TEMP_SET_ZONE_ENABLED_FLAGS_20                = 0x00000020,
    TEMP_SET_ZONE_ENABLED_FLAGS_40                = 0x00000040,
    TEMP_SET_ZONE_ENABLED_FLAGS_80                = 0x00000080,
    TEMP_SET_ZONE_ENABLED_FLAGS_100               = 0x00000100,
    TEMP_SET_ZONE_ENABLED_FLAGS_200               = 0x00000200,
    TEMP_SET_ZONE_ENABLED_FLAGS_400               = 0x00000400,
    TEMP_SET_ZONE_ENABLED_FLAGS_800               = 0x00000800,
    TEMP_SET_ZONE_ENABLED_FLAGS_1000              = 0x00001000,
    TEMP_SET_ZONE_ENABLED_FLAGS_2000              = 0x00002000,
    TEMP_SET_ZONE_ENABLED_FLAGS_4000              = 0x00004000,
    TEMP_SET_ZONE_ENABLED_FLAGS_8000              = 0x00008000,
    TEMP_SET_ZONE_ENABLED_FLAGS_10000             = 0x00010000,
    TEMP_SET_ZONE_ENABLED_FLAGS_20000             = 0x00020000,
    TEMP_SET_ZONE_ENABLED_FLAGS_40000             = 0x00040000,
    TEMP_SET_ZONE_ENABLED_FLAGS_80000             = 0x00080000,
    TEMP_SET_ZONE_ENABLED_FLAGS_100000            = 0x00100000,
    TEMP_SET_ZONE_ENABLED_FLAGS_200000            = 0x00200000,
    TEMP_SET_ZONE_ENABLED_FLAGS_400000            = 0x00400000,
    TEMP_SET_ZONE_ENABLED_FLAGS_800000            = 0x00800000,
    TEMP_SET_ZONE_ENABLED_FLAGS_1000000           = 0x01000000,
    TEMP_SET_ZONE_ENABLED_FLAGS_2000000           = 0x02000000,
    TEMP_SET_ZONE_ENABLED_FLAGS_4000000           = 0x04000000,
    TEMP_SET_ZONE_ENABLED_FLAGS_8000000           = 0x08000000,
    TEMP_SET_ZONE_ENABLED_FLAGS_10000000          = 0x10000000,
    TEMP_SET_ZONE_ENABLED_FLAGS_20000000          = 0x20000000,
    TEMP_SET_ZONE_ENABLED_FLAGS_40000000          = 0x40000000,
    TEMP_SET_ZONE_ENABLED_FLAGS_80000000          = 0x80000000,
};

enum EffectInstanceFlags {
    EFFECT_INSTANCE_FLAGS_1                 = 0x00000001,
    EFFECT_INSTANCE_FLAGS_2                 = 0x00000002,
    EFFECT_INSTANCE_FLAGS_4                 = 0x00000004,
    EFFECT_INSTANCE_FLAGS_8                 = 0x00000008,
    EFFECT_INSTANCE_FLAGS_10                = 0x00000010,
    EFFECT_INSTANCE_FLAGS_20                = 0x00000020,
    EFFECT_INSTANCE_FLAGS_40                = 0x00000040,
    EFFECT_INSTANCE_FLAGS_80                = 0x00000080,
    EFFECT_INSTANCE_FLAGS_100               = 0x00000100,
    EFFECT_INSTANCE_FLAGS_200               = 0x00000200,
    EFFECT_INSTANCE_FLAGS_400               = 0x00000400,
    EFFECT_INSTANCE_FLAGS_800               = 0x00000800,
    EFFECT_INSTANCE_FLAGS_1000              = 0x00001000,
    EFFECT_INSTANCE_FLAGS_2000              = 0x00002000,
    EFFECT_INSTANCE_FLAGS_4000              = 0x00004000,
    EFFECT_INSTANCE_FLAGS_8000              = 0x00008000,
    EFFECT_INSTANCE_FLAGS_10000             = 0x00010000,
    EFFECT_INSTANCE_FLAGS_20000             = 0x00020000,
    EFFECT_INSTANCE_FLAGS_40000             = 0x00040000,
    EFFECT_INSTANCE_FLAGS_80000             = 0x00080000,
    EFFECT_INSTANCE_FLAGS_100000            = 0x00100000,
    EFFECT_INSTANCE_FLAGS_200000            = 0x00200000,
    EFFECT_INSTANCE_FLAGS_400000            = 0x00400000,
    EFFECT_INSTANCE_FLAGS_800000            = 0x00800000,
    EFFECT_INSTANCE_FLAGS_1000000           = 0x01000000,
    EFFECT_INSTANCE_FLAGS_2000000           = 0x02000000,
    EFFECT_INSTANCE_FLAGS_4000000           = 0x04000000,
    EFFECT_INSTANCE_FLAGS_8000000           = 0x08000000,
    EFFECT_INSTANCE_FLAGS_10000000          = 0x10000000,
    EFFECT_INSTANCE_FLAGS_20000000          = 0x20000000,
    EFFECT_INSTANCE_FLAGS_40000000          = 0x40000000,
    EFFECT_INSTANCE_FLAGS_80000000          = 0x80000000,
};

enum ModelTransformGroupFlags {
    MODEL_TRANSFORM_GROUP_FLAGS_1                 = 0x00000001,
    MODEL_TRANSFORM_GROUP_FLAGS_2                 = 0x00000002,
    MODEL_TRANSFORM_GROUP_FLAGS_4                 = 0x00000004,
    MODEL_TRANSFORM_GROUP_FLAGS_8                 = 0x00000008,
    MODEL_TRANSFORM_GROUP_FLAGS_10                = 0x00000010,
    MODEL_TRANSFORM_GROUP_FLAGS_20                = 0x00000020,
    MODEL_TRANSFORM_GROUP_FLAGS_40                = 0x00000040,
    MODEL_TRANSFORM_GROUP_FLAGS_80                = 0x00000080,
    MODEL_TRANSFORM_GROUP_FLAGS_100               = 0x00000100,
    MODEL_TRANSFORM_GROUP_FLAGS_200               = 0x00000200,
    MODEL_TRANSFORM_GROUP_FLAGS_400               = 0x00000400,
    MODEL_TRANSFORM_GROUP_FLAGS_800               = 0x00000800,
    MODEL_TRANSFORM_GROUP_FLAGS_1000              = 0x00001000,
    MODEL_TRANSFORM_GROUP_FLAGS_2000              = 0x00002000,
    MODEL_TRANSFORM_GROUP_FLAGS_4000              = 0x00004000,
    MODEL_TRANSFORM_GROUP_FLAGS_8000              = 0x00008000,
    MODEL_TRANSFORM_GROUP_FLAGS_10000             = 0x00010000,
    MODEL_TRANSFORM_GROUP_FLAGS_20000             = 0x00020000,
    MODEL_TRANSFORM_GROUP_FLAGS_40000             = 0x00040000,
    MODEL_TRANSFORM_GROUP_FLAGS_80000             = 0x00080000,
    MODEL_TRANSFORM_GROUP_FLAGS_100000            = 0x00100000,
    MODEL_TRANSFORM_GROUP_FLAGS_200000            = 0x00200000,
    MODEL_TRANSFORM_GROUP_FLAGS_400000            = 0x00400000,
    MODEL_TRANSFORM_GROUP_FLAGS_800000            = 0x00800000,
    MODEL_TRANSFORM_GROUP_FLAGS_1000000           = 0x01000000,
    MODEL_TRANSFORM_GROUP_FLAGS_2000000           = 0x02000000,
    MODEL_TRANSFORM_GROUP_FLAGS_4000000           = 0x04000000,
    MODEL_TRANSFORM_GROUP_FLAGS_8000000           = 0x08000000,
    MODEL_TRANSFORM_GROUP_FLAGS_10000000          = 0x10000000,
    MODEL_TRANSFORM_GROUP_FLAGS_20000000          = 0x20000000,
    MODEL_TRANSFORM_GROUP_FLAGS_40000000          = 0x40000000,
    MODEL_TRANSFORM_GROUP_FLAGS_80000000          = 0x80000000,
};

enum NpcDropFlags {
    NPC_DROP_FLAGS_1                 = 0x01,
    NPC_DROP_FLAGS_2                 = 0x02,
    NPC_DROP_FLAGS_4                 = 0x04,
    NPC_DROP_FLAGS_8                 = 0x08,
    NPC_DROP_FLAGS_10                = 0x10,
    NPC_DROP_FLAGS_20                = 0x20,
    NPC_DROP_FLAGS_40                = 0x40,
    NPC_DROP_FLAGS_80                = 0x80,
};

enum ElementImmunityFlags {
    ELEMENT_IMMUNITY_FLAGS_1                 = 0x00000001,
    ELEMENT_IMMUNITY_FLAGS_2                 = 0x00000002,
    ELEMENT_IMMUNITY_FLAGS_4                 = 0x00000004,
    ELEMENT_IMMUNITY_FLAGS_8                 = 0x00000008,
    ELEMENT_IMMUNITY_FLAGS_10                = 0x00000010,
    ELEMENT_IMMUNITY_FLAGS_20                = 0x00000020,
    ELEMENT_IMMUNITY_FLAGS_40                = 0x00000040,
    ELEMENT_IMMUNITY_FLAGS_80                = 0x00000080,
    ELEMENT_IMMUNITY_FLAGS_100               = 0x00000100,
    ELEMENT_IMMUNITY_FLAGS_200               = 0x00000200,
    ELEMENT_IMMUNITY_FLAGS_400               = 0x00000400,
    ELEMENT_IMMUNITY_FLAGS_800               = 0x00000800,
    ELEMENT_IMMUNITY_FLAGS_1000              = 0x00001000,
    ELEMENT_IMMUNITY_FLAGS_2000              = 0x00002000,
    ELEMENT_IMMUNITY_FLAGS_4000              = 0x00004000,
    ELEMENT_IMMUNITY_FLAGS_8000              = 0x00008000,
    ELEMENT_IMMUNITY_FLAGS_10000             = 0x00010000,
    ELEMENT_IMMUNITY_FLAGS_20000             = 0x00020000,
    ELEMENT_IMMUNITY_FLAGS_40000             = 0x00040000,
    ELEMENT_IMMUNITY_FLAGS_80000             = 0x00080000,
    ELEMENT_IMMUNITY_FLAGS_100000            = 0x00100000,
    ELEMENT_IMMUNITY_FLAGS_200000            = 0x00200000,
    ELEMENT_IMMUNITY_FLAGS_400000            = 0x00400000,
    ELEMENT_IMMUNITY_FLAGS_800000            = 0x00800000,
    ELEMENT_IMMUNITY_FLAGS_1000000           = 0x01000000,
    ELEMENT_IMMUNITY_FLAGS_2000000           = 0x02000000,
    ELEMENT_IMMUNITY_FLAGS_4000000           = 0x04000000,
    ELEMENT_IMMUNITY_FLAGS_8000000           = 0x08000000,
    ELEMENT_IMMUNITY_FLAGS_10000000          = 0x10000000,
    ELEMENT_IMMUNITY_FLAGS_20000000          = 0x20000000,
    ELEMENT_IMMUNITY_FLAGS_40000000          = 0x40000000,
    ELEMENT_IMMUNITY_FLAGS_80000000          = 0x80000000,
};

enum ItemTypeFlags {
    ITEM_TYPE_FLAGS_0                 = 0x0000,
    ITEM_TYPE_FLAGS_1                 = 0x0001,
    ITEM_TYPE_FLAGS_2                 = 0x0002,
    ITEM_TYPE_FLAGS_4                 = 0x0004,
    ITEM_TYPE_FLAGS_8                 = 0x0008,
    ITEM_TYPE_FLAGS_10                = 0x0010,
    ITEM_TYPE_FLAGS_20                = 0x0020,
    ITEM_TYPE_FLAGS_40                = 0x0040,
    ITEM_TYPE_FLAGS_80                = 0x0080,
    ITEM_TYPE_FLAGS_100               = 0x0100,
    ITEM_TYPE_FLAGS_200               = 0x0200,
    ITEM_TYPE_FLAGS_400               = 0x0400,
    ITEM_TYPE_FLAGS_800               = 0x0800,
    ITEM_TYPE_FLAGS_1000              = 0x1000,
    ITEM_TYPE_FLAGS_2000              = 0x2000,
    ITEM_TYPE_FLAGS_4000              = 0x4000,
    ITEM_TYPE_FLAGS_8000              = 0x8000,
};

enum FoldStateFlags {
    FOLD_STATE_FLAG_ENABLED           = 0x00000001,
    FOLD_STATE_FLAG_G_CULL_BACK       = 0x00000002,
    FOLD_STATE_FLAG_G_CULL_FRONT      = 0x00000004,
    FOLD_STATE_FLAG_10                = 0x00000010,
    FOLD_STATE_FLAG_20                = 0x00000020,
    FOLD_STATE_FLAG_40                = 0x00000040,
    FOLD_STATE_FLAG_80                = 0x00000080,
    FOLD_STATE_FLAG_100               = 0x00000100,
    FOLD_STATE_FLAG_200               = 0x00000200,
    FOLD_STATE_FLAG_400               = 0x00000400,
    FOLD_STATE_FLAG_800               = 0x00000800,
    FOLD_STATE_FLAG_1000              = 0x00001000,
    FOLD_STATE_FLAG_2000              = 0x00002000,
    FOLD_STATE_FLAG_4000              = 0x00004000,
    FOLD_STATE_FLAG_8000              = 0x00008000,
    FOLD_STATE_FLAG_10000             = 0x00010000,
    FOLD_STATE_FLAG_20000             = 0x00020000,
    FOLD_STATE_FLAG_80000             = 0x00080000,
    FOLD_STATE_FLAG_100000            = 0x00100000,
};

enum BattleSubmenu {
    BATTLE_SUBMENU_HAMMER       = 1,
    BATTLE_SUBMENU_JUMP         = 2,
};

enum BattleSubmenuStatus {
    BATTLE_SUBMENU_STATUS_ENABLED           = 1,
    BATTLE_SUBMENU_STATUS_NOT_ENOUGH_FP     = 0,
    BATTLE_SUBMENU_STATUS_NO_TARGETS        = -1,
    BATTLE_SUBMENU_STATUS_NO_TARGETS_2      = -2, // TODO: determine difference, probably uses a different error message
};

enum DictionaryIndex {
    DICTIONARY_KEY   = 0,
    DICTIONARY_VALUE = 1,
    DICTIONARY_SIZE,
};

enum WindowId {
    WINDOW_ID_NONE = -1,
    WINDOW_ID_0 = 0,
    WINDOW_ID_1 = 1,
    WINDOW_ID_2 = 2,
    WINDOW_ID_3 = 3,
    WINDOW_ID_4 = 4,
    WINDOW_ID_5 = 5,
    WINDOW_ID_6 = 6,
    WINDOW_ID_7 = 7,
    WINDOW_ID_8 = 8,
    WINDOW_ID_9 = 9,
    WINDOW_ID_10 = 10,
    WINDOW_ID_11 = 11,
    WINDOW_ID_12 = 12,
    WINDOW_ID_13 = 13,
    WINDOW_ID_14 = 14,
    WINDOW_ID_15 = 15,
    WINDOW_ID_16 = 16,
    WINDOW_ID_17 = 17,
    WINDOW_ID_18 = 18,
    WINDOW_ID_19 = 19,
    WINDOW_ID_20 = 20,
    WINDOW_ID_21 = 21,
    WINDOW_ID_PAUSE_MAIN = 22,
    WINDOW_ID_PAUSE_DECRIPTION = 23,
    WINDOW_ID_PAUSE_TUTORIAL = 24,
    WINDOW_ID_PAUSE_TAB_STATS = 25,
    WINDOW_ID_PAUSE_TAB_BADGES = 26,
    WINDOW_ID_PAUSE_TAB_ITEMS = 27,
    WINDOW_ID_PAUSE_TAB_PARTY = 28,
    WINDOW_ID_PAUSE_TAB_SPIRITS = 29,
    WINDOW_ID_PAUSE_TAB_MAP = 30,
    WINDOW_ID_PAUSE_STATS = 31,
    WINDOW_ID_PAUSE_BADGES = 32,
    WINDOW_ID_PAUSE_ITEMS = 33,
    WINDOW_ID_PAUSE_PARTNERS = 34,
    WINDOW_ID_PAUSE_PARTNERS_TITLE = 35,
    WINDOW_ID_PAUSE_PARTNERS_MOVELIST = 36,
    WINDOW_ID_PAUSE_PARTNERS_MOVELIST_TITLE = 37,
    WINDOW_ID_PAUSE_PARTNERS_MOVELIST_FLOWER = 38,
    WINDOW_ID_PAUSE_SPIRITS = 39,
    WINDOW_ID_PAUSE_SPIRITS_TITLE = 40,
    WINDOW_ID_PAUSE_MAP = 41,
    WINDOW_ID_PAUSE_MAP_TITLE = 42,
    WINDOW_ID_PAUSE_TAB_INVIS = 43,
    WINDOW_ID_PAUSE_CURSOR = 44,
    WINDOW_ID_45 = 45,
    WINDOW_ID_46 = 46,
    WINDOW_ID_47 = 47,
    WINDOW_ID_48 = 48,
    WINDOW_ID_49 = 49,
    WINDOW_ID_50 = 50,
    WINDOW_ID_51 = 51,
    WINDOW_ID_52 = 52,
    WINDOW_ID_53 = 53,
    WINDOW_ID_54 = 54,
    WINDOW_ID_55 = 55,
    WINDOW_ID_56 = 56,
    WINDOW_ID_57 = 57,
    WINDOW_ID_58 = 58,
    WINDOW_ID_59 = 59,
    WINDOW_ID_60 = 60,
    WINDOW_ID_61 = 61,
    WINDOW_ID_62 = 62,
    WINDOW_ID_63 = 63,
};

enum SimpleWindowUpdateId {
    WINDOW_UPDATE_SHOW              = 1,
    WINDOW_UPDATE_HIDE              = 2,
    WINDOW_UPDATE_HIER_UPDATE       = 3,
    WINDOW_UPDATE_DARKENED          = 4,
    WINDOW_UPDATE_TRANSPARENT       = 5,
    WINDOW_UPDATE_OPAQUE            = 6,
    WINDOW_UPDATE_SHOW_TRANSPARENT  = 7,
    WINDOW_UPDATE_SHOW_DARKENED     = 8,
};

enum WindowGroupId {
    WINDOW_GROUP_ALL = 0,
    WINDOW_GROUP_1 = 1,
    WINDOW_GROUP_PAUSE_MENU = 2,
    WINDOW_GROUP_FILE_MENU = 3,
};

enum RushFlags {
    RUSH_FLAG_NONE  = 0,
    RUSH_FLAG_MEGA  = 1,
    RUSH_FLAG_POWER = 2,
};

enum FileMenuMessages {
    FILE_MESSAGE_NONE                       = 0,
    FILE_MESSAGE_SELECT_FILE_TO_START       = 1, // Select file to start:[End]
    FILE_MESSAGE_SELECT_FILE_TO_DELETE      = 2, // Select file to delete:[End]
    FILE_MESSAGE_SELECT_FILE_TO_SAVE        = 3, // Select file to save[End]
    FILE_MESSAGE_COPY_WHICH_FILE            = 4, // Copy which file?[End]
    FILE_MESSAGE_COPY_TO_WHICH_FILE         = 5, // Copy to which file?[End]
    FILE_MESSAGE_NEW                        = 6, // NEW[End]
    FILE_MESSAGE_LEVEL                      = 7, // Level[End]
    FILE_MESSAGE_PLAY_TIME                  = 8, // Play Time[End]
    FILE_MESSAGE_DELETE_FILE                = 9, // Delete File[End]
    FILE_MESSAGE_CANCEL                     = 10, // Cancel[End]
    FILE_MESSAGE_COPY_FILE                  = 11, // Copy File[End]
    FILE_MESSAGE_FIRST_PLAY                 = 12, // First Play[End]
    FILE_MESSAGE_PERIOD_13                  = 13, // .[End]
    FILE_MESSAGE_YES                        = 14, // Yes[End]
    FILE_MESSAGE_NO                         = 15, // No[End]
    FILE_MESSAGE_DELETE                     = 16, // Delete[End]
    FILE_MESSAGE_OVERRIDE_TO_NEW_DATA       = 17, // Override to New Data[End]
    FILE_MESSAGE_SAVE_OK                    = 18, // Save OK?[End]
    FILE_MESSAGE_FILE_NAME_IS               = 19, // File name is :[End]
    FILE_MESSAGE_PERIOD_20                  = 20, // .[End]
    FILE_MESSAGE_OK                         = 21, // OK?[End]
    FILE_MESSAGE_FILE_22                    = 22, // File[End]
    FILE_MESSAGE_WILL_BE_DELETED            = 23, // will be deleted.[End]
    FILE_MESSAGE_OK_TO_COPY_TO_THIS_FILE    = 24, // OK to copy to this file?[End]
    FILE_MESSAGE_START_GAME_WITH            = 25, // Start game with[End]
    FILE_MESSAGE_FILE_26                    = 26, // File[End]
    FILE_MESSAGE_HAS_BEEN_DELETED           = 27, // has been deleted.[End]
    FILE_MESSAGE_28                         = 28, // [End]
    FILE_MESSAGE_COPY_FROM                  = 29, // Copy from[End]
    FILE_MESSAGE_TO                         = 30, // to[End]
    FILE_MESSAGE_HAS_BEEN_CREATED           = 31, // has been created.[End]
    FILE_MESSAGE_ENTER_A_FILE_NAME          = 32, // Enter a file name![End]
    FILE_MESSAGE_QUESTION                   = 33, // ?[End]
    FILE_MESSAGE_PERIOD_34                  = 34, // .[End]
};

// specifically used with draw_msg, not to be confused with MsgStyles
enum DrawMsgStyleFlags {
    DRAW_MSG_STYLE_MENU             = 1, // slightly higher baseline with smaller fullspace widths
    DRAW_MSG_STYLE_WAVY             = 2,
    DRAW_MSG_STYLE_RAINBOW          = 4,
    DRAW_MSG_STYLE_DROP_SHADOW      = 8
};

enum MsgPalettes {
    MSG_PAL_WHITE                   = 0x00,
    MSG_PAL_TEAL                    = 0x01,
    MSG_PAL_BLUE                    = 0x02,
    MSG_PAL_GREEN                   = 0x03,
    MSG_PAL_LIME                    = 0x04,
    MSG_PAL_YELLOW                  = 0x05,
    MSG_PAL_ORANGE                  = 0x06,
    MSG_PAL_RED                     = 0x07,
    MSG_PAL_PURPLE                  = 0x08,
    MSG_PAL_PINK                    = 0x09,
    MSG_PAL_STANDARD                = 0x0A,
    MSG_PAL_0B                      = 0x0B,
    MSG_PAL_0C                      = 0x0C,
    MSG_PAL_0D                      = 0x0D,
    MSG_PAL_0E                      = 0x0E,
    MSG_PAL_0F                      = 0x0F,
    MSG_PAL_10                      = 0x10,
    MSG_PAL_11                      = 0x11,
    MSG_PAL_12                      = 0x12,
    MSG_PAL_13                      = 0x13,
    MSG_PAL_14                      = 0x14,
    MSG_PAL_15                      = 0x15,
    MSG_PAL_16                      = 0x16,
    MSG_PAL_17                      = 0x17,
    MSG_PAL_18                      = 0x18,
    MSG_PAL_19                      = 0x19,
    MSG_PAL_1A                      = 0x1A,
    MSG_PAL_1B                      = 0x1B,
    MSG_PAL_1C                      = 0x1C,
    MSG_PAL_1D                      = 0x1D,
    MSG_PAL_1E                      = 0x1E,
    MSG_PAL_1F                      = 0x1F,
    MSG_PAL_20                      = 0x20,
    MSG_PAL_21                      = 0x21,
    MSG_PAL_22                      = 0x22,
    MSG_PAL_23                      = 0x23,
    MSG_PAL_24                      = 0x24,
    MSG_PAL_25                      = 0x25,
    MSG_PAL_26                      = 0x26,
    MSG_PAL_27                      = 0x27,
    MSG_PAL_28                      = 0x28,
    MSG_PAL_29                      = 0x29,
    MSG_PAL_2A                      = 0x2A,
    MSG_PAL_2B                      = 0x2B,
    MSG_PAL_2C                      = 0x2C,
    MSG_PAL_2D                      = 0x2D,
    MSG_PAL_2E                      = 0x2E,
    MSG_PAL_2F                      = 0x2F,
    MSG_PAL_30                      = 0x30,
    MSG_PAL_31                      = 0x31,
    MSG_PAL_32                      = 0x32,
    MSG_PAL_33                      = 0x33,
    MSG_PAL_34                      = 0x34,
    MSG_PAL_35                      = 0x35,
    MSG_PAL_36                      = 0x36,
    MSG_PAL_37                      = 0x37,
    MSG_PAL_38                      = 0x38,
    MSG_PAL_39                      = 0x39,
    MSG_PAL_3A                      = 0x3A,
    MSG_PAL_3B                      = 0x3B,
    MSG_PAL_3C                      = 0x3C,
    MSG_PAL_3D                      = 0x3D,
    MSG_PAL_3E                      = 0x3E,
    MSG_PAL_3F                      = 0x3F,
    MSG_PAL_40                      = 0x40,
    MSG_PAL_41                      = 0x41,
    MSG_PAL_42                      = 0x42,
    MSG_PAL_43                      = 0x43,
    MSG_PAL_44                      = 0x44,
    MSG_PAL_45                      = 0x45,
    MSG_PAL_46                      = 0x46,
    MSG_PAL_47                      = 0x47,
    MSG_PAL_48                      = 0x48,
    MSG_PAL_49                      = 0x49,
    MSG_PAL_4A                      = 0x4A,
    MSG_PAL_4B                      = 0x4B,
    MSG_PAL_4C                      = 0x4C,
    MSG_PAL_4D                      = 0x4D,
    MSG_PAL_4E                      = 0x4E,
    MSG_PAL_4F                      = 0x4F,
    MSG_PAL_50                      = 0x50
};

enum MsgChars {
    MSG_CHAR_NOTE                   = 0x00,
    MSG_CHAR_EXCLAMTION             = 0x01,
    MSG_CHAR_BACKSLASH              = 0x02,
    MSG_CHAR_HASH                   = 0x03,
    MSG_CHAR_DOLLAR                 = 0x04,
    MSG_CHAR_PERCENT                = 0x05,
    MSG_CHAR_AND                    = 0x06,
    MSG_CHAR_APOSTROPHE             = 0x07,
    MSG_CHAR_LPAREN                 = 0x08,
    MSG_CHAR_RPAREN                 = 0x09,
    MSG_CHAR_TIMES                  = 0x0A,
    MSG_CHAR_PLUS                   = 0x0B,
    MSG_CHAR_COMMA                  = 0x0C,
    MSG_CHAR_MINUS                  = 0x0D,
    MSG_CHAR_PERIOD                 = 0x0E,
    MSG_CHAR_FORWARDSLASH           = 0x0F,
    MSG_CHAR_DIGIT_0                = 0x10,
    MSG_CHAR_DIGIT_1                = 0x11,
    MSG_CHAR_DIGIT_2                = 0x12,
    MSG_CHAR_DIGIT_3                = 0x13,
    MSG_CHAR_DIGIT_4                = 0x14,
    MSG_CHAR_DIGIT_5                = 0x15,
    MSG_CHAR_DIGIT_6                = 0x16,
    MSG_CHAR_DIGIT_7                = 0x17,
    MSG_CHAR_DIGIT_8                = 0x18,
    MSG_CHAR_DIGIT_9                = 0x19,
    MSG_CHAR_COLON                  = 0x1A,
    MSG_CHAR_SEMICOLON              = 0x1B,
    MSG_CHAR_LESS_THAN              = 0x1C,
    MSG_CHAR_EQUAL                  = 0x1D,
    MSG_CHAR_GREATER_THAN           = 0x1E,
    MSG_CHAR_QUESTION               = 0x1F,
    MSG_CHAR_AT                     = 0x20,
    MSG_CHAR_UPPER_A                = 0x21,
    MSG_CHAR_UPPER_B                = 0x22,
    MSG_CHAR_UPPER_C                = 0x23,
    MSG_CHAR_UPPER_D                = 0x24,
    MSG_CHAR_UPPER_E                = 0x25,
    MSG_CHAR_UPPER_F                = 0x26,
    MSG_CHAR_UPPER_G                = 0x27,
    MSG_CHAR_UPPER_H                = 0x28,
    MSG_CHAR_UPPER_I                = 0x29,
    MSG_CHAR_UPPER_J                = 0x2A,
    MSG_CHAR_UPPER_K                = 0x2B,
    MSG_CHAR_UPPER_L                = 0x2C,
    MSG_CHAR_UPPER_M                = 0x2D,
    MSG_CHAR_UPPER_N                = 0x2E,
    MSG_CHAR_UPPER_O                = 0x2F,
    MSG_CHAR_UPPER_P                = 0x30,
    MSG_CHAR_UPPER_Q                = 0x31,
    MSG_CHAR_UPPER_R                = 0x32,
    MSG_CHAR_UPPER_S                = 0x33,
    MSG_CHAR_UPPER_T                = 0x34,
    MSG_CHAR_UPPER_U                = 0x35,
    MSG_CHAR_UPPER_V                = 0x36,
    MSG_CHAR_UPPER_W                = 0x37,
    MSG_CHAR_UPPER_X                = 0x38,
    MSG_CHAR_UPPER_Y                = 0x39,
    MSG_CHAR_UPPER_Z                = 0x3A,
    MSG_CHAR_LBRACKET               = 0x3B,
    MSG_CHAR_YEN                    = 0x3C,
    MSG_CHAR_RBRACKET               = 0x3D,
    MSG_CHAR_CARET                  = 0x3E,
    MSG_CHAR_UNDERSCORE             = 0x3F,
    MSG_CHAR_BACKTICK               = 0x40,
    MSG_CHAR_LOWER_A                = 0x41,
    MSG_CHAR_LOWER_B                = 0x42,
    MSG_CHAR_LOWER_C                = 0x43,
    MSG_CHAR_LOWER_D                = 0x44,
    MSG_CHAR_LOWER_E                = 0x45,
    MSG_CHAR_LOWER_F                = 0x46,
    MSG_CHAR_LOWER_G                = 0x47,
    MSG_CHAR_LOWER_H                = 0x48,
    MSG_CHAR_LOWER_I                = 0x49,
    MSG_CHAR_LOWER_J                = 0x4A,
    MSG_CHAR_LOWER_K                = 0x4B,
    MSG_CHAR_LOWER_L                = 0x4C,
    MSG_CHAR_LOWER_M                = 0x4D,
    MSG_CHAR_LOWER_N                = 0x4E,
    MSG_CHAR_LOWER_O                = 0x4F,
    MSG_CHAR_LOWER_P                = 0x50,
    MSG_CHAR_LOWER_Q                = 0x51,
    MSG_CHAR_LOWER_R                = 0x52,
    MSG_CHAR_LOWER_S                = 0x53,
    MSG_CHAR_LOWER_T                = 0x54,
    MSG_CHAR_LOWER_U                = 0x55,
    MSG_CHAR_LOWER_V                = 0x56,
    MSG_CHAR_LOWER_W                = 0x57,
    MSG_CHAR_LOWER_X                = 0x58,
    MSG_CHAR_LOWER_Y                = 0x59,
    MSG_CHAR_LOWER_Z                = 0x5A,
    MSG_CHAR_LCURLY                 = 0x5B,
    MSG_CHAR_PIPE                   = 0x5C,
    MSG_CHAR_RCURLY                 = 0x5D,
    MSG_CHAR_TILDA                  = 0x5E,
    MSG_CHAR_DEGREE                 = 0x5F,
    MSG_CHAR_UPPER_A_GRAVE          = 0x60,
    MSG_CHAR_UPPER_A_ACUTE          = 0x61,
    MSG_CHAR_UPPER_A_CIRCUMFLEX     = 0x62,
    MSG_CHAR_UPPER_A_UMLAUT         = 0x63,
    MSG_CHAR_UPPER_C_CEDILLA        = 0x64,
    MSG_CHAR_UPPER_E_GRAVE          = 0x65,
    MSG_CHAR_UPPER_E_ACUTE          = 0x66,
    MSG_CHAR_UPPER_E_CIRCUMFLEX     = 0x67,
    MSG_CHAR_UPPER_E_UMLAUT         = 0x68,
    MSG_CHAR_UPPER_I_GRAVE          = 0x69,
    MSG_CHAR_UPPER_I_ACUTE          = 0x6A,
    MSG_CHAR_UPPER_I_CIRCUMFLEX     = 0x6B,
    MSG_CHAR_UPPER_I_UMLAUT         = 0x6C,
    MSG_CHAR_UPPER_N_TILDE          = 0x6D,
    MSG_CHAR_UPPER_O_GRAVE          = 0x6E,
    MSG_CHAR_UPPER_O_ACUTE          = 0x6F,
    MSG_CHAR_UPPER_O_CIRCUMFLEX     = 0x70,
    MSG_CHAR_UPPER_O_UMLAUT         = 0x71,
    MSG_CHAR_UPPER_U_GRAVE          = 0x72,
    MSG_CHAR_UPPER_U_ACUTE          = 0x73,
    MSG_CHAR_UPPER_U_CIRCUMFLEX     = 0x74,
    MSG_CHAR_UPPER_U_UMLAUT         = 0x75,
    MSG_CHAR_SHARP_S                = 0x76,
    MSG_CHAR_LOWER_A_GRAVE          = 0x77,
    MSG_CHAR_LOWER_A_ACUTE          = 0x78,
    MSG_CHAR_LOWER_A_CIRCUMFLEX     = 0x79,
    MSG_CHAR_LOWER_A_UMLAUT         = 0x7A,
    MSG_CHAR_LOWER_C_CEDILLA        = 0x7B,
    MSG_CHAR_LOWER_E_GRAVE          = 0x7C,
    MSG_CHAR_LOWER_E_ACUTE          = 0x7D,
    MSG_CHAR_LOWER_E_CIRCUMFLEX     = 0x7E,
    MSG_CHAR_LOWER_E_UMLAUT         = 0x7F,
    MSG_CHAR_LOWER_I_GRAVE          = 0x80,
    MSG_CHAR_LOWER_I_ACUTE          = 0x81,
    MSG_CHAR_LOWER_I_CIRCUMFLEX     = 0x82,
    MSG_CHAR_LOWER_I_UMLAUT         = 0x83,
    MSG_CHAR_LOWER_N_TILDE          = 0x84,
    MSG_CHAR_LOWER_O_GRAVE          = 0x85,
    MSG_CHAR_LOWER_O_ACUTE          = 0x86,
    MSG_CHAR_LOWER_O_CIRCUMFLEX     = 0x87,
    MSG_CHAR_LOWER_O_UMLAUT         = 0x88,
    MSG_CHAR_LOWER_U_GRAVE          = 0x89,
    MSG_CHAR_LOWER_U_ACUTE          = 0x8A,
    MSG_CHAR_LOWER_U_CIRCUMFLEX     = 0x8B,
    MSG_CHAR_LOWER_U_UMLAUT         = 0x8C,
    MSG_CHAR_INVERTED_EXCLAMTION    = 0x8D,
    MSG_CHAR_INVERTED_QUESTION      = 0x8E,
    MSG_CHAR_FEM_ORDINAL            = 0x8F,
    MSG_CHAR_HEART                  = 0x90,
    MSG_CHAR_STAR                   = 0x91,
    MSG_CHAR_UP                     = 0x92,
    MSG_CHAR_DOWN                   = 0x93,
    MSG_CHAR_LEFT                   = 0x94,
    MSG_CHAR_RIGHT                  = 0x95,
    MSG_CHAR_CIRCLE                 = 0x96,
    MSG_CHAR_CROSS                  = 0x97,
    MSG_CHAR_BUTTON_A               = 0x98,
    MSG_CHAR_BUTTON_B               = 0x99,
    MSG_CHAR_BUTTON_L               = 0x9A,
    MSG_CHAR_BUTTON_R               = 0x9B,
    MSG_CHAR_BUTTON_Z               = 0x9C,
    MSG_CHAR_BUTTON_C_UP            = 0x9D,
    MSG_CHAR_BUTTON_C_DOWN          = 0x9E,
    MSG_CHAR_BUTTON_C_LEFT          = 0x9F,
    MSG_CHAR_BUTTON_C_RIGHT         = 0xA0,
    MSG_CHAR_BUTTON_START           = 0xA1,
    MSG_CHAR_DOUBLE_QUOTE_OPEN      = 0xA2,
    MSG_CHAR_DOUBLE_QUOTE_CLOSE     = 0xA3,
    MSG_CHAR_SINGLE_QUOTE_OPEN      = 0xA4,
    MSG_CHAR_SINGLE_QUOTE_CLOSE     = 0xA5,
    // 0xA6 to 0xEF are unused

    // special character codes used when reading from the source buffer
    MSG_CHAR_READ_ENDL              = 0xF0,
    MSG_CHAR_READ_WAIT              = 0xF1,
    MSG_CHAR_READ_PAUSE             = 0xF2,
    MSG_CHAR_READ_VARIANT0          = 0xF3,
    MSG_CHAR_READ_VARIANT1          = 0xF4,
    MSG_CHAR_READ_VARIANT2          = 0xF5,
    MSG_CHAR_READ_VARIANT3          = 0xF6,
    MSG_CHAR_READ_SPACE             = 0xF7,
    MSG_CHAR_READ_FULL_SPACE        = 0xF8,
    MSG_CHAR_READ_HALF_SPACE        = 0xF9,
    MSG_CHAR_READ_UNK_CHAR_FA       = 0xFA,
    MSG_CHAR_READ_NEXT              = 0xFB,
    MSG_CHAR_READ_STYLE             = 0xFC,
    MSG_CHAR_READ_END               = 0xFD,
    // 0xFE unused
    MSG_CHAR_READ_FUNCTION          = 0xFF,

    // special character codes used when writing to the print buffer
    MSG_CONTROL_CHAR                = 0xF0,
    MSG_CHAR_PRINT_ENDL             = 0xF0,
    MSG_CHAR_PRINT_VARIANT0         = 0xF1,
    MSG_CHAR_PRINT_VARIANT1         = 0xF2,
    MSG_CHAR_PRINT_VARIANT2         = 0xF3,
    MSG_CHAR_PRINT_VARIANT3         = 0xF4,
    MSG_CHAR_PRINT_SPACE            = 0xF5,
    MSG_CHAR_PRINT_FULL_SPACE       = 0xF6,
    MSG_CHAR_PRINT_HALF_SPACE       = 0xF7,
    MSG_CHAR_PRINT_STYLE            = 0xF8,
    MSG_CHAR_PRINT_UNK_CHAR_FA      = 0xF9,
    MSG_CHAR_PRINT_NEXT             = 0xFA,
    MSG_CHAR_PRINT_END              = 0xFB,
    // FC unused
    // FD unused
    // FE unused
    MSG_CHAR_PRINT_FUNCTION         = 0xFF
};

enum MsgFunctionCodes {
    // function codes used when reading from the source buffer
    MSG_READ_FUNC_FONT                   = 0x00,
    MSG_READ_FUNC_VARIANT                = 0x01,
    MSG_READ_FUNC_SET_FRAME_PALETTE      = 0x02,
    MSG_READ_FUNC_RESET_GFX              = 0x03,
    MSG_READ_FUNC_YIELD                  = 0x04,
    MSG_READ_FUNC_COLOR                  = 0x05,
    MSG_READ_FUNC_NO_SKIP                = 0x06,
    MSG_READ_FUNC_INPUT_OFF              = 0x07,
    MSG_READ_FUNC_INPUT_ON               = 0x08,
    MSG_READ_FUNC_DELAY_OFF              = 0x09,
    MSG_READ_FUNC_DELAY_ON               = 0x0A,
    MSG_READ_FUNC_SPACING                = 0x0B,
    MSG_READ_FUNC_SCROLL                 = 0x0C,
    MSG_READ_FUNC_SIZE                   = 0x0D,
    MSG_READ_FUNC_SIZE_RESET             = 0x0E,
    MSG_READ_FUNC_SPEED                  = 0x0F,
    MSG_READ_FUNC_SET_X                  = 0x10,
    MSG_READ_FUNC_SET_Y                  = 0x11,
    MSG_READ_FUNC_RIGHT                  = 0x12,
    MSG_READ_FUNC_DOWN                   = 0x13,
    MSG_READ_FUNC_UP                     = 0x14,
    MSG_READ_FUNC_INLINE_IMAGE           = 0x15,
    MSG_READ_FUNC_ANIM_SPRITE            = 0x16,
    MSG_READ_FUNC_ITEM_ICON              = 0x17,
    MSG_READ_FUNC_IMAGE                  = 0x18,
    MSG_READ_FUNC_HIDE_IMAGE             = 0x19,
    MSG_READ_FUNC_ANIM_DELAY             = 0x1A,
    MSG_READ_FUNC_ANIM_LOOP              = 0x1B,
    MSG_READ_FUNC_ANIM_DONE              = 0x1C,
    MSG_READ_FUNC_SET_CURSOR             = 0x1D,
    MSG_READ_FUNC_CURSOR                 = 0x1E,
    MSG_READ_FUNC_END_CHOICE             = 0x1F,
    MSG_READ_FUNC_SET_CANCEL             = 0x20,
    MSG_READ_FUNC_OPTION                 = 0x21,
    MSG_READ_FUNC_SAVE_POS               = 0x22,
    MSG_READ_FUNC_RESTORE_POS            = 0x23,
    MSG_READ_FUNC_SAVE_COLOR             = 0x24,
    MSG_READ_FUNC_RESTORE_COLOR          = 0x25,
    MSG_READ_FUNC_START_FX               = 0x26,
    MSG_READ_FUNC_END_FX                 = 0x27,
    MSG_READ_FUNC_VAR                    = 0x28,
    MSG_READ_FUNC_CENTER_X               = 0x29,
    MSG_READ_FUNC_SET_REWIND             = 0x2A,
    MSG_READ_FUNC_ENABLE_CDOWN_NEXT      = 0x2B,
    MSG_READ_FUNC_CUSTOM_VOICE           = 0x2C,
    MSG_READ_FUNC_VOLUME                 = 0x2E,
    MSG_READ_FUNC_VOICE                  = 0x2F,
    // function codes used when writing to the print buffer
    MSG_PRINT_FUNC_FONT                  = 0x00,
    MSG_PRINT_FUNC_VARIANT               = 0x01,
    MSG_PRINT_FUNC_SET_FRAME_PALETTE     = 0x16,
    MSG_PRINT_RESET_GFX                  = 0x17,
    MSG_PRINT_FUNC_COLOR                 = 0x04,
    MSG_PRINT_FUNC_SPACING               = 0x05,
    MSG_PRINT_FUNC_SCROLL                = 0xFA,
    MSG_PRINT_FUNC_SIZE                  = 0x06,
    MSG_PRINT_FUNC_SIZE_RESET            = 0x07,
    MSG_PRINT_FUNC_SET_X                 = 0x08,
    MSG_PRINT_FUNC_SET_Y                 = 0x09,
    MSG_PRINT_FUNC_RIGHT                 = 0x0A,
    MSG_PRINT_FUNC_DOWN                  = 0x0B,
    MSG_PRINT_FUNC_UP                    = 0x0C,
    MSG_PRINT_FUNC_INLINE_IMAGE          = 0x0E,
    MSG_PRINT_FUNC_ANIM_SPRITE           = 0x0F,
    MSG_PRINT_FUNC_ITEM_ICON             = 0x10,
    MSG_PRINT_FUNC_ANIM_DELAY            = 0x11,
    MSG_PRINT_FUNC_ANIM_LOOP             = 0x12,
    MSG_PRINT_FUNC_ANIM_DONE             = 0x13,
    MSG_PRINT_FUNC_CURSOR                = 0x14,
    MSG_PRINT_FUNC_OPTION                = 0x15,
    MSG_PRINT_FUNC_SAVE_POS              = 0x18,
    MSG_PRINT_FUNC_RESTORE_POS           = 0x19,
    MSG_PRINT_FUNC_SAVE_COLOR            = 0x1A,
    MSG_PRINT_FUNC_RESTORE_COLOR         = 0x1B,
    MSG_PRINT_FUNC_START_FX              = 0x1C,
    MSG_PRINT_FUNC_END_FX                = 0x1D,
    MSG_PRINT_FUNC_CENTER_X              = 0x1E
};

enum MsgEffectCodes {
    MSG_FX_SHAKE                    = 0x00,
    MSG_FX_WAVE                     = 0x01,
    MSG_FX_NOISE_OUTLINE            = 0x02,
    MSG_FX_STATIC                   = 0x03,
    MSG_FX_BLUR                     = 0x05,
    MSG_FX_RAINBOW                  = 0x06,
    MSG_FX_DITHER_FADE              = 0x07,
    MSG_FX_GLOBAL_WAVE              = 0x08,
    MSG_FX_GLOBAL_RAINBOW           = 0x09,
    MSG_FX_RISE_PRINT               = 0x0A,
    MSG_FX_GROW_PRINT               = 0x0B,
    MSG_FX_SIZE_JITTER              = 0x0C,
    MSG_FX_SIZE_WAVE                = 0x0D,
    MSG_FX_DROP_SHADOW              = 0x0E
};

enum MsgEffectFlags {
    MSG_FX_FLAG_SHAKE               = 0x00001,
    MSG_FX_FLAG_WAVE                = 0x00002,
    MSG_FX_FLAG_NOISE_OUTLINE       = 0x00004,
    MSG_FX_FLAG_BLUR                = 0x00020,
    MSG_FX_FLAG_RAINBOW             = 0x00040,
    MSG_FX_FLAG_DITHER_FADE         = 0x00080,
    MSG_FX_FLAG_GLOBAL_WAVE         = 0x00200,
    MSG_FX_FLAG_GLOBAL_RAINBOW      = 0x00400,
    MSG_FX_FLAG_RISE_PRINT          = 0x00800,
    MSG_FX_FLAG_GROW_PRINT          = 0x01000,
    MSG_FX_FLAG_SIZE_JITTER         = 0x02000,
    MSG_FX_FLAG_SIZE_WAVE           = 0x04000,
    MSG_FX_FLAG_DROP_SHADOW         = 0x08000,
    MSG_FX_FLAG_STATIC              = 0x10000
};

enum MsgStyles {
    MSG_STYLE_RIGHT                 = 0x01,
    MSG_STYLE_LEFT                  = 0x02,
    MSG_STYLE_CENTER                = 0x03,
    MSG_STYLE_TATTLE                = 0x04,
    MSG_STYLE_CHOICE                = 0x05,
    MSG_STYLE_INSPECT               = 0x06,
    MSG_STYLE_SIGN                  = 0x07,
    MSG_STYLE_LAMPPOST              = 0x08,
    MSG_STYLE_POSTCARD              = 0x09,
    MSG_STYLE_POPUP                 = 0x0A,
    MSG_STYLE_B                     = 0x0B,
    MSG_STYLE_UPGRADE               = 0x0C,
    MSG_STYLE_NARRATE               = 0x0D,
    MSG_STYLE_EPILOGUE              = 0x0E,
    MSG_STYLE_F                     = 0x0F
};

enum MsgFonts {
    MSG_FONT_NORMAL                 = 0,
    MSG_FONT_MENU                   = 1,
    MSG_FONT_TITLE                  = 3,
    MSG_FONT_SUBTITLE               = 4
};

enum MsgVoices {
    MSG_VOICE_NORMAL                = 0,
    MSG_VOICE_BOWSER                = 1,
    MSG_VOICE_STAR                  = 2
};

enum MsgPrintModeFlags {
    MSG_PRINT_FLAG_1                = 0x001,
    MSG_PRINT_FLAG_2                = 0x002,
    MSG_PRINT_FLAG_10               = 0x010,
    MSG_PRINT_FLAG_20               = 0x020,
    MSG_PRINT_FLAG_40               = 0x040,
    MSG_PRINT_FLAG_80               = 0x080,
    MSG_PRINT_FLAG_100              = 0x100,
};

enum MsgStateFlags {
    MSG_STATE_FLAG_1                = 0x000001,
    MSG_STATE_FLAG_2                = 0x000002,
    MSG_STATE_FLAG_4                = 0x000004,
    MSG_STATE_FLAG_10               = 0x000010,
    MSG_STATE_FLAG_20               = 0x000020,
    MSG_STATE_FLAG_40               = 0x000040,
    MSG_STATE_FLAG_80               = 0x000080,
    MSG_STATE_FLAG_100              = 0x000100,
    MSG_STATE_FLAG_4000             = 0x004000,
    MSG_STATE_FLAG_8000             = 0x008000,
    MSG_STATE_FLAG_10000            = 0x010000,
    MSG_STATE_FLAG_20000            = 0x020000,
    MSG_STATE_FLAG_40000            = 0x040000,
    MSG_STATE_FLAG_80000            = 0x080000,
    MSG_STATE_FLAG_800000           = 0x800000,
};

enum MsgDelayFlags {
    MSG_DELAY_FLAG_1                = 0x000001,
    MSG_DELAY_FLAG_2                = 0x000002,
    MSG_DELAY_FLAG_4                = 0x000004,
};

enum MsgWindowStates {
    MSG_WINDOW_STATE_DONE               = 0x0,
    MSG_WINDOW_STATE_INIT               = 0x1,
    MSG_WINDOW_STATE_OPENING            = 0x2,
    MSG_WINDOW_STATE_CLOSING            = 0x3,
    MSG_WINDOW_STATE_PRINTING           = 0x4,
    MSG_WINDOW_STATE_WAITING            = 0x5,
    MSG_WINDOW_STATE_SCROLLING          = 0x6,
    MSG_WINDOW_STATE_WAITING_FOR_CHOICE = 0x7,
    MSG_WINDOW_STATE_SCROLLING_BACK     = 0x8,
    MSG_WINDOW_STATE_VIEWING_PREV       = 0x9,
    MSG_WINDOW_STATE_A                  = 0xA,
    MSG_WINDOW_STATE_B                  = 0xB,
    MSG_WINDOW_STATE_C                  = 0xC,
    MSG_WINDOW_STATE_D                  = 0xD,
    MSG_WINDOW_STATE_E                  = 0xE,
};

#endif
